{"version":3,"sources":["images/x.svg","containers/market/orderlist/orderlist.js","containers/market/limitorder/limitorder.js","containers/market/marketorder/marketorder.js","containers/market/myorders/myorders.js","containers/market/stats/chart/chart.js","containers/market/stats/stats.js","containers/market/markethistory/markethistory.js","containers/market/myhistory/myhistory.js","containers/market/sidebar/sidebar.js","containers/market/market.js","containers/home/home.js","containers/infobar/wrapstation/wrapstation.js","containers/infobar/infobar.js","containers/navbar/navbar.js","containers/App/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","OrderList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","orders","timeout","max_order","buildRow","bind","assertThisInitialized","updateOrders","nextProps","nextState","clearTimeout","getOrders","Math","max","apply","map","o","curr_1_amt","setTimeout","setState","drizzle","currencies","type","market","contracts","Market","length","token_addr_0","address","token_addr_1","pay_token","buy_token","SupportMethods","methods","getOffers","rawOrders","processOrders","n","i","id","maker","pay_amount","web3","utils","fromWei","toString","buy_amount","price","order","round","curr_0_amt","push","x","parts","split","replace","join","item","index","_this2","_this$props2","account","drizzleState","accounts","ratio","color_0","color_1","style","backgroundImage","concat","backgroundSize","backgroundRepeat","class_names","react_default","a","createElement","Table","Row","className","key","onClick","setSidebar","Cell","numberWithCommas","textAlign","striped","basic","celled","unstackable","Header","HeaderCell","Body","Component","LimitOrder","loading","init","error","success","amount_0","ui_amount_0","amount_1","ui_amount_1","currency_0_balance","currency_1_balance","bignumbers","timer","handleSubmit","updateBalances","flashSuccess","flashError","generateBigNumbers","balanceOf","toBN","curr_gem_0","curr_gem_1","data","pay_amt","pay_gem","buy_amt","buy_gem","console","log","offer","send","from","gasPrice","toWei","on","_this3","value","test","amount_1_bn","amount_0_bn","price_bn","one_bn","mul","div","err","_this4","_this$state2","can_buy","can_sell","curr_0_balance","curr_1_balance","gte","gt","side_text","Loader","active","inline","size","Form","Field","Input","label","content","labelPosition","placeholder","onChange","e","handlePriceChange","target","Group","widths","disabled","handleAmountChange","Button","inverted","handleAmountPercentageChange","color","MarketOrder","amounts","ui_amounts","handleMarketBuy","handleMarketSell","_this$state","min_fill_amount","sellAllAmount","_this$props3","_this$props4","_this$state3","reset","_this5","_this$state4","_this5$state","_this$state5","_this$state6","new_amounts","slice","new_ui_amounts","ui_amount","amount_bn","_this$state7","_this6","_this$state8","side_texts","Grid","divided","columns","relaxed","stackable","Column","verticalAlign","MyOrders","buy_orders","sell_orders","sort","b","parseInt","cancel","cacheSend","orders_table","background_item","cancelOrder","selectable","styler","width","CrossHairs","_this$props","y","pointerEvents","stroke","x1","y1","x2","y2","height","React","Chart","handleTrackerChange","tracker","handleTimeRangeChange","timerange","handleMouseMove","chart_data","volume_data","selection","points","buildChartPoints","TimeSeries","name","volume_points","last_item","Index","getIndexString","Date","reverse","chart","start_time","range","begin","end_time","end","setHours","getHours","min_val","crop","min","max_val","padding","max_volume","entry","timeRange","minTime","maxTime","timeAxisAngledLabels","timeAxisHeight","paddingLeft","paddingRight","enablePanZoom","minDuration","onTrackerChanged","onBackgroundClick","onTimeRangeChanged","onMouseMove","showGrid","background","borderStyle","borderWidth","borderColor","paddingTop","timeAxisStyle","ticks","opacity","stroke-dasharray","values","fill","font-size","hideAxisLine","format","axis","series","interpolation","onSelectionChange","chart_CrossHairs","Stats","stats","num_users","num_buys","num_sells","buy_volume","sell_volume","last_price","last_type","subsciption","buildStat","getPastOrders","updateStats","subscribeToEvents","subscription","unsubscribe","are_stats_updated","old_stats","new_stats","users","document","title","eth","getBlockNumber","latestBlock","curr_1_addr","curr_2_addr","hashKey1","soliditySha3","hashKey2","Contract","abi","events","LogTake","filter","pair","fromBlock","event","eventsToOrders","buy_addr","pay_addr","returnValues","getType","getPrice","timestamp","toLocaleTimeString","toLocaleDateString","raw_timestamp","curr_1","curr_2","taker","getPastEvents","toBlock","first","second","keys","statistics","stats_chart_chart","mobile","tablet","computer","List","Item","Content","Description","MarketHistory","offers_table","MyHistory","subscriptions","taker_subscription","maker_subscription","true_type","taker_events","maker_events","SideBar","executeTrade","will_receive","sidebar_info","inputs","will_receive_wholenums","buy","button_loading","visible","amount","info","owner","button_success","button_error","updateInfo","stopLoading","getOffer","getOwner","toggleSidebar","internal_value","ui_value","balance","lt","action","subtitle","updated_info","getUpdatedInfo","Sidebar","as","Segment","animation","direction","Icon","giving","currency","receive_currency","offered","max_take","getMaxTake","calcWillReceive","substring","button_text","handleUserChange","lte","numBuys","numSells","buy_token_addr","sell_token_addr","numBuysKey","getOfferCount","cacheCall","numSellsKey","assign","activity_panes","menuItem","render","Tab","Pane","myorders_myorders","myhistory_myhistory","markethistory_markethistory","buy_panes","limitorder_limitorder","marketorder_marketorder","sidebar_sidebar","stats_stats","menu","fluid","tabular","attached","panes","orderlist_orderlist","Home","Transition","transitionOnMount","duration","WrapStation","onWrap","deposit","WETH","amount_wrap","ui_amount_wrap","onUnwrap","withdraw","amount_unwrap","ui_amount_unwrap","weth_balance","eth_balance","onSubmit","handleUserUpdate","handlePercentUpdate","Infobar","context","approved","DAI","MKR","ETH","market_address","dai_balance","mkr_balance","allowance","weth_approval","dai_approval","mkr_approval","accountBalances","approve","approveCurrencyForAmount","current_approval","approveCurrency","unapproveCurrency","raw_balance","raw_allowance","padded","closeSidebar","vals","obj","getUIBalance","getUIAllowance","ui_account","x_icon","Checkbox","toggle","checked","toggleApproval","wrapstation_wrapstation","Navbar","handleItemClick","_ref","activeItem","toggleVisible","children","other_buttons","href","Responsive","onlyMobile","Menu","borderless","fixed","src","logo","alt","Dropdown","text","button","idx","Link","to","position","infobar_infobar","minWidth","onlyTablet","secondary","vertical","handleToggle","App","store","subscribe","getState","drizzleStatus","initialized","HashRouter","navbar_navbar","Switch","Route","exact","path","home_home","containers_market_market","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","Web3","givenProvider","config","require","erc20Abi","WEthAbi","MatchingMarketAbi","SupportMethodsAbi","options","contractName","web3Contract","interface","polls","blocks","syncAlways","drizzleStore","generateStore","Drizzle","ReactDOM","containers_App_App","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c4b16cf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/x.23ec4264.svg\";","import React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nimport './orderlist.css'\n\nclass OrderList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      orders: null,\n      timeout: null,\n      max_order: null\n    }\n\n    this.buildRow = this.buildRow.bind(this)\n    this.updateOrders = this.updateOrders.bind(this)\n  }\n\n  async componentDidMount() {\n    this.updateOrders()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextState.orders !== this.state.orders) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  componentWillUnmount() {\n    if(this.state.timeout !== null) {\n      clearTimeout(this.state.timeout)\n    }\n  }\n\n  async updateOrders() {\n    var orders = await this.getOrders()\n    var max_order = Math.max.apply(Math, orders.map(function(o) { return o.curr_1_amt; }))\n    var timeout = setTimeout(this.updateOrders, 5000)\n    this.setState({ orders, timeout, max_order })\n  }\n\n  async getOrders() {\n    var { drizzle, currencies, type } = this.props\n    var market = drizzle.contracts.Market\n\n    if(currencies.length === 2) {\n      var token_addr_0 = drizzle.contracts[currencies[0]].address\n      var token_addr_1 = drizzle.contracts[currencies[1]].address\n\n      var pay_token = null\n      var buy_token = null\n\n      if(type === \"BUY\") {\n        pay_token = token_addr_1\n        buy_token = token_addr_0\n      } else {\n        pay_token = token_addr_0\n        buy_token = token_addr_1\n      }\n\n      const rawOrders = await drizzle.contracts.SupportMethods.methods.getOffers(market.address, pay_token, buy_token).call()\n      var orders = []\n      if(rawOrders) {\n        orders = this.processOrders(rawOrders)\n      }\n      return orders\n    }\n  }\n\n  processOrders(rawOrders) {\n    var { type } = this.props\n\n    var n = rawOrders[\"ids\"].length\n    var orders = []\n    for(var i = 0; i < n; i++) {\n      if(rawOrders[\"ids\"][i] !== \"0\") {\n        var id = rawOrders[\"ids\"][i]\n        var maker = rawOrders[\"owners\"][i]\n        var pay_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"payAmts\"][i].toString(), 'ether')\n        var buy_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"buyAmts\"][i].toString(), 'ether') \n        var price = 0\n        var order = {}\n        if(type === \"BUY\") {\n          price = Math.round(pay_amount / buy_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": buy_amount,\n            \"curr_1_amt\": pay_amount,\n            \"id\": id,\n            \"type\": type,\n            \"maker\": maker\n          }\n        } else {\n          price = Math.round(buy_amount / pay_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": pay_amount,\n            \"curr_1_amt\": buy_amount,\n            \"id\": id,\n            \"type\": type,\n            \"maker\": maker\n          }\n        }\n        orders.push(order)\n      }\n    }\n\n    return orders\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  buildRow(item, index) {\n    var { max_order } = this.state\n    var { type, drizzleState } = this.props\n    var account = drizzleState.accounts[0]\n\n    var ratio = item[\"curr_1_amt\"]/max_order * 100\n    var direction = \"right\"\n    var color_0 = \"rgba(255, 0, 0, 0.2)\"\n    var color_1 = \"rgba(0,0,0,0)\"\n    if(type === \"BUY\") {\n      color_0 = \"rgba(0, 255, 0, 0.1)\"\n      color_1 = \"rgba(0, 0, 0, 0)\"\n    }\n    var style = { backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n      backgroundSize: `calc(${ratio}%) 100%`,\n      backgroundRepeat: `no-repeat`\n    }\n\n    var class_names = \"OrderList-table-row \"\n    if(account === item[\"maker\"]) {\n      class_names += \"OrderList-my-order\"\n    }\n\n    return (\n      <Table.Row className={class_names} key={item[\"id\"]} onClick={() => this.props.setSidebar(item) } style={style}>\n        <Table.Cell>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n        </Table.Cell>\n\n        <Table.Cell>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"curr_0_amt\"])}</div>\n        </Table.Cell>\n\n        <Table.Cell  textAlign='left'>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"curr_1_amt\"])}</div>\n        </Table.Cell>\n      </Table.Row>\n    )\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    if(!orders) {\n      return (\n        <div className=\"OrderList\">\n          <div className=\"OrderList-loading\">Error...</div>\n        </div>\n      )\n    }\n\n    if(orders.length === 0) {\n      return (\n        <div className=\"OrderList\">\n          <div className=\"OrderList-loading\">Loading...</div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"OrderList\">\n        <Table striped basic celled unstackable id=\"OrderList-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body id=\"OrderList-tableBody\">\n            {orders.map(this.buildRow)}\n          </Table.Body>\n        </Table>\n\n      </div>\n    );\n  }\n}\n\nexport default OrderList\n","import React, { Component } from 'react'\nimport { Input, Form, Button, Loader } from 'semantic-ui-react'\n\nimport './limitorder.css'\n\nclass LimitOrder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      init: false,\n      error: false,\n      success: false,\n      price: '',\n      amount_0: '',\n      ui_amount_0: '',\n      amount_1: '',\n      ui_amount_1: '',\n      currency_0_balance: \"0\",\n      currency_1_balance: \"0\",\n      bignumbers: [],\n      timer: null\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.updateBalances = this.updateBalances.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n    this.flashError = this.flashError.bind(this)\n  }\n\n  componentDidMount() {\n    this.generateBigNumbers()\n    this.updateBalances()\n  }\n\n  componentWillUnmount() {\n    if(this.state.timer) {\n      clearTimeout(this.state.timer)\n    }\n  }\n\n  async updateBalances() {\n    var { drizzle, drizzleState, currencies } = this.props\n    var { price, init } = this.state\n\n    if(!init || price !== '') {\n      const account = drizzleState.accounts[0]\n      const currency_0_balance = await drizzle.contracts[currencies[0]].methods.balanceOf(account).call()\n      const currency_1_balance = await drizzle.contracts[currencies[1]].methods.balanceOf(account).call()\n      this.setState({ currency_0_balance, currency_1_balance, init: true })  \n    }\n    var timer = setTimeout(this.updateBalances, 2500)\n    this.setState({ timer })\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  // Main function that interfaces and writes to the blockchain.\n  // This is the most important function here.\n  handleSubmit(type) {\n    // Set loading to true to update UI\n    this.setState({loading: true, error: false, success: false})\n\n    var { currencies, drizzle, drizzleState } = this.props\n    const web3 = drizzle.web3\n\n    // Get the important info for the transaction\n    const account = drizzleState.accounts[0]\n    var amount_0 = this.state.amount_0\n    var amount_1 = this.state.amount_1\n    var curr_gem_0 = drizzle.contracts[currencies[0]].address\n    var curr_gem_1 = drizzle.contracts[currencies[1]].address\n    var data = {}\n\n    // Set data to the correct value depending on if the order is a BUY or SELL\n    // Basically you just flip the currency 0 and currency 1\n    if(type === \"BUY\") {\n      data = {\n        pay_amt: amount_1,\n        pay_gem: curr_gem_1,\n        buy_amt: amount_0,\n        buy_gem: curr_gem_0\n      }\n    } else if(type === \"SELL\") {\n      data = {\n        pay_amt: amount_0,\n        pay_gem: curr_gem_0,\n        buy_amt: amount_1,\n        buy_gem: curr_gem_1\n      }\n    } else {\n      return\n    }\n\n    console.log(data)\n\n    this.props.drizzle.contracts.Market.methods.offer(data.pay_amt, data.pay_gem, data.buy_amt, data.buy_gem, 1).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', this.flashSuccess)\n      .on('error', this.flashError)\n\n    this.setState({ loading: true })\n  }\n\n  flashSuccess() {\n    this.setState({ success : true, loading: false })\n    setTimeout(() => this.setState({ success: false, price: '', amount_0: '0', ui_amount_0: '', amount_1: '0', ui_amount_1: '' }), 1500)\n  }\n\n  flashError() {\n    this.setState({ error: true, loading: false })\n    setTimeout(() => this.setState({ error: false }), 1500)\n  }\n\n  handlePriceChange(value) {\n    const web3 = this.props.drizzle.web3\n    if(/\\S/.test(value) && this.state.ui_amount_0 !== \"\") {\n      var price = value\n      var ui_amount_1 = this.state.ui_amount_0 * price\n      var amount_1_bn = web3.utils.toWei(ui_amount_1.toString(), 'ether')\n      this.setState({ price: price, amount_1: amount_1_bn.toString(), ui_amount_1: ui_amount_1.toString() })\n    } else {\n      this.setState({ price: value, amount_1: '0', ui_amount_1: '' })    \n    }\n  }\n\n  handleAmountChange(index, value) {\n    const web3 = this.props.drizzle.web3\n\n    if(/\\S/.test(value) && this.state.price !== \"\") {\n      var price = this.state.price\n      var ui_amount_0 = null\n      var ui_amount_1 = null\n      var amount_0_bn = null\n      var amount_1_bn = null\n\n      if(index === 0) {\n        ui_amount_0 = value\n        amount_0_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_0.toString(), 'ether'))\n        ui_amount_1 = ui_amount_0 * price\n        amount_1_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_1.toString(), 'ether'))\n      } else if(index === 1) {\n        ui_amount_1 = value\n        amount_1_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_1.toString(), 'ether'))\n        ui_amount_0 = ui_amount_1 / price\n        amount_0_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_0.toString(), 'ether'))\n      } else {\n        return\n      }\n\n      this.setState({ \n        amount_0: amount_0_bn.toString(), \n        ui_amount_0: ui_amount_0, \n        amount_1: amount_1_bn.toString(),\n        ui_amount_1: ui_amount_1,\n      })\n    } else {\n      this.setState({\n        amount_0: '0',\n        ui_amount_0: '',\n        amount_1: '0',\n        ui_amount_1: ''\n      })\n    }\n  }\n\n  handleAmountPercentageChange(index, value) {\n    const web3 = this.props.drizzle.web3\n    var price = this.state.price\n\n    var ui_amount_0 = null\n    var ui_amount_1 = null\n    var amount_0_bn = null\n    var amount_1_bn = null\n    var price_bn = web3.utils.toBN(web3.utils.toWei(price.toString(), 'ether'))\n    var one_bn = web3.utils.toBN(web3.utils.toWei('1'), 'ether')\n\n    if(index === 0) {\n      amount_0_bn = value\n      amount_1_bn = amount_0_bn.mul(price_bn).div(one_bn)\n    } else if(index === 1) {\n      amount_1_bn = value\n      amount_0_bn = amount_1_bn.mul(one_bn).div(price_bn)\n    } else {\n      return\n    }\n\n    try {\n      ui_amount_0 = web3.utils.fromWei(amount_0_bn.toString(), 'ether')\n    } catch(err) {\n      console.log(err)\n      ui_amount_0 = web3.utils.fromWei(\"0\", 'ether')\n    }\n\n    try {\n      ui_amount_1 = web3.utils.fromWei(amount_1_bn.toString(), 'ether')\n    } catch(err) {\n      console.log(err)\n      ui_amount_1 = web3.utils.fromWei(\"0\", 'ether')\n    }\n\n    this.setState({\n      amount_0: amount_0_bn.toString(),\n      ui_amount_0: ui_amount_0,\n      amount_1: amount_1_bn.toString(),\n      ui_amount_1: ui_amount_1\n    })\n  }\n\n  render() {\n    var { price, amount_0, amount_1, ui_amount_0, ui_amount_1, currency_0_balance, currency_1_balance, bignumbers, loading, success, error } = this.state\n    var { currencies } = this.props\n    const web3 = this.props.drizzle.web3\n    \n    var can_buy = false\n    var can_sell = false\n    \n    var curr_0_balance = web3.utils.toBN(currency_0_balance)\n    var curr_1_balance = web3.utils.toBN(currency_1_balance)\n    \n    var amount_0_bn = web3.utils.toBN(amount_0)\n    var amount_1_bn = web3.utils.toBN(amount_1)\n\n    if(curr_0_balance.gte(amount_0_bn) && amount_0_bn.gt(web3.utils.toBN(\"1000\"))) {\n      can_sell = true\n    }\n    \n    if(curr_1_balance.gte(amount_1_bn) && amount_1_bn.gt(web3.utils.toBN(\"1000\"))) {\n      can_buy = true\n    }\n\n    var side_text = \"\"\n    if(loading) {\n      side_text = (<span className=\"LimitOrder-color\"><Loader active inline size=\"small\"/> LOADING...</span>)\n    }\n    if(error) {\n      side_text = (<span className=\"red LimitOrder-color\">FAILED</span>)\n    }\n    if(success) {\n      side_text = (<span className=\"green LimitOrder-color\">SUCCESS</span>)\n    }\n\n    return (\n      <div className=\"LimitOrder\">\n        <Form size='tiny'>\n          <div className=\"LimitOrder-headers\">Price</div>\n          <Form.Field>\n            <Input\n              label={{ basic: true, content: currencies[1] + \" / \" + currencies[0]  }}\n              labelPosition='right'\n              placeholder='Enter Price...'\n              value={price}\n              onChange={(e) => { this.handlePriceChange(e.target.value) }}\n            />\n          </Form.Field>\n          <div className=\"LimitOrder-headers\">Amounts</div>\n          <Form.Group widths='equal'>\n            <Form.Field>\n              <Input\n                label={{ basic: true, content: currencies[0] }}\n                labelPosition='right'\n                placeholder='Enter Amount...'\n                disabled={price === ''}\n                value={ui_amount_0}\n                onChange={(e) => { this.handleAmountChange(0, e.target.value) }}\n                className=\"LimitOrder-amount-input\"\n              />\n              <Button.Group className=\"LimitOrder-mini-buttons\" size='mini' basic inverted>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[4]))} >25%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[2]))} >50%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance) } >100%</Button>\n              </Button.Group>\n            </Form.Field>\n            <Form.Field>\n              <Input\n                label={{ basic: true, content: currencies[1] }}\n                labelPosition='right'\n                placeholder='Enter Amount...'\n                disabled={price === ''}\n                value={ui_amount_1}\n                onChange={(e) => { this.handleAmountChange(1, e.target.value) }}\n                className=\"LimitOrder-amount-input\"\n              />\n              <Button.Group className=\"LimitOrder-mini-buttons\" size='mini' basic inverted>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[4]))} >25%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[2]))} >50%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance) } >100%</Button>\n              </Button.Group>\n            </Form.Field>\n          </Form.Group>\n          <Button className=\"LimitOrder-button\" color='green' disabled={!can_buy || loading} onClick={() => this.handleSubmit(\"BUY\")} >BUY {currencies[0]}</Button>\n          <Button className=\"LimitOrder-button\" color='red' disabled={!can_sell || loading} onClick={() => this.handleSubmit(\"SELL\")} >SELL {currencies[0]}</Button>\n          {side_text}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default LimitOrder\n","import React, { Component } from 'react'\nimport { Input, Form, Button, Loader, Grid } from 'semantic-ui-react'\n\nimport './marketorder.css'\n\nclass MarketOrder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: [false, false],\n      error: [false, false],\n      success: [false, false],\n      amounts: ['0', '0'],\n      ui_amounts: ['', ''],\n      currency_0_balance: \"0\",\n      currency_1_balance: \"0\",\n      bignumbers: [],\n      timer: null\n    }\n\n    this.handleMarketBuy = this.handleMarketBuy.bind(this)\n    this.handleMarketSell = this.handleMarketSell.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.updateBalances = this.updateBalances.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n    this.flashError = this.flashError.bind(this)\n  }\n\n  componentDidMount() {\n    this.generateBigNumbers()\n    this.updateBalances()\n  }\n\n  componentWillUnmount() {\n    if(this.state.timer) {\n      clearTimeout(this.state.timer)\n    }\n  }\n\n  async updateBalances() {\n    var { drizzle, drizzleState, currencies } = this.props\n\n    const account = drizzleState.accounts[0]\n    const currency_0_balance = await drizzle.contracts[currencies[0]].methods.balanceOf(account).call()\n    const currency_1_balance = await drizzle.contracts[currencies[1]].methods.balanceOf(account).call()\n    var timer = setTimeout(this.updateBalances, 2500)\n    this.setState({ timer, currency_0_balance, currency_1_balance })  \n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  handleMarketBuy() {\n    // Set loading to true to update UI\n    var { loading, error, success } = this.state\n    loading[1] = true\n    error[1] = false\n    success[1] = false\n    this.setState({ loading , error, success })\n    \n    var { amounts } = this.state\n    var { currencies, drizzle, drizzleState } = this.props\n    const web3 = drizzle.web3\n    const account = drizzleState.accounts[0]\n    \n    var curr_gem_0 = drizzle.contracts[currencies[0]].address\n    var curr_gem_1 = drizzle.contracts[currencies[1]].address\n\n    var data = {\n      pay_gem: curr_gem_1,\n      pay_amt: amounts[1],\n      buy_gem: curr_gem_0,\n      min_fill_amount: \"0\"\n    }\n\n    console.log(data)\n\n    drizzle.contracts.Market.methods.sellAllAmount(data[\"pay_gem\"], data[\"pay_amt\"], data[\"buy_gem\"], data[\"min_fill_amount\"]).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', () => this.flashSuccess(1))\n      .on('error', () => this.flashError(1))\n  }\n\n  handleMarketSell() {\n    // Set loading to true to update UI\n    var { loading, error, success } = this.state\n    loading[0] = true\n    error[0] = false\n    success[0] = false\n    this.setState({ loading , error, success })\n\n    var { amounts } = this.state\n    var { currencies, drizzle, drizzleState } = this.props\n    const web3 = drizzle.web3\n    const account = drizzleState.accounts[0]\n\n    var curr_gem_0 = drizzle.contracts[currencies[0]].address\n    var curr_gem_1 = drizzle.contracts[currencies[1]].address\n\n    var data = {\n      pay_gem: curr_gem_0,\n      pay_amt: amounts[0],\n      buy_gem: curr_gem_1,\n      min_fill_amount: \"0\"\n    }\n\n    console.log(data)\n\n    this.props.drizzle.contracts.Market.methods.sellAllAmount(data[\"pay_gem\"], data[\"pay_amt\"], data[\"buy_gem\"], data[\"min_fill_amount\"]).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', () => this.flashSuccess(0))\n      .on('error', () => this.flashError(0))\n  }\n\n  // Main function that interfaces and writes to the blockchain.\n  // This is the most important function here.\n  handleSubmit(type) {\n    // Set loading to true to update UI\n    this.setState({loading: true, error: false, success: false})\n\n    var { currencies, drizzle, drizzleState } = this.props\n    const web3 = drizzle.web3\n\n    // Get the important info for the transaction\n    const account = drizzleState.accounts[0]\n    var amount_0 = this.state.amount_0\n    var amount_1 = this.state.amount_1\n    var curr_gem_0 = drizzle.contracts[currencies[0]].address\n    var curr_gem_1 = drizzle.contracts[currencies[1]].address\n    var data = {}\n\n    // Set data to the correct value depending on if the order is a BUY or SELL\n    // Basically you just flip the currency 0 and currency 1\n    if(type === \"BUY\") {\n      data = {\n        pay_amt: amount_1,\n        pay_gem: curr_gem_1,\n        buy_amt: amount_0,\n        buy_gem: curr_gem_0\n      }\n    } else if(type === \"SELL\") {\n      data = {\n        pay_amt: amount_0,\n        pay_gem: curr_gem_0,\n        buy_amt: amount_1,\n        buy_gem: curr_gem_1\n      }\n    } else {\n      return\n    }\n\n    console.log(data)\n\n    this.props.drizzle.contracts.Market.methods.offer(data.pay_amt, data.pay_gem, data.buy_amt, data.buy_gem, 1).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', this.flashSuccess)\n      .on('error', this.flashError)\n\n    this.setState({ loading: true })\n  }\n\n  flashSuccess(index) {\n    var { loading, success, error } = this.state\n    loading[index] = false\n    success[index] = true\n    error[index] = false\n    this.setState({ loading, success, error })\n    setTimeout(() => this.reset(index), 1500)\n  }\n\n  flashError(index) {\n    var { loading, success, error } = this.state\n    loading[index] = false\n    success[index] = false\n    error[index] = true\n    this.setState({ loading, success, error })\n    setTimeout(() => {\n      var { loading, success, error } = this.state\n      loading[index] = false\n      success[index] = false\n      error[index] = false\n      this.setState({ error })\n    }, 1500)\n  }\n\n  reset(index) {\n    var { loading, success, error, amounts, ui_amounts } = this.state\n    loading[index] = false\n    success[index] = false\n    error[index] = false\n    amounts[index] = \"0\"\n    ui_amounts[index] = \"\"\n    this.setState({ loading, success, error, amounts, ui_amounts })\n  }\n\n  handleAmountChange(index, value) {\n    const web3 = this.props.drizzle.web3\n    var { amounts, ui_amounts } = this.state\n\n    var new_amounts = amounts.slice(0)\n    var new_ui_amounts = ui_amounts.slice(0)\n\n    try {\n      if(/\\S/.test(value)) {\n        var ui_amount = value\n        var amount_bn = web3.utils.toBN(web3.utils.toWei(ui_amount.toString(), 'ether'))\n\n        new_amounts[index] = amount_bn.toString()\n        new_ui_amounts[index] = ui_amount.toString()\n\n        this.setState({ \n          amounts: new_amounts,\n          ui_amounts: new_ui_amounts\n        })\n      } else {\n        new_amounts[index] = '0'\n        new_ui_amounts[index] = ''\n      }\n    } catch(err) {\n      console.log(err)\n      new_amounts[index] = '0'\n      new_ui_amounts[index] = ''\n    }\n\n    this.setState({ \n      amounts: new_amounts,\n      ui_amounts: new_ui_amounts\n    })\n  }\n\n  handleAmountPercentageChange(index, value) {\n    const web3 = this.props.drizzle.web3\n    var { amounts, ui_amounts } = this.state\n\n    var amount_bn = value\n    var ui_amount = web3.utils.fromWei(\"0\", 'ether')\n    try {\n      ui_amount = web3.utils.fromWei(amount_bn.toString(), 'ether')\n    } catch(err) {\n      console.log(err)\n    }\n\n    var new_amounts = amounts.slice(0)\n    var new_ui_amounts = ui_amounts.slice(0)\n\n    new_amounts[index] = amount_bn.toString()\n    new_ui_amounts[index] = ui_amount.toString()\n\n    this.setState({ \n      amounts: new_amounts,\n      ui_amounts: new_ui_amounts\n    })\n  }\n\n  render() {\n    var { amounts, ui_amounts, currency_0_balance, currency_1_balance, bignumbers, loading, success, error } = this.state\n    var { currencies } = this.props\n    const web3 = this.props.drizzle.web3\n    \n    var can_buy = false\n    var can_sell = false\n    \n    var curr_0_balance = web3.utils.toBN(currency_0_balance)\n    var curr_1_balance = web3.utils.toBN(currency_1_balance)\n    \n    var amount_0_bn = web3.utils.toBN(amounts[0])\n    var amount_1_bn = web3.utils.toBN(amounts[1])\n\n    if(curr_0_balance.gte(amount_0_bn) && amount_0_bn.gt(web3.utils.toBN(\"1000\"))) {\n      can_sell = true\n    }\n    \n    if(curr_1_balance.gte(amount_1_bn) && amount_1_bn.gt(web3.utils.toBN(\"1000\"))) {\n      can_buy = true\n    }\n\n    var side_texts = [\"\", \"\"]\n    for(var i = 0; i < 2; i++) {\n      if(loading[i]) {\n        side_texts[i] = (<span className=\"MarketOrder-color\"><Loader active inline size=\"small\"/> LOADING...</span>)\n      }\n      if(error[i]) {\n        side_texts[i] = (<span className=\"red MarketOrder-color\">FAILED</span>)\n      }\n      if(success[i]) {\n        side_texts[i] = (<span className=\"green MarketOrder-color\">SUCCESS</span>)\n      }\n    }\n\n    return (\n      <div className=\"MarketOrder\">\n        <Grid inverted divided columns={2} relaxed='very' stackable>\n          <Grid.Column verticalAlign='middle'>\n            <div className=\"MarketOrder-main-header\">Market <span className=\"green\">BUY</span></div>\n            <Form size='tiny'>\n              <div className=\"MarketOrder-headers\"><span className=\"green\">Buy</span> Allowance</div>\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <Input\n                    label={{ basic: true, content: currencies[1] }}\n                    labelPosition='right'\n                    placeholder='Enter Amount...'\n                    value={ui_amounts[1]}\n                    onChange={(e) => { this.handleAmountChange(1, e.target.value) }}\n                    className=\"MarketOrder-amount-input\"\n                  />\n                  <Button.Group className=\"MarketOrder-mini-buttons\" size='mini' basic inverted>\n                    <Button onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[4]))} >25%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[2]))} >50%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance) } >100%</Button>\n                  </Button.Group>\n                </Form.Field>\n              </Form.Group>\n              <Button className=\"MarketOrder-button\" color='green' disabled={!can_buy || loading[1] || error[1]} onClick={this.handleMarketBuy} >BUY {currencies[0]}</Button>\n              {side_texts[1]}\n            </Form>\n          </Grid.Column>\n\n          <Grid.Column verticalAlign='middle'>\n            <div className=\"MarketOrder-main-header\">Market <span className=\"red\">SELL</span></div>\n            <Form size='tiny'>\n              <div className=\"MarketOrder-headers\"><span className=\"red\">Sell</span> Allowance</div>\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <Input\n                    label={{ basic: true, content: currencies[0] }}\n                    labelPosition='right'\n                    placeholder='Enter Amount...'\n                    value={ui_amounts[0]}\n                    onChange={(e) => { this.handleAmountChange(0, e.target.value) }}\n                    className=\"MarketOrder-amount-input\"\n                  />\n                  <Button.Group className=\"MarketOrder-mini-buttons\" size='mini' basic inverted>\n                    <Button onClick={() => this.handleAmountChange(0, '') } >0%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[4]))} >25%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[2]))} >50%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance) } >100%</Button>\n                  </Button.Group>\n                </Form.Field>\n              </Form.Group>\n              <Button className=\"MarketOrder-button\" color='red' disabled={!can_sell || loading[0] || error[0]} onClick={this.handleMarketSell} >SELL {currencies[0]}</Button>\n              {side_texts[0]}\n            </Form>\n          </Grid.Column>\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nexport default MarketOrder\n","import React, { Component } from 'react'\nimport { Table, Button } from 'semantic-ui-react'\n\nimport './myorders.css'\n\nclass MyOrders extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      orders: [],\n      timer: null\n    }\n\n    this.updateOrders = this.updateOrders.bind(this)\n  }\n\n  async componentDidMount() {\n    this.updateOrders()\n  }\n\n  componentWillUnmount() {\n    if(this.state.timer) {\n      clearTimeout(this.state.timer)\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextState.orders !== this.state.orders) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  async updateOrders() {\n    var buy_orders = await this.getOrders(\"BUY\")\n    var sell_orders = await this.getOrders(\"SELL\")\n    var orders = buy_orders.concat(sell_orders)\n    orders.sort(function(a, b) {\n      return parseInt(a[3]) > parseInt(b[3]) ? 1 : -1\n    })\n    var timer = setTimeout(this.updateOrders, 5000)\n    this.setState({ timer, orders })\n  }\n\n  async getOrders(type) {\n    var { drizzle, currencies } = this.props\n    var market = drizzle.contracts.Market\n\n    if(currencies.length === 2) {\n      var token_addr_0 = drizzle.contracts[currencies[0]].address\n      var token_addr_1 = drizzle.contracts[currencies[1]].address\n\n      var pay_token = null\n      var buy_token = null\n\n      if(type === \"BUY\") {\n        pay_token = token_addr_1\n        buy_token = token_addr_0\n      } else {\n        pay_token = token_addr_0\n        buy_token = token_addr_1\n      }\n\n      const rawOrders = await drizzle.contracts.SupportMethods.methods.getOffers(market.address, pay_token, buy_token).call()\n      var orders = []\n      if(rawOrders) {\n        orders = this.processOrders(rawOrders, type)\n      }\n      return orders\n    }\n  }\n\n  processOrders(rawOrders, type) {\n    var { drizzleState } = this.props\n\n    let account = drizzleState.accounts[0]\n    var n = rawOrders[\"ids\"].length\n    var orders = []\n    for(var i = 0; i < n; i++) {\n      if(rawOrders[\"ids\"][i] !== \"0\" && rawOrders[\"owners\"][i] === account) {\n        var id = rawOrders[\"ids\"][i]\n        var pay_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"payAmts\"][i].toString(), 'ether')\n        var buy_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"buyAmts\"][i].toString(), 'ether') \n        var price = 0\n        var order = {}\n        if(type === \"BUY\") {\n          price = Math.round(pay_amount / buy_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": buy_amount,\n            \"curr_1_amt\": pay_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        } else {\n          price = Math.round(buy_amount / pay_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": pay_amount,\n            \"curr_1_amt\": buy_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        }\n        orders.push(order)\n      }\n    }\n\n    return orders\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  cancelOrder(id) {\n    var { Market } = this.props.drizzle.contracts\n    let account = this.props.drizzleState.accounts[0]\n\n    console.log(\"CANCEL ORDER \" + id)\n    const cancel = Market.methods.cancel\n    cancel.cacheSend(id, {from: account, gasPrice: this.props.drizzle.web3.utils.toWei('5', 'gwei') })\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    var orders_table = null\n    var background_item = null\n\n    if(orders.length === 0) {\n      background_item = (<div id=\"MyOrders-empty\">NO ORDERS</div>)\n    } else {\n      orders_table = (<Table.Body id=\"MyOrders-tableBody\">\n            {orders.map((item, index) => {\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MyOrders-color\">{item[\"type\"]}</span>) : (<span className=\"red\">{item[\"type\"]}</span>)\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell  textAlign='left'>\n                    <div className='MyOrders-table-entry'><Button className=\"MyOrders-button\" color='red' size='mini' inverted onClick={() => {this.cancelOrder(item[\"id\"])}}>CANCEL</Button></div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"curr_0_amt\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"curr_1_amt\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MyOrders\">\n        <Table selectable striped basic celled unstackable columns={5} textAlign='left' id=\"MyOrders-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Action</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { orders_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MyOrders\n","import React, { Component } from 'react'\nimport { Charts, ChartContainer, ChartRow, YAxis, LineChart, BarChart, styler, Resizable } from \"react-timeseries-charts\";\nimport { TimeSeries, Index } from \"pondjs\";\n\nimport './chart.css'\n\nconst style = styler([\n    { key: \"price\", color: \"white\", width: 1 },\n    { key: \"volume\", color: \"white\" }\n]);\n\nclass CrossHairs extends React.Component {\n    render() {\n        const { x, y } = this.props;\n        const style = { pointerEvents: \"none\", stroke: \"#ccc\" };\n        if (!(x === null) && !(y === null)) {\n            return (\n                <g>\n                    <line style={style} x1={0} y1={y} x2={this.props.width} y2={y} />\n                    <line style={style} x1={x} y1={0} x2={x} y2={this.props.height} />\n                </g>\n            );\n        } else {\n            return <g />;\n        }\n    }\n}\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      tracker: null,\n      chart_data: null,\n      volume_data: null,\n      timerange: null,\n      x: null,\n      y: null,\n      selection: null\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.orders.length > 0) {\n      var points = this.buildChartPoints(nextProps.orders)\n      var chart_data = new TimeSeries({\n        name: \"Chart\",\n        columns: [\"time\", \"price\"],\n        points: points\n      })\n      var timerange = chart_data.timerange()\n\n      var volume_points = []\n      for(var i = 0; i < nextProps.orders.length; i++) {\n        var item = nextProps.orders[i]\n        if(i > 0) {\n          var last_item = nextProps.orders[i-1]\n          if(item[\"raw_timestamp\"] === last_item[\"raw_timestamp\"]) {\n            volume_points[volume_points.length-1][1] += item[\"curr_2\"]\n          } else {\n            volume_points.push([Index.getIndexString(\"1s\", new Date(item[\"raw_timestamp\"])), item[\"curr_2\"]])\n          }\n        } else {\n          volume_points.push([Index.getIndexString(\"1s\", new Date(item[\"raw_timestamp\"])), item[\"curr_2\"]])\n        }\n      }\n\n      volume_points.reverse()\n      var volume_data = new TimeSeries({\n        name: \"Volume\",\n        columns: [\"index\", \"volume\"],\n        points: volume_points\n      })\n      this.setState({loading: false, chart_data, volume_data, timerange })\n    }\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  componentWillMount() {\n  }\n\n  handleTrackerChange = (tracker) => {\n    if(!tracker) {\n      this.setState({ tracker, x: null, y: null })\n    } else {\n      this.setState({ tracker })\n    }\n  }\n\n  handleTimeRangeChange = (timerange) => {\n    this.setState({ timerange })\n  }\n\n  handleMouseMove = (x, y) => {\n    this.setState({ x, y })\n  }\n\n  buildChartPoints(orders) {\n    var chart_data = orders.map(function(order) {\n      return [order[\"raw_timestamp\"], order[\"price\"], order[\"curr_2\"]]\n    })\n    chart_data.reverse()\n    return chart_data\n  }\n\n  render() {\n    var { loading, chart_data, volume_data, timerange } = this.state\n    var { currencies } = this.props\n\n    var chart = <div id=\"Chart-loading\">Loading...</div>\n    if(chart_data && !loading) {\n      var start_time = chart_data.range().begin()\n      var end_time = chart_data.range().end()\n      end_time.setHours(end_time.getHours() + 6)\n      var min_val = chart_data.crop(timerange).min(\"price\")\n      var max_val = chart_data.crop(timerange).max(\"price\")\n      var padding = (max_val - min_val)*0.1\n      var max_volume = volume_data.crop(timerange).max(\"volume\")\n      chart = (\n        <Resizable>\n          <ChartContainer \n            timeRange={timerange} \n            minTime={start_time} \n            maxTime={end_time} \n            timeAxisAngledLabels={true}\n            timeAxisHeight={80}\n            paddingLeft={20}\n            paddingRight={20}\n            enablePanZoom={true}\n            minDuration={1000 * 60 * 60}\n            onTrackerChanged={this.handleTrackerChange}\n            onBackgroundClick={() => this.setState({ selection: null })}\n            onTimeRangeChanged={this.handleTimeRangeChange}\n            onMouseMove={(x, y) => this.handleMouseMove(x, y) }\n            showGrid\n            style={{\n                background: \"#0b1215\",\n                borderStyle: \"solid\",\n                borderWidth: 1,\n                borderColor: \"#0b1215\",\n                paddingTop: \"1em\"\n            }}\n            timeAxisStyle={{\n                              ticks: {\n                                  stroke: \"#AAA\",\n                                  opacity: 0.25,\n                                  \"stroke-dasharray\": \"1,1\"\n                                  // Note: this isn't in camel case because this is\n                                  // passed into d3's style\n                              },\n                              values: {\n                                  fill: \"#AAA\",\n                                  \"font-size\": 12\n                              }\n                          }}\n          >\n            <ChartRow height=\"325\">\n              <YAxis \n                id=\"price\" \n                label={\"Price (\" + currencies[1] + \" / \" + currencies[0] + \")\"} \n                min={min_val - padding} \n                max={max_val + padding}\n                hideAxisLine \n                showGrid \n                width=\"50\" \n                type=\"linear\" \n                format=\",.2f\"\n                style={{\n                    ticks: {\n                        stroke: \"#AAA\",\n                        opacity: 0.25,\n                        \"stroke-dasharray\": \"1,1\"\n                        // Note: this isn't in camel case because this is\n                        // passed into d3's style\n                    }}}\n              />\n              <Charts>\n                <LineChart \n                  axis=\"price\"\n                  series={chart_data} \n                  columns={[\"price\"]} \n                  style={style}\n                  interpolation=\"curveStepAfter\"\n                  selection={this.state.selection}\n                  onSelectionChange={selection =>\n                                      this.setState({ selection })\n                                    }\n                />\n                <CrossHairs x={this.state.x} y={this.state.y} />\n              </Charts>\n            </ChartRow>\n            <ChartRow height=\"75\">\n              <YAxis \n                id=\"amount\" \n                label={\"Volume (\" + currencies[1] + \")\"} \n                min={0}\n                max={max_volume} \n                hideAxisLine\n                showGrid\n                width=\"50\" \n                type=\"linear\" \n                format=\",.2r\"\n                style={{\n                    ticks: {\n                        stroke: \"#AAA\",\n                        opacity: 0.25,\n                        \"stroke-dasharray\": \"1,1\"\n                        // Note: this isn't in camel case because this is\n                        // passed into d3's style\n                    }}}\n              />\n              <Charts>\n                <BarChart\n                    axis=\"amount\"\n                    style={style}\n                    columns={[\"volume\"]}\n                    series={volume_data}\n                />\n              </Charts>\n            </ChartRow>\n          </ChartContainer>\n        </Resizable>\n      )\n    }\n\n    return (\n      <div className=\"Chart\">\n        {chart}\n      </div>\n    );\n  }\n}\n\nexport default Chart\n\n                // <BandChart\n                //   axis=\"price\"\n                //   series={chart_data}\n                //   column=\"price\"\n                //   aggregation={ {\n                //       size: \"30m\",\n                //       reducers: {\n                //           outer: [percentile(5), percentile(95)],\n                //           inner: [percentile(25), percentile(75)]\n                //       }\n                //   } }\n                //   style={style}\n                //   interpolation=\"curveBasis\"\n                // />","import React, { Component } from 'react'\nimport { Grid, List } from 'semantic-ui-react'\nimport Chart from './chart/chart'\n\nimport './stats.css'\n\nclass Stats extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      orders: [],\n      stats: {\n        num_users: \"...\",\n        num_buys: \"...\",\n        num_sells: \"...\",\n        buy_volume: \"...\",\n        sell_volume: \"...\",\n        last_price: \"...\",\n        last_type: \"BUY\"\n      },\n      subsciption: null\n    }\n\n    this.buildStat = this.buildStat.bind(this)\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    this.setState({ orders }, this.updateStats)\n    var subscription = await this.subscribeToEvents()\n    this.setState({ subscription })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscription) {\n      this.state.subscription.unsubscribe()\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.are_stats_updated(this.state.stats, nextState.stats)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  are_stats_updated(old_stats, new_stats) {\n    if(old_stats[\"num_users\"] !== new_stats[\"num_users\"] ||\n      old_stats[\"num_buys\"] !== new_stats[\"num_buys\"] ||\n      old_stats[\"num_sells\"] !== new_stats[\"num_sells\"] ||\n      old_stats[\"buy_volume\"] !== new_stats[\"buy_volume\"] ||\n      old_stats[\"sell_volume\"] !== new_stats[\"sell_volume\"] ||\n      old_stats[\"last_price\"] !== new_stats[\"last_price\"] ||\n      old_stats[\"last_type\"] !== new_stats[\"last_type\"] ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  updateStats() {\n    var new_stats = {\n      num_users: 0,\n      num_buys: 0,\n      num_sells: 0,\n      buy_volume: 0,\n      sell_volume: 0,\n      last_price: 0,\n      last_type: \"BUY\"\n    }\n\n    var users = {}\n    var orders = this.state.orders\n    for(var i = 0; i < orders.length; i++) {\n      var order = orders[i]\n\n      // Check if maker is in user list\n      if(!(order[\"maker\"] in users)) {\n        users[order[\"maker\"]] = 1\n        new_stats[\"num_users\"] += 1\n      }\n\n      // Check if taker is in user list\n      if(!(order[\"taker\"] in users)) {\n        users[order[\"taker\"]] = 1\n        new_stats[\"num_users\"] += 1\n      }\n\n      // Check if order is buy or sell and add the necessary info\n      if(order[\"type\"] === \"BUY\") {\n        new_stats[\"num_buys\"] += 1\n        new_stats[\"buy_volume\"] += order[\"curr_2\"]\n      } else if(order[\"type\"] === \"SELL\") {\n        new_stats[\"num_sells\"] += 1\n        new_stats[\"sell_volume\"] += order[\"curr_2\"]\n      }\n    }\n\n    if(orders.length > 0) {\n      new_stats[\"last_price\"] = Math.round(orders[0][\"price\"] * 100) / 100\n      new_stats[\"last_type\"] = orders[0][\"type\"]\n      new_stats[\"buy_volume\"] = Math.round(new_stats[\"buy_volume\"] * 100) / 100\n      new_stats[\"sell_volume\"] = Math.round(new_stats[\"sell_volume\"] * 100) / 100\n    }\n\n    document.title = this.props.currencies[0] + \"/\" + this.props.currencies[1] + \": \" + new_stats[\"last_price\"]\n    this.setState({ stats: new_stats, loading: false })\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    \n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) }, this.updateStats)\n    }.bind(this))\n\n    return subscription\n  }\n\n  componentWillMount() {\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      return \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      return \"BUY\"\n    } else {\n      return null\n    }\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var price = 0\n    if(type === \"BUY\") {\n      price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = this.props.drizzle.web3.utils.fromWei(order[\"give_amt\"].toString(), 'ether')\n      var buy_amt = this.props.drizzle.web3.utils.fromWei(order[\"take_amt\"].toString(), 'ether')\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      var timestamp = new Date(order[\"timestamp\"] * 1000)\n      timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n      order = {\n        \"raw_timestamp\": order[\"timestamp\"] * 1000,\n        \"timestamp\": timestamp,\n        \"type\": type,\n        \"price\": offer[0],\n        \"curr_1\": offer[1],\n        \"curr_2\": offer[2],\n        \"taker\": order[\"taker\"],\n        \"maker\": order[\"maker\"]\n      }\n      orders.push(order)\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock - 5760,\n      toBlock: 'latest'\n    })\n\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  buildStat(key) {\n    if(this.state.stats[key] === \"...\") {\n      return <span className=\"loading_value\">{this.state.stats[key]}</span>\n    }\n    var color = null\n    var value = this.numberWithCommas(this.state.stats[key])\n    if(key === \"buy_volume\" || key === \"sell_volume\") {\n      color = key === \"buy_volume\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()} <span className=\"sub_value\">{this.props.currencies[1]}</span></span>\n    }\n\n    if(key === \"num_buys\" || key === \"num_sells\") {\n      color = key === \"num_buys\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()}</span>\n    }\n\n    if(key === \"last_price\") {\n      color = this.state.stats[\"last_type\"] === \"BUY\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()} <span className=\"sub_value\">{this.props.currencies[1]} / {this.props.currencies[0]}</span></span>\n    }\n\n    return value\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    var keys = [\"num_users\", \"num_buys\", \"num_sells\", \"buy_volume\", \"sell_volume\", \"last_price\"]\n    var statistics = {}\n    for(var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      statistics[key] = this.buildStat(key)\n    }\n\n    var chart = <div id=\"Stats-chart\"><Chart orders={orders} currencies={currencies} /></div>\n\n    return (\n      <div className=\"Stats\">\n        {chart}\n        <div id=\"Stats-statistics\">\n          <Grid id=\"Stats-grid\">\n            <Grid.Row>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Buys</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_buys\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Buy Vol.</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"buy_volume\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Sells</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_sells\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Sell Vol.</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"sell_volume\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={8} computer={8} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Last Price</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"last_price\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={8} computer={8} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Users</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_users\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stats","import React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nimport './markethistory.css'\n\nclass MarketHistory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      orders: [],\n      max_order: null,\n      subsciption: null\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    var max_order = Math.max.apply(Math, orders.map(function(o) { return o.curr_2; }))\n    this.setState({ orders, max_order, loading: false })\n    var subscription = await this.subscribeToEvents()\n    this.setState({ subscription })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscription) {\n      this.state.subscription.unsubscribe()\n    }\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    \n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    return subscription\n  }\n\n  componentWillMount() {\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      return \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      return \"BUY\"\n    } else {\n      return null\n    }\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var price = 0\n    if(type === \"BUY\") {\n      price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = this.props.drizzle.web3.utils.fromWei(order[\"give_amt\"].toString(), 'ether')\n      var buy_amt = this.props.drizzle.web3.utils.fromWei(order[\"take_amt\"].toString(), 'ether')\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      var timestamp = new Date(order[\"timestamp\"] * 1000)\n      timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n      order = {\n        \"timestamp\": timestamp,\n        \"type\": type,\n        \"price\": offer[0],\n        \"curr_1\": offer[1],\n        \"curr_2\": offer[2],\n        \"taker\": order[\"taker\"],\n        \"maker\": order[\"maker\"]\n      }\n      orders.push(order)\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock - 2000,\n      toBlock: 'latest'\n    })\n\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  render() {\n    var { loading, orders, max_order } = this.state\n    var { currencies } = this.props\n\n    var offers_table = null\n    var background_item = null\n\n    if(loading) {\n      background_item = (<div id=\"MarketHistory-empty\">Loading...</div>)\n    } else if(orders.length === 0) {\n      background_item = (<div id=\"MarketHistory-empty\">NO ORDERS</div>)\n    } else {\n      offers_table = (<Table.Body id=\"MarketHistory-tableBody\">\n            {orders.map((item, index) => {\n              var ratio = item[\"curr_2\"]/max_order * 100\n              var direction = \"right\"\n              var color_0 = \"rgba(255, 0, 0, 0.2)\"\n              var color_1 = \"rgba(0,0,0,0)\"\n              if(item[\"type\"] === \"BUY\") {\n                color_0 = \"rgba(0, 255, 0, 0.1)\"\n                color_1 = \"rgba(0, 0, 0, 0)\"\n              }\n              var style = { backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n                backgroundSize: `calc(${ratio}%) 100%`,\n                backgroundRepeat: `no-repeat`\n              }\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">BUY</span>) : (<span className=\"red MarketHistory-type\">SELL</span>)\n              return (\n                <Table.Row key={index} style={style}>\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{item[\"timestamp\"]}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_1\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_2\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MarketHistory\">\n        <Table striped basic celled unstackable id=\"MarketHistory-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Time</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { offers_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MarketHistory\n","import React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nimport './myhistory.css'\n\nclass MyHistory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      orders: [],\n      max_order: null,\n      subscriptions: null\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    var max_order = Math.max.apply(Math, orders.map(function(o) { return o.curr_2; }))\n    this.setState({ orders, max_order, loading: false })\n    var subscriptions = await this.subscribeToEvents()\n    this.setState({ subscriptions })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscriptions) {\n      this.state.subscriptions[0].unsubscribe()\n      this.state.subscriptions[1].unsubscribe()\n    }\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle, drizzleState } = this.props\n    var { Market } = drizzle.contracts\n    let account = drizzleState.accounts[0]\n\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var taker_subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2], taker: account },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    var maker_subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2], maker: account },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    return [taker_subscription, maker_subscription]\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    var type = null\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      type = \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      type = \"BUY\"\n    } else {\n      return null\n    }\n\n    return type\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var price = 0\n    if(type === \"BUY\") {\n      price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = this.props.drizzle.web3.utils.fromWei(order[\"give_amt\"].toString(), 'ether')\n      var buy_amt = this.props.drizzle.web3.utils.fromWei(order[\"take_amt\"].toString(), 'ether')\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      \n      var true_type = type\n      if(events[i][\"role\"] === \"maker\") {\n        if(true_type === \"BUY\") {\n          true_type = \"SELL\"\n        } else {\n          true_type = \"BUY\"\n        }\n      }\n\n      var timestamp = new Date(order[\"timestamp\"] * 1000)\n      timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n      order = {\n        \"timestamp\": timestamp,\n        \"type\": true_type,\n        \"price\": offer[0],\n        \"curr_1\": offer[1],\n        \"curr_2\": offer[2],\n        \"taker\": order[\"taker\"],\n        \"maker\": order[\"maker\"]\n      }\n      orders.push(order)\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle, drizzleState } = this.props\n    var { Market } = drizzle.contracts\n    let account = drizzleState.accounts[0]\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var taker_events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2], taker: account },\n      fromBlock: latestBlock - 25000,\n      toBlock: 'latest'\n    })\n    taker_events = taker_events.map((item) => {\n      item[\"role\"] = \"taker\"\n      return item\n    })\n\n    var maker_events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2], maker: account },\n      fromBlock: latestBlock - 25000,\n      toBlock: 'latest'\n    })\n    maker_events = maker_events.map((item) => {\n      item[\"role\"] = \"maker\"\n      return item\n    })\n\n    var events = maker_events.concat(taker_events)\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  render() {\n    var { loading, orders, max_order } = this.state\n    var { currencies } = this.props\n\n    var offers_table = null\n    var background_item = null\n\n    if(loading) {\n      background_item = (<div id=\"MarketHistory-empty\">Loading...</div>)\n    } else if(orders.length === 0) {\n      background_item = (<div id=\"MarketHistory-empty\">NO ORDERS</div>)\n    } else {\n      offers_table = (<Table.Body id=\"MarketHistory-tableBody\">\n            {orders.map((item, index) => {\n              var ratio = item[\"curr_2\"]/max_order * 100\n              var direction = \"right\"\n              var color_0 = \"rgba(255, 0, 0, 0.2)\"\n              var color_1 = \"rgba(0,0,0,0)\"\n              if(item[\"type\"] === \"BUY\") {\n                color_0 = \"rgba(0, 255, 0, 0.1)\"\n                color_1 = \"rgba(0, 0, 0, 0)\"\n              }\n              var style = { backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n                backgroundSize: `calc(${ratio}%) 100%`,\n                backgroundRepeat: `no-repeat`\n              }\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">BUY</span>) : (<span className=\"red MarketHistory-type\">SELL</span>)\n              return (\n                <Table.Row key={index} style={style}>\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{item[\"timestamp\"]}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_1\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_2\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MarketHistory\">\n        <Table striped basic celled unstackable id=\"MarketHistory-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Time</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { offers_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MyHistory\n","import React, { Component } from 'react'\nimport { Sidebar, Segment, Icon, Input, Form, Button, Loader } from 'semantic-ui-react'\n\nimport './sidebar.css'\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      visible: false,\n      amount: '0',\n      ui_amount: '',\n      currency_0_balance: \"0\",\n      currency_1_balance: \"0\",\n      id: null,\n      info: null,\n      owner: null,\n      bignumbers: {},\n      button_loading: false,\n      button_success: false,\n      button_error: false\n    }\n\n    this.updateInfo = this.updateInfo.bind(this)\n    this.stopLoading = this.stopLoading.bind(this)\n    this.flashError = this.flashError.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n  }\n\n  // Get the balances for each of the currencies since we will need that throughout the component\n  componentDidMount() {\n    this.generateBigNumbers()\n    this.updateInfo()\n  }\n\n  async updateInfo() {\n    var { drizzle, drizzleState, currencies } = this.props\n    if(this.state.visible && this.state.id) {\n      let account = drizzleState.accounts[0]\n\n      const currency_0_balance = await drizzle.contracts[currencies[0]].methods.balanceOf(account).call()\n      const currency_1_balance = await drizzle.contracts[currencies[1]].methods.balanceOf(account).call()\n      const info = await drizzle.contracts.Market.methods.getOffer(this.state.id).call()\n      const owner = await drizzle.contracts.Market.methods.getOwner(this.state.id).call()\n      this.setState({ currency_0_balance, currency_1_balance, info, owner })\n    }\n    setTimeout(this.updateInfo, 1000)\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  stopLoading() {\n    this.setState({ loading: false })\n  }\n\n  // Need to update visible and the side_bar info key if a new order is passed in\n  async componentWillReceiveProps(nextProps) {\n    if(nextProps.visible !== this.props.visible) {\n      this.setState({ visible: nextProps.visible })\n      if(nextProps.visible === false) {\n        this.setState({ info: null, owner: null, amount: '0', ui_amount: '', button_success: false, button_error: false, button_loading: false })\n      }\n    }\n    if(nextProps.sidebar_info !== this.props.sidebar_info) {\n      this.setState({ loading: true })\n      const info = await this.props.drizzle.contracts.Market.methods.getOffer(nextProps.sidebar_info[\"id\"]).call()\n      const owner = await this.props.drizzle.contracts.Market.methods.getOwner(nextProps.sidebar_info[\"id\"]).call()\n      this.setState({ id: nextProps.sidebar_info[\"id\"], info, owner, amount: '0', ui_amount: '' })\n      setTimeout(this.stopLoading, 150)\n    }\n  }\n\n  flashSuccess() {\n    var { toggleSidebar } = this.props\n    this.setState({ button_success : true, button_loading: false })\n    setTimeout(toggleSidebar, 1500)\n  }\n\n  flashError() {\n    this.setState({ button_error: true, button_loading: false })\n    setTimeout(() => this.setState({ button_error: false }), 1500)\n  }\n\n  // Most important function in the entire file since it actually interfaces\n  // and edits the blockchain.\n  executeTrade = (will_receive) => {\n    var { drizzle, drizzleState, sidebar_info } = this.props\n    const account = drizzleState.accounts[0]\n    const web3 = drizzle.web3\n\n    var id = sidebar_info[\"id\"]\n\n    // Log the inputs for the transaction so that you can always be 100% positive what is being sent\n    var inputs = {\n      \"id\": id,\n      \"will_receive\": will_receive.toString(),\n      \"will_receive_wholenums\": web3.utils.fromWei(will_receive.toString(), 'ether')\n    }\n    console.log(inputs)\n\n    drizzle.contracts.Market.methods.buy(id, will_receive.toString()).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', this.flashSuccess)\n      .on('error', this.flashError)\n\n    this.setState({ button_loading: true })\n  }\n\n  numberWithCommas(x) {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n  }\n\n  handleUserChange(value) {\n    var internal_value = 0\n    try{\n      if(/\\S/.test(value)) {\n        internal_value = this.props.drizzle.web3.utils.toWei(value.toString(), 'ether').toString()\n      }\n    } catch (err) {\n      console.log(err)\n      return\n    }\n    this.setState({ ui_amount: value, amount: internal_value })\n  }\n\n  handleAmountPercentageChange(value) {\n    var ui_value = this.props.drizzle.web3.utils.fromWei(value.toString(), 'ether')\n    this.setState({ amount: value.toString(), ui_amount: ui_value })\n  }\n\n  // So we were passed in the most up to date info the older component had.\n  // However this can and will change if it was stale or other people are taking the order.\n  // This keeps the info up to date and fallsback onto the old data if an error happens.\n  getUpdatedInfo() {\n    var { info } = this.state\n    var { sidebar_info } = this.props\n\n    var info_obj = {}\n    if(!info) {\n      return null\n    }\n\n    var buy_amt = info[0]\n    var pay_amt = info[2]\n    if(sidebar_info[\"type\"] === \"BUY\") {\n      info_obj = {\n        \"price\": sidebar_info[\"price\"],\n        \"curr_0_amt\": pay_amt.toString(),\n        \"curr_1_amt\": buy_amt.toString()\n      }\n    } else {\n      info_obj = {\n        \"price\": sidebar_info[\"price\"],\n        \"curr_0_amt\": buy_amt.toString(),\n        \"curr_1_amt\": pay_amt.toString()\n      }\n    }\n\n    return info_obj\n  }\n\n  calcWillReceive() {\n    var { drizzle } = this.props\n    var { amount } = this.state\n    const web3 = drizzle.web3\n\n    // Don't forget that these are flipped from the actual smart contract docs since\n    // WE are the counterparties so buy_amt/pay_amt is flipped from expected\n    var buy_amt = web3.utils.toBN(this.state.info[0])\n    var pay_amt = web3.utils.toBN(this.state.info[2])\n\n    let amount_bn = web3.utils.toBN(amount)\n    try {\n      let will_receive = amount_bn.mul(buy_amt).div(pay_amt)\n      return will_receive\n    } catch(err) {\n      return web3.utils.toBN(\"0\")\n    }\n  }\n\n  getMaxTake() {\n    var { sidebar_info, drizzle } = this.props\n    var { info, currency_0_balance, currency_1_balance } = this.state\n    const web3 = drizzle.web3\n\n    var pay_amt = web3.utils.toBN(info[2])\n    var balance = sidebar_info[\"type\"] === \"BUY\" ? web3.utils.toBN(currency_0_balance) : web3.utils.toBN(currency_1_balance)\n    if(balance.lt(pay_amt)) {\n      return balance\n    } else {\n      return pay_amt\n    }\n  }\n\n  render() {\n    var { visible, amount, ui_amount, currency_0_balance, currency_1_balance, bignumbers, loading, button_loading, button_error, button_success, owner } = this.state\n    var { currencies, toggleSidebar, sidebar_info } = this.props\n    const web3 = this.props.drizzle.web3\n\n    // Invert the type since the action do as a taker is the inverse of the action of the maker\n    var action = sidebar_info[\"type\"] === \"BUY\" ? \"SELL\" : \"BUY\"\n    var subtitle = action === \"BUY\" ? (<span className=\"green\">{action}</span>) : (<span className=\"red\">SELL</span>)\n\n    // So we were passed in the most up to date info the older component had.\n    // However this can and will change if it was stale or other people are taking the order.\n    // This keeps the info up to date and fallsback onto the old data if an error happens.\n    var updated_info = this.getUpdatedInfo()\n    if(!updated_info || loading) {\n      return (\n        <div className=\"Side_bar\">\n          <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Side_bar\">\n            <div id=\"Side_bar-x-container\">\n              <Icon name=\"close\" onClick={toggleSidebar} id=\"Side_bar-x\" size=\"large\" />\n            </div>\n            <div id=\"Side_bar-title\">Take Order</div>\n            <Loader active>Loading</Loader>\n          </Sidebar>\n        </div>\n      )\n    }\n\n    // Build object that swaps values for buys and sells so that rendering is simple\n    var giving = {\n      \"currency\": null,\n      \"receive_currency\": null,\n      \"balance\": 0,\n      \"offered\": 0,\n      \"max_take\": this.getMaxTake(),\n      \"will_receive\": this.calcWillReceive(),\n      \"maker\": owner ? owner.substring(0, 10) + \" ... \" + owner.substring(owner.length - 10, owner.length) : \"Loading...\",\n    }\n    giving[\"ui_will_receive\"] = Math.round(web3.utils.fromWei(giving[\"will_receive\"].toString()) * 1000) / 1000\n\n    if(action === \"BUY\") {\n      giving[\"currency\"] = currencies[1]\n      giving[\"receive_currency\"] = currencies[0]\n      giving[\"balance\"] = web3.utils.toBN(currency_1_balance)\n      giving[\"ui_balance\"] = Math.round(web3.utils.fromWei(currency_1_balance.toString(), 'ether') * 1000) / 1000\n      giving[\"offered\"] = web3.utils.toBN(updated_info[\"curr_1_amt\"])\n      giving[\"ui_offered\"] = Math.round(web3.utils.fromWei(updated_info[\"curr_1_amt\"], 'ether') * 1000) / 1000\n    } else {\n      giving[\"currency\"] = currencies[0]\n      giving[\"receive_currency\"] = currencies[1]\n      giving[\"balance\"] = web3.utils.toBN(currency_0_balance)\n      giving[\"ui_balance\"] = Math.round(web3.utils.fromWei(currency_0_balance.toString(), 'ether') * 1000) / 1000\n      giving[\"offered\"] = web3.utils.toBN(updated_info[\"curr_0_amt\"])\n      giving[\"ui_offered\"] = Math.round(web3.utils.fromWei(updated_info[\"curr_0_amt\"], 'ether') * 1000) / 1000\n    }\n\n    // Adjust the text on the button if an action or error just occurred\n    var button_text = action + \" \" + currencies[0]\n    button_text = button_success ? \"SUCCESS\" : button_text\n    button_text = button_error ? \"FAILED\" : button_text\n\n    return (\n      <div className=\"Side_bar\">\n        <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Side_bar\">\n          <div id=\"Side_bar-x-container\">\n            <Icon name=\"close\" onClick={toggleSidebar} id=\"Side_bar-x\" size=\"large\" />\n          </div>\n          <div id=\"Side_bar-title\">Take Order</div>\n          <div id=\"Side_bar-subtitle\">How much would you like to {subtitle}?</div>\n          \n          <div id=\"Side_bar-info\">\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Maker:</div>\n              <div className=\"Side_bar-info-content\">{giving[\"maker\"]}</div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Price:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(updated_info[\"price\"])} <span id=\"Side_bar-exchange\">{currencies[1]} / {currencies[0]}</span></div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Balance {giving[\"currency\"]}:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(giving[\"ui_balance\"])} <span id=\"Side_bar-exchange\">{giving[\"currency\"]}</span></div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Offered {giving[\"currency\"]}:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(giving[\"ui_offered\"])} <span id=\"Side_bar-exchange\">{giving[\"currency\"]}</span></div>\n            </div>\n          </div>\n\n          <Form size='tiny' id=\"Side_bar-form\">\n            <Form.Field>\n              <div>\n                <div className=\"Side_bar-info-title\">Spend {giving[\"currency\"]}:</div>\n                <Input\n                  label={{ basic: true, content: giving[\"currency\"] }}\n                  labelPosition='right'\n                  placeholder='Enter Amount...'\n                  value={ui_amount}\n                  onChange={(e) => { this.handleUserChange(e.target.value) }}\n                />\n              </div>\n            </Form.Field>\n            <Button.Group id=\"Side_bar-mini-buttons\" size='mini' basic>\n              <Button onClick={ () => this.handleUserChange(\"\") } >0%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].div(bignumbers[4])) } >25%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].div(bignumbers[2])) } >50%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"]) } >100%</Button>\n            </Button.Group>\n          </Form>\n          <div className=\"Side_bar-info-item\">\n            <div className=\"Side_bar-info-title\">Will Receive</div>\n            <div className=\"Side_bar-info-content\">{giving[\"ui_will_receive\"].toString() + \" \" + giving[\"receive_currency\"]}</div>\n          </div>\n\n          <Button className=\"BuySell-button\" loading={button_loading} color={action === \"BUY\" ? \"green\" : \"red\"} disabled={button_text !== action + \" \" + currencies[0] || giving[\"will_receive\"].lte(web3.utils.toBN(\"1000\")) || web3.utils.toBN(amount).gt(giving[\"max_take\"])} onClick={() => this.executeTrade(giving[\"will_receive\"]) }>{button_text}</Button>\n\n        </Sidebar>\n      </div>\n    );\n  }\n}\n\nexport default SideBar\n","import React, { Component } from 'react'\nimport { Grid, Tab } from 'semantic-ui-react'\n\n// import Chart from './chart/chart'\nimport OrderList from './orderlist/orderlist'\nimport LimitOrder from './limitorder/limitorder'\nimport MarketOrder from './marketorder/marketorder'\nimport MyOrders from './myorders/myorders'\nimport Stats from './stats/stats'\nimport MarketHistory from './markethistory/markethistory'\nimport MyHistory from './myhistory/myhistory'\nimport SideBar from './sidebar/sidebar'\n\nimport './market.css'\n\nclass Market extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currencies: [],\n      visible: false,\n      sidebar_info: {\n        \"price\": 0,\n        \"curr_0_amt\": 0,\n        \"curr_1_amt\": 0,\n        \"id\": \"\",\n        \"type\": \"\"\n      },\n      keys: {\n        numBuys: null,\n        numSells: null\n      }\n    }\n  }\n\n  componentWillMount() {\n    var currencies = this.props.pair.split(\"_\")\n    this.setState({currencies})\n  }\n\n  componentDidMount() {\n    var { drizzle } = this.props\n    var { currencies } = this.state\n\n    var buy_token_addr = drizzle.contracts[currencies[0]].address\n    var sell_token_addr = drizzle.contracts[currencies[1]].address\n\n    const numBuysKey = drizzle.contracts.Market.methods.getOfferCount.cacheCall(sell_token_addr, buy_token_addr)\n    const numSellsKey = drizzle.contracts.Market.methods.getOfferCount.cacheCall(buy_token_addr, sell_token_addr)\n\n    let keys = Object.assign({}, this.state.keys)\n    keys[\"numBuys\"] = numBuysKey\n    keys[\"numSells\"] = numSellsKey\n\n    this.setState({currencies, keys})\n  }\n\n  setSidebar = (info) => {\n    this.setState({ sidebar_info: info, visible: true })\n  }\n\n  toggleSidebar = () => {\n    this.setState({ visible: !this.state.visible })\n  }\n\n  render() {\n    var { currencies, keys, visible, sidebar_info } = this.state\n    var { Market } = this.props.drizzleState.contracts\n    var { drizzle, drizzleState } = this.props\n\n    var title = \"Market: \"\n    if(currencies.length === 2) {\n      title = title + currencies[0] + \"/\" + currencies[1]\n    }\n\n    var numBuys = \"Loading...\"\n    var numSells = \"Loading...\"\n\n    if(keys[\"numBuys\"] in Market.getOfferCount) {\n      numBuys = Market.getOfferCount[keys[\"numBuys\"]].value\n    }\n    if(keys[\"numSells\"] in Market.getOfferCount) {\n      numSells = Market.getOfferCount[keys[\"numSells\"]].value\n    }\n\n    if(!numBuys) {\n      numBuys = \"Error...\"\n    }\n    if(!numSells) {\n      numSells = \"Error...\"\n    }\n\n    const activity_panes = [\n      { menuItem: 'Open Orders', render: () => <Tab.Pane className=\"Market-tab-pane\"><MyOrders currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n      { menuItem: 'My History', render: () => <Tab.Pane className=\"Market-tab-pane\"><MyHistory currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n      { menuItem: 'Market History', render: () => <Tab.Pane className=\"Market-tab-pane\"><MarketHistory currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n    ]\n\n    const buy_panes = [\n      { menuItem: 'Limit Order', render: () => <Tab.Pane className=\"Market-tab-pane\"><LimitOrder currencies={currencies} drizzle={drizzle} drizzleState={ drizzleState } /></Tab.Pane> },\n      { menuItem: 'Market Order', render: () => <Tab.Pane className=\"Market-tab-pane\"><MarketOrder currencies={currencies} drizzle={drizzle} drizzleState={ drizzleState } /></Tab.Pane> }\n    ]\n\n    return (\n      <div className=\"Market\">\n        <SideBar currencies={currencies} toggleSidebar={this.toggleSidebar} sidebar_info={sidebar_info} visible={visible} drizzle={drizzle} drizzleState={ drizzleState } />\n        <div id=\"Market-title\"><span className=\"Market-h1\">{title}</span></div>\n\n        <div className=\"Market-headers\">24-Hour Market Stats</div>\n        <div id=\"Market-stats\"><Stats currencies={currencies} drizzle={drizzle} drizzleState={ drizzleState } /></div>\n\n        <div className=\"Market-headers\">Order Center</div>\n        <div id=\"Market-buysell\">\n          <Tab menu={{ fluid: true, tabular: true, attached: 'top' }} panes={buy_panes} />\n        </div>\n \n        <div className=\"Market-headers\">Activity Center</div>\n        <div id=\"Market-activity-pane\">\n          <Tab menu={{ fluid: true, tabular: true, attached: 'top' }} panes={activity_panes} />\n        </div>\n        \n        <Grid divided id=\"Market-orderlists\">\n          <Grid.Row>\n            <Grid.Column className=\"Market-orderlist\" computer={8} tablet={8} mobile={16}>\n              <div className=\"Market-headers\">{currencies[0]} <span className=\"green\">Buy</span> Orders ({numBuys})</div>\n              <OrderList currencies={currencies} type={\"BUY\"} drizzle={drizzle} drizzleState={ drizzleState } setSidebar={this.setSidebar} />\n            </Grid.Column>\n            <Grid.Column className=\"Market-orderlist\" computer={8} tablet={8} mobile={16}>\n              <div className=\"Market-headers\">{currencies[0]} <span className=\"red\">Sell</span> Orders ({numSells})</div>\n              <OrderList currencies={currencies} type={\"SELL\"} drizzle={drizzle} drizzleState={ drizzleState } setSidebar={this.setSidebar} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      \n      </div>\n    );\n  }\n}\n\nexport default Market\n","import React, { Component } from 'react'\nimport { Transition } from 'semantic-ui-react'\nimport './home.css'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate() {\n  }\n\n  render() {\n    return (\n      <div id=\"Home\">\n        <Transition transitionOnMount={true} animation='fade up' duration={1500}>\n          <div id=\"Home-title\">\n            OasisX\n          </div>\n        </Transition>\n        <Transition transitionOnMount={true} animation='fade up' duration={3500}>\n          <div id=\"Home-subtitle\">\n            The fastest UI for Oasis.\n          </div>\n        </Transition>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport { Input, Form, Button } from 'semantic-ui-react'\n\nimport './wrapstation.css'\n\nclass WrapStation extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      amount_wrap: '0',\n      ui_amount_wrap: '',\n      amount_unwrap: '0',\n      ui_amount_unwrap: '',\n      bignumbers: {}\n    }\n  }\n\n  componentDidMount() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  handlePercentUpdate(name, value) {\n    var ui_value = this.props.drizzle.web3.utils.fromWei(value.toString(), 'ether')\n    if(name === \"amount_wrap\") {\n      this.setState({ amount_wrap: value, ui_amount_wrap: ui_value })\n    } else if(name === \"amount_unwrap\") {\n      this.setState({ amount_unwrap: value, ui_amount_unwrap: ui_value })\n    } else {\n      return\n    }\n  }\n\n  handleUserUpdate(name, value) {\n    var internal_value = 0\n    try{\n      if(/\\S/.test(value)) {\n        internal_value = this.props.drizzle.web3.utils.toWei(value.toString(), 'ether')\n      }\n    } catch (err) {\n      console.log(err)\n      return\n    }\n\n    if(name === \"ui_amount_wrap\") {\n      this.setState({ ui_amount_wrap: value, amount_wrap: internal_value })\n    } else if(name === \"ui_amount_unwrap\") {\n      this.setState({ ui_amount_unwrap: value, amount_unwrap: internal_value })\n    } else {\n      return\n    }\n  }\n\n  onWrap = () => {\n    // Grab the wrap function from the contract instance and the account and amount we want to execute it with\n    const deposit = this.props.drizzle.contracts.WETH.methods.deposit\n    const account = this.props.drizzleState.accounts[0]\n    var amount = this.state.amount_wrap\n    var web3 = this.props.drizzle.web3\n\n    // Need to check if the amount value is an empty string/undefined/null and that it's greater than 0\n    if(amount && amount > 0) {\n      console.log(\"SENDING \" + amount + \" TO WRAPPER...\")\n      deposit.cacheSend({value: amount, from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      this.setState({ amount_wrap: '0', ui_amount_wrap: '' })\n    } else {\n      console.log(\"Error: No amount chosen\")\n    }\n  }\n\n  onUnwrap = () => {\n    const withdraw = this.props.drizzle.contracts.WETH.methods.withdraw\n    const account = this.props.drizzleState.accounts[0]\n    var amount = this.state.amount_unwrap\n    var web3 = this.props.drizzle.web3\n\n    if(amount && amount > 0) {\n      console.log(\"SENDING \" + amount + \" TO UNWRAPPER...\")\n      withdraw.cacheSend(amount.toString(), {from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      this.setState({ amount_unwrap: '0', ui_amount_unwrap: '' })\n    } else {\n      console.log(\"Error: No amount chosen\")\n    }\n  }\n\n  render() {\n    var { weth_balance, eth_balance } = this.props\n    var { ui_amount_wrap, ui_amount_unwrap, bignumbers } = this.state\n\n    // Convert to BigNumbers since they will have potential math done on them (risk of overflow/underflow)\n    eth_balance = this.props.drizzle.web3.utils.toBN(eth_balance)\n    weth_balance = this.props.drizzle.web3.utils.toBN(weth_balance)\n\n    return (\n      <div className=\"WrapStation\">\n        <div id=\"WrapStation-title\">Wrap / Unwrap</div>\n        <Form onSubmit={this.handleSubmit} size='tiny' id=\"WrapStation-form\">\n          <div className=\"WrapStation-headers\">Wrap <span id=\"WrapStation-warning\"><span className=\"red\">WARNING:</span> DO NOT WRAP ALL YOUR ETHER</span></div>\n          <Form.Group unstackable className=\"WrapStation-formgroup\">\n            <Form.Field width={11}>\n              <Input\n                label={{ basic: true, content: \"ETH\" }}\n                labelPosition='right'\n                placeholder='Enter Amount ETH...'\n                value={ui_amount_wrap}\n                onChange={(e) => { this.handleUserUpdate('ui_amount_wrap', e.target.value) }}\n              />\n            </Form.Field>\n            <Form.Button width={4} className=\"WrapStation-button\" color='green' size='small' disabled={ui_amount_wrap === \"\"} onClick={ () => this.onWrap() } >WRAP</Form.Button>\n          </Form.Group>\n          <Button.Group className=\"WrapStation-mini-buttons\" size='mini' basic inverted>\n            <Button onClick={ () => this.handleUserUpdate(\"ui_amount_wrap\", \"\") } >0%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.div(bignumbers[4])) } >25%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.div(bignumbers[2])) } >50%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.mul(bignumbers[9]).div(bignumbers[10])) } >90%</Button>\n          </Button.Group>\n          <div className=\"WrapStation-headers\">Unwrap</div>\n          <Form.Group unstackable className=\"WrapStation-formgroup\">\n            <Form.Field width={10}>\n              <Input\n                label={{ basic: true, content: \"WETH\" }}\n                labelPosition='right'\n                placeholder='Enter Amount WETH...'\n                value={ui_amount_unwrap}\n                onChange={(e) => { this.handleUserUpdate('amount_unwrap', e.target.value) }}\n              />\n            </Form.Field>\n            <Form.Button width={4} className=\"WrapStation-button\" color='green' size='small' disabled={ui_amount_unwrap === \"\"} onClick={ () => this.onUnwrap() } >UNWRAP</Form.Button>\n          </Form.Group>\n          <Button.Group className=\"WrapStation-mini-buttons\" size='mini' basic inverted>\n            <Button onClick={ () => this.handleUserUpdate(\"ui_amount_unwrap\", \"\") } >0%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.div(bignumbers[4])) } >25%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.div(bignumbers[2])) } >50%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance) } >100%</Button>\n          </Button.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default WrapStation\n","import React, { Component } from 'react'\nimport { Header, Table, Checkbox, Icon } from 'semantic-ui-react'\nimport './infobar.css'\n\nimport WrapStation from './wrapstation/wrapstation'\n\nclass Infobar extends Component {\n  constructor(props, context) {\n    super(props)\n    this.state = {\n      currencies: {\n        \"WETH\": {\n          balance: 0,\n          approved: 0\n        },\n        \"DAI\": {\n          balance: 0,\n          approved: 0\n        },\n        \"MKR\": {\n          balance: 0,\n          approved: 0\n        },\n        \"ETH\": {\n          balance: 0,\n          approved: 0\n        }\n      }\n    }\n\n    this.updateInfo = this.updateInfo.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateInfo()\n  }\n\n  async updateInfo() {\n    const { drizzle, drizzleState } = this.props\n    let account = drizzleState.accounts[0]\n    let market_address = drizzle.contracts.Market.address\n    \n    const weth_balance = await drizzle.contracts.WETH.methods.balanceOf(account).call()\n    const dai_balance = await drizzle.contracts.DAI.methods.balanceOf(account).call()\n    const mkr_balance = await drizzle.contracts.MKR.methods.balanceOf(account).call()\n    \n    const weth_approval = await drizzle.contracts.WETH.methods.allowance(account, market_address).call()\n    const dai_approval = await drizzle.contracts.DAI.methods.allowance(account, market_address).call()\n    const mkr_approval = await drizzle.contracts.MKR.methods.allowance(account, market_address).call()\n    \n    var eth_balance = drizzleState.accountBalances[account]\n\n    var currencies = {\n      \"WETH\": {\n        balance: weth_balance,\n        approved: weth_approval\n      },\n      \"DAI\": {\n        balance: dai_balance,\n        approved: dai_approval\n      },\n      \"MKR\": {\n        balance: mkr_balance,\n        approved: mkr_approval\n      },\n      \"ETH\": {\n        balance: eth_balance,\n        approved: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n      }\n    }\n\n    this.setState({ currencies })\n\n    setTimeout(this.updateInfo, 5000)\n  }\n\n  approveCurrencyForAmount(currency, amount) {\n    var { drizzle, drizzleState } = this.props\n    var account = drizzleState.accounts[0]\n    let market_address = drizzle.contracts.Market.address\n    var web3 = drizzle.web3\n\n    if(currency in drizzle.contracts) {\n      var currency_contract = drizzle.contracts[currency]\n      \n      var approve = currency_contract.methods.approve\n      approve.cacheSend(market_address, amount, {from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n    }\n  }\n\n  approveCurrency(currency) {\n    this.approveCurrencyForAmount(currency, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\")\n  }\n\n  unapproveCurrency(currency) {\n    this.approveCurrencyForAmount(currency, \"0\")\n  }\n\n  toggleApproval(currency, current_approval) {\n    let new_approval = !current_approval\n    if(new_approval) {\n      this.approveCurrency(currency)\n    } else {\n      this.unapproveCurrency(currency)\n    }\n  }\n\n  getUIBalance(raw_balance) {\n    let UI_balance = raw_balance\n    if(raw_balance != null) {\n      UI_balance = Math.round(this.props.drizzle.web3.utils.fromWei(raw_balance.toString(), 'ether') * 1000) / 1000\n    } else {\n      UI_balance = \"Error...\"\n    }\n    return UI_balance    \n  }\n\n  getUIAllowance(raw_balance, raw_allowance) {\n    const web3 = this.props.drizzle.web3\n    let UI_allowance = false\n    raw_allowance = web3.utils.toBN(raw_allowance)\n    let balance = web3.utils.toBN(raw_balance)\n    if(raw_allowance.gte(balance)) {\n      UI_allowance = true\n    } else {\n      UI_allowance = false\n    }\n    return UI_allowance\n  }\n\n  render() {\n    const { currencies } = this.state\n    const { padded, closeSidebar, drizzle, drizzleState } = this.props\n    let account = drizzleState.accounts[0]\n\n    const vals = Object.keys(currencies).map((key) => {\n      var obj = {}\n      obj[\"name\"] = key\n      obj[\"balance\"] = \"0\"\n      obj[\"approved\"] = false\n      var raw_balance = currencies[key][\"balance\"]\n      var raw_allowance = currencies[key][\"approved\"]\n      if(raw_balance && raw_allowance) {\n        obj[\"balance\"] = this.getUIBalance(raw_balance)\n        obj[\"approved\"] = this.getUIAllowance(raw_balance, raw_allowance)      \n      }\n      return obj\n    })\n\n    var padding = null\n    var ui_account = account\n    var x_icon = <Icon name=\"close\" id=\"Infobar-x\" size=\"large\" onClick={closeSidebar} />\n    if(padded) {\n      padding = \"very\"\n      x_icon = null\n    } else {\n      if(ui_account) {\n        ui_account = ui_account.substring(0, 10) + \" ... \" + ui_account.substring(ui_account.length - 10, ui_account.length) \n      }\n    }\n\n    return (\n      <div id='Infobar'>\n        <div className='Infobar-header'>{ui_account}{x_icon}</div>\n        <Table basic='very' padded={padding} striped unstackable id=\"Infobar-table\">\n          <Table.Header id=\"Infobar-table-header\">\n            <Table.Row>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Token</Table.HeaderCell>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Balance</Table.HeaderCell>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Approved</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {vals.map((item, index) => {\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell>\n                    <Header className='Infobar-table-entry' textAlign='left'>{item.name}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <Header className='Infobar-table-entry' textAlign='left'>{item.balance}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <Checkbox toggle disabled={item.name === \"ETH\"} checked={item.approved} onClick={ () => this.toggleApproval(item.name, item.approved) } />\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>\n        </Table>\n\n        <WrapStation drizzle={drizzle} drizzleState={drizzleState} weth_balance={currencies[\"WETH\"][\"balance\"]} eth_balance={currencies[\"ETH\"][\"balance\"]} />\n      </div>\n    )\n  }\n}\n\nexport default Infobar;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Responsive, Icon, Dropdown, Sidebar, Segment } from 'semantic-ui-react'\nimport './navbar.css'\nimport logo from '../../images/x.svg'\nimport Infobar from '../infobar/infobar'\n\nclass Navbar extends Component {\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeItem: '',\n      visible: false\n    }\n  }\n\n  componentDidUpdate() {\n  }\n\n  toggleVisible = () => {\n    this.setState({ visible: !this.state.visible })\n  }\n\n  render() {\n    const { children, drizzle, drizzleState } = this.props\n    const { activeItem, visible } = this.state\n\n    // var title = \"OasisX\"\n    var other_buttons = []\n    other_buttons.push(\n      {\n        name: 'WETH/DAI',\n        href: '/WETH_DAI' \n      },\n      {\n        name: 'MKR/WETH',\n        href: '/MKR_WETH'\n      },\n      {\n        name: 'MKR/DAI',\n        href: '/MKR_DAI'\n      }\n    )\n\n\n    return (\n      <div>\n        <Responsive {...Responsive.onlyMobile}>\n          <Menu \n            borderless\n            fixed='top'\n            id='Navbar-mobile'\n          >\n            <Menu.Item\n              name='Home'\n              active={activeItem === 'Home'}\n              href='/'\n              className='Navbar-item'\n            >\n              <div className='Navbar-button-mobile' id='Navbar-logo-container'><img src={logo} alt='logo' id='Navbar-logo-mobile' /></div>\n            </Menu.Item>\n            <Dropdown item text='Markets' className='Navbar-dropdown'>\n              <Dropdown.Menu>\n                {\n                  other_buttons.map((button, idx) => {\n                    return (\n                        <Dropdown.Item\n                          name={button.name}\n                          active={activeItem === button.name}\n                          className='Navbar-item'\n                          as={Link}\n                          to={button.href}\n                          key={idx}\n                        >\n                        {button.name}\n                      </Dropdown.Item>\n                    )\n                  })\n                }\n              </Dropdown.Menu>\n            </Dropdown>\n            <Menu.Menu position='right'>\n              <Menu.Item>\n                <Icon name='sidebar' inverted onClick={ this.toggleVisible } />\n              </Menu.Item>                \n            </Menu.Menu>\n          </Menu>\n          <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Navbar-Side_info_bar\">\n            <Infobar drizzle={drizzle} drizzleState={ drizzleState } padded={false} closeSidebar={this.toggleVisible} />\n          </Sidebar>\n          { children }\n        </Responsive>\n\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n          <Menu \n            secondary \n            vertical\n            size='mini'\n            id='Navbar'\n          >\n            <Menu.Item\n              name='Home'\n              className='Navbar-item'\n              as={Link}\n              to={'/'}\n            >\n              <div className='Navbar-button' id='Navbar-logo-container'><img src={logo} alt='logo' className='Navbar-icon' /></div>\n            </Menu.Item>\n            {\n              other_buttons.map((button, idx) => {\n                return (\n                    <Menu.Item\n                      name={button.name}\n                      active={activeItem === button.name}\n                      className='Navbar-item'\n                      onClick={this.handleToggle}\n                      as={Link}\n                      to={button.href}\n                      key={idx}\n                    >\n                    <div className='Navbar-button'>{button.name}</div>\n                  </Menu.Item>\n                )\n              })\n            }\n          </Menu>\n          { children }\n        </Responsive>\n      </div>\n    )\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { Responsive } from 'semantic-ui-react'\n\nimport './App.css'\n\nimport Market from '../market/market'\nimport Home from '../home/home'\nimport Navbar from '../navbar/navbar'\nimport Infobar from '../infobar/infobar'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      loading: true,\n      drizzleState: null\n    }\n  }\n\n  componentDidMount() {\n    const { drizzle } = this.props\n\n    // Subscribe to changes in the store and assign to unsubscribe for later release\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      // Every time the store updates we update the state and pass it to all the children\n      const drizzleState = drizzle.store.getState()\n\n      // If the entire setup is initialized then we update local component states\n      if(drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState })\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  render() {\n    var { loading, drizzleState } = this.state\n    var { drizzle } = this.props\n\n    if(loading) {\n      return <div id=\"App-loading-screen\">Connecting to Ethereum...</div>\n    }\n    else {\n      return (\n        <div className=\"App\">\n          <HashRouter>\n            <div>\n              <Navbar drizzle={drizzle} drizzleState={ drizzleState } />\n              <div id=\"App_market_container\">\n                  <Switch>\n                    <Route exact path='/' render={() => <Home drizzle={drizzle} drizzleState={ drizzleState } />} />\n                    <Route exact path='/WETH_DAI' render={() => <Market key={'WETH_DAI'} drizzle={drizzle} drizzleState={ drizzleState } pair={'WETH_DAI'} />} />\n                    <Route exact path='/MKR_WETH' render={() => <Market key={'MKR_WETH'} drizzle={drizzle} drizzleState={ drizzleState } pair={'MKR_WETH'} />} />\n                    <Route exact path='/MKR_DAI' render={() => <Market  key={'MKR_DAI'} drizzle={drizzle} drizzleState={ drizzleState } pair={'MKR_DAI'} />} />\n                  </Switch>\n              </div>\n            </div>\n          </HashRouter>\n          <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n            <Infobar drizzle={drizzle} drizzleState={ drizzleState } padded={true} />\n          </Responsive>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport './index.css';\nimport App from './containers/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { Drizzle, generateStore } from 'drizzle'\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:9545\")\n// web3.currentProvider.enable()\n\nconst config = require(\"./config\")\nconst erc20Abi = require(\"./abi/standard-token/erc20\")\nconst WEthAbi = require(\"./abi/standard-token/ds-eth-token\")\nconst MatchingMarketAbi = require(\"./abi/maker-otc/matching-market\");\nconst SupportMethodsAbi = require(\"./abi/otc-support-methods/otc-support-methods\")\n\nconst WETH = new web3.eth.Contract(WEthAbi.interface, config[\"tokens\"][\"main\"][\"W-ETH\"])\nconst DAI = new web3.eth.Contract(erc20Abi.interface, config[\"tokens\"][\"main\"][\"DAI\"])\nconst MKR = new web3.eth.Contract(erc20Abi.interface, config[\"tokens\"][\"main\"][\"MKR\"])\nconst market = new web3.eth.Contract(MatchingMarketAbi.interface, config[\"market\"][\"main\"][\"address\"])\nconst supportMethods = new web3.eth.Contract(SupportMethodsAbi.interface, config[\"otcSupportMethods\"][\"main\"][\"address\"])\n\nconst options = {\n\tcontracts: [\n\t\t{\n\t\t\tcontractName: 'WETH',\n\t\t\tweb3Contract: WETH\n\t\t},\n\t\t{\n\t\t\tcontractName: 'DAI',\n\t\t\tweb3Contract: DAI\n\t\t},\n\t\t{\n\t\t\tcontractName: 'MKR',\n\t\t\tweb3Contract: MKR\n\t\t},\n\t\t{\n\t\t\tcontractName: 'Market',\n\t\t\tweb3Contract: market\n\t\t},\n\t\t{\n\t\t\tcontractName: 'SupportMethods',\n\t\t\tweb3Contract: supportMethods\n\t\t}\n\t],\n\tevents: {\n\t\tMarket: ['LogTake']\n\t},\n\tpolls: {\n\t\taccounts: 3000,\n\t\tblocks: 3000\n\t},\n\tsyncAlways: false\n}\n\nconst drizzleStore = generateStore(options)\nconst drizzle = new Drizzle(options, drizzleStore)\n\nReactDOM.render(<App drizzle={drizzle} />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}