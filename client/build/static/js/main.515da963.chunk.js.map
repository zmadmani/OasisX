{"version":3,"sources":["images/x.svg","containers/market/orderlist/orderlist.js","containers/market/buysell/buysell.js","containers/market/myorders/myorders.js","containers/market/markethistory/markethistory.js","containers/market/myhistory/myhistory.js","containers/market/sidebar/sidebar.js","containers/market/market.js","containers/home/home.js","containers/infobar/wrapstation/wrapstation.js","containers/infobar/infobar.js","containers/navbar/navbar.js","containers/App/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","OrderList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","orders","timeout","buildRow","bind","assertThisInitialized","updateOrders","nextProps","nextState","clearTimeout","getOrders","setTimeout","setState","drizzle","currencies","type","market","contracts","Market","length","token_addr_0","address","token_addr_1","pay_token","buy_token","SupportMethods","methods","getOffers","rawOrders","processOrders","n","i","id","pay_amount","web3","utils","fromWei","toString","buy_amount","price","order","Math","round","curr_0_amt","curr_1_amt","push","x","parts","split","replace","join","item","index","_this2","react_default","a","createElement","Table","Row","key","onClick","setSidebar","className","Cell","numberWithCommas","textAlign","selectable","striped","basic","celled","unstackable","Header","HeaderCell","Body","map","Component","BuySell","loading","amount_0","ui_amount_0","amount_1","ui_amount_1","currency_0_balance","currency_1_balance","bignumbers","handleSubmit","updateBalances","generateBigNumbers","drizzleState","account","accounts","balanceOf","toBN","_this$props2","curr_gem_0","curr_gem_1","data","pay_amt","pay_gem","buy_amt","buy_gem","offer","cacheSend","from","gasPrice","toWei","value","test","amount_1_bn","amount_0_bn","_this$state","can_buy","can_sell","curr_0_balance","curr_1_balance","gte","gt","Form","size","Field","Input","label","content","labelPosition","placeholder","onChange","e","handlePriceChange","target","Group","widths","disabled","handleAmountChange","Button","inverted","handleAmountPercentageChange","div","mul","color","MyOrders","buy_orders","sell_orders","concat","sort","b","parseInt","console","log","cancel","orders_table","background_item","cancelOrder","columns","MarketHistory","subsciption","getPastOrders","subscribeToEvents","subscription","unsubscribe","eth","getBlockNumber","latestBlock","curr_1_addr","curr_2_addr","hashKey1","soliditySha3","hashKey2","Contract","abi","events","LogTake","filter","pair","fromBlock","on","event","eventsToOrders","buy_addr","pay_addr","returnValues","getType","getPrice","timestamp","Date","toLocaleTimeString","toLocaleDateString","curr_1","curr_2","taker","maker","reverse","getPastEvents","toBlock","first","second","offers_table","MyHistory","subscriptions","taker_subscription","maker_subscription","true_type","taker_events","maker_events","SideBar","executeTrade","_this$props","sidebar_info","amount","will_receive","buy","visible","ui_amount","currency_0_key","currency_1_key","info_key","cacheCall","getOffer","internal_value","err","ui_value","contract","func","ret","updated_info","_this$props3","toggleSidebar","action","subtitle","getItem","getUpdatedInfo","giving","currency","balance","offered","max_take","receive_currency","lt","Sidebar","as","Segment","animation","direction","Icon","name","handleUserChange","info","keys","numBuys","numSells","buy_token_addr","sell_token_addr","numBuysKey","getOfferCount","numSellsKey","assign","title","panes","menuItem","render","Tab","Pane","myorders_myorders","myhistory_myhistory","markethistory_markethistory","sidebar_sidebar","buysell_buysell","menu","fluid","tabular","attached","Grid","divided","Column","computer","tablet","mobile","orderlist_orderlist","Home","Transition","transitionOnMount","duration","WrapStation","onWrap","deposit","WETH","amount_wrap","ui_amount_wrap","onUnwrap","withdraw","amount_unwrap","ui_amount_unwrap","weth_balance","eth_balance","onSubmit","width","handleUserUpdate","handlePercentUpdate","Infobar","context","approved","DAI","MKR","ETH","updateInfo","market_address","dai_balance","mkr_balance","allowance","weth_approval","dai_approval","mkr_approval","accountBalances","approve","approveCurrencyForAmount","current_approval","approveCurrency","unapproveCurrency","raw_balance","raw_allowance","padded","closeSidebar","vals","obj","getUIBalance","getUIAllowance","padding","ui_account","x_icon","substring","Checkbox","toggle","checked","toggleApproval","wrapstation_wrapstation","Navbar","handleItemClick","_ref","activeItem","toggleVisible","children","other_buttons","href","Responsive","onlyMobile","Menu","borderless","fixed","Item","active","src","logo","alt","Dropdown","text","button","idx","Link","to","position","infobar_infobar","minWidth","onlyTablet","secondary","vertical","handleToggle","App","store","subscribe","getState","drizzleStatus","initialized","HashRouter","navbar_navbar","Switch","Route","exact","path","home_home","containers_market_market","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","Web3","givenProvider","config","require","erc20Abi","WEthAbi","MatchingMarketAbi","SupportMethodsAbi","options","contractName","web3Contract","interface","polls","blocks","syncAlways","drizzleStore","generateStore","Drizzle","ReactDOM","containers_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.515da963.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/x.23ec4264.svg\";","import React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nimport './orderlist.css'\n\nclass OrderList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      orders: null,\n      timeout: null\n    }\n\n    this.buildRow = this.buildRow.bind(this)\n    this.updateOrders = this.updateOrders.bind(this)\n  }\n\n  async componentDidMount() {\n    this.updateOrders()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextState.orders !== this.state.orders) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  componentWillUnmount() {\n    if(this.state.timeout !== null) {\n      clearTimeout(this.state.timeout)\n    }\n  }\n\n  async updateOrders() {\n    var orders = await this.getOrders()\n    var timeout = setTimeout(this.updateOrders, 2500)\n    this.setState({ orders, timeout })\n  }\n\n  async getOrders() {\n    var { drizzle, currencies, type } = this.props\n    var market = drizzle.contracts.Market\n\n    if(currencies.length === 2) {\n      var token_addr_0 = drizzle.contracts[currencies[0]].address\n      var token_addr_1 = drizzle.contracts[currencies[1]].address\n\n      var pay_token = null\n      var buy_token = null\n\n      if(type === \"BUY\") {\n        pay_token = token_addr_1\n        buy_token = token_addr_0\n      } else {\n        pay_token = token_addr_0\n        buy_token = token_addr_1\n      }\n\n      const rawOrders = await drizzle.contracts.SupportMethods.methods.getOffers(market.address, pay_token, buy_token).call()\n      var orders = []\n      if(rawOrders) {\n        orders = this.processOrders(rawOrders)\n      }\n      return orders\n    }\n  }\n\n  processOrders(rawOrders) {\n    var { type } = this.props\n\n    var n = rawOrders[\"ids\"].length\n    var orders = []\n    for(var i = 0; i < n; i++) {\n      if(rawOrders[\"ids\"][i] !== \"0\") {\n        var id = rawOrders[\"ids\"][i]\n        var pay_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"payAmts\"][i].toString(), 'ether')\n        var buy_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"buyAmts\"][i].toString(), 'ether') \n        var price = 0\n        var order = {}\n        if(type === \"BUY\") {\n          price = Math.round(pay_amount / buy_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": buy_amount,\n            \"curr_1_amt\": pay_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        } else {\n          price = Math.round(buy_amount / pay_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": pay_amount,\n            \"curr_1_amt\": buy_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        }\n        orders.push(order)\n      }\n    }\n\n    return orders\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  buildRow(item, index) {\n    return (\n      <Table.Row key={item[\"id\"]} onClick={() => this.props.setSidebar(item) } className=\"OrderList-table-row\">\n        <Table.Cell>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n        </Table.Cell>\n\n        <Table.Cell>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"curr_0_amt\"])}</div>\n        </Table.Cell>\n\n        <Table.Cell  textAlign='left'>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"curr_1_amt\"])}</div>\n        </Table.Cell>\n      </Table.Row>\n    )\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    if(!orders) {\n      return (\n        <div className=\"OrderList\">\n          <div className=\"OrderList-loading\">Error...</div>\n        </div>\n      )\n    }\n\n    if(orders.length === 0) {\n      return (\n        <div className=\"OrderList\">\n          <div className=\"OrderList-loading\">Loading...</div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"OrderList\">\n        <Table selectable striped basic celled unstackable id=\"OrderList-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body id=\"OrderList-tableBody\">\n            {orders.map(this.buildRow)}\n          </Table.Body>\n        </Table>\n\n      </div>\n    );\n  }\n}\n\nexport default OrderList\n","import React, { Component } from 'react'\nimport { Input, Form, Button } from 'semantic-ui-react'\n\nimport './buysell.css'\n\nclass BuySell extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      price: '',\n      amount_0: '',\n      ui_amount_0: '',\n      amount_1: '',\n      ui_amount_1: '',\n      currency_0_balance: \"0\",\n      currency_1_balance: \"0\",\n      bignumbers: []\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.updateBalances = this.updateBalances.bind(this)\n  }\n\n  componentDidMount() {\n    this.generateBigNumbers()\n    this.updateBalances()\n  }\n\n  async updateBalances() {\n    var { drizzle, drizzleState, currencies } = this.props\n    const account = drizzleState.accounts[0]\n    const currency_0_balance = await drizzle.contracts[currencies[0]].methods.balanceOf(account).call()\n    const currency_1_balance = await drizzle.contracts[currencies[1]].methods.balanceOf(account).call()\n    this.setState({ currency_0_balance, currency_1_balance })\n    setTimeout(this.updateBalances, 2500)\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  // Main function that interfaces and writes to the blockchain.\n  // This is the most important function here.\n  handleSubmit(type) {\n    // Set loading to true to update UI\n    this.setState({loading: true})\n\n    var { currencies, drizzle, drizzleState } = this.props\n    const web3 = drizzle.web3\n\n    // Get the important info for the transaction\n    const account = drizzleState.accounts[0]\n    var amount_0 = this.state.amount_0\n    var amount_1 = this.state.amount_1\n    var curr_gem_0 = drizzle.contracts[currencies[0]].address\n    var curr_gem_1 = drizzle.contracts[currencies[1]].address\n    var data = {}\n\n    // Set data to the correct value depending on if the order is a BUY or SELL\n    // Basically you just flip the currency 0 and currency 1\n    if(type === \"BUY\") {\n      data = {\n        pay_amt: amount_1,\n        pay_gem: curr_gem_1,\n        buy_amt: amount_0,\n        buy_gem: curr_gem_0\n      }\n    } else if(type === \"SELL\") {\n      data = {\n        pay_amt: amount_0,\n        pay_gem: curr_gem_0,\n        buy_amt: amount_1,\n        buy_gem: curr_gem_1\n      }\n    } else {\n      return\n    }\n\n    const offer = this.props.drizzle.contracts.Market.methods.offer\n    offer.cacheSend(data.pay_amt, data.pay_gem, data.buy_amt, data.buy_gem, 1, {from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n\n    this.setState({ loading: false, price: '', amount_0: '0', ui_amount_0: '', amount_1: '0', ui_amount_1: '' })\n  }\n\n  handlePriceChange(value) {\n    const web3 = this.props.drizzle.web3\n    if(/\\S/.test(value) && this.state.ui_amount_0 !== \"\") {\n      var price = value\n      var ui_amount_1 = this.state.ui_amount_0 * price\n      var amount_1_bn = web3.utils.toWei(ui_amount_1.toString(), 'ether')\n      this.setState({ price: price, amount_1: amount_1_bn.toString(), ui_amount_1: ui_amount_1.toString() })\n    } else {\n      this.setState({ price: value, amount_1: '0', ui_amount_1: '' })    \n    }\n  }\n\n  handleAmountChange(index, value) {\n    const web3 = this.props.drizzle.web3\n    if(/\\S/.test(value) && this.state.price !== \"\") {\n      var price = this.state.price\n      var ui_amount_0 = null\n      var ui_amount_1 = null\n      var amount_0_bn = null\n      var amount_1_bn = null\n\n      if(index === 0) {\n        ui_amount_0 = value\n        amount_0_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_0.toString(), 'ether'))\n        ui_amount_1 = ui_amount_0 * price\n        amount_1_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_1.toString(), 'ether'))\n      } else if(index === 1) {\n        ui_amount_1 = value\n        amount_1_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_1.toString(), 'ether'))\n        ui_amount_0 = ui_amount_1 / price\n        amount_0_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_0.toString(), 'ether'))\n      } else {\n        return\n      }\n\n      this.setState({ \n        amount_0: amount_0_bn.toString(), \n        ui_amount_0: ui_amount_0, \n        amount_1: amount_1_bn.toString(),\n        ui_amount_1: ui_amount_1,\n      })\n    } else {\n      this.setState({\n        amount_0: '0',\n        ui_amount_0: '',\n        amount_1: '0',\n        ui_amount_1: ''\n      })\n    }\n  }\n\n  handleAmountPercentageChange(index, value) {\n    const web3 = this.props.drizzle.web3\n    var price = this.state.price\n\n    var ui_amount_0 = null\n    var ui_amount_1 = null\n    var amount_0_bn = null\n    var amount_1_bn = null\n\n    if(index === 0) {\n      amount_0_bn = value\n      ui_amount_0 = web3.utils.fromWei(amount_0_bn, 'ether')\n      ui_amount_1 = ui_amount_0 * price\n      amount_1_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_1.toString(), 'ether'))\n    } else if(index === 1) {\n      amount_1_bn = value\n      ui_amount_1 = web3.utils.fromWei(amount_1_bn, 'ether')\n      ui_amount_0 = ui_amount_1 / price\n      amount_0_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_0.toString(), 'ether'))\n    } else {\n      return\n    }\n\n    this.setState({\n      amount_0: amount_0_bn.toString(),\n      ui_amount_0: ui_amount_0,\n      amount_1: amount_1_bn.toString(),\n      ui_amount_1: ui_amount_1\n    })\n  }\n\n  render() {\n    var { price, amount_0, amount_1, ui_amount_0, ui_amount_1, currency_0_balance, currency_1_balance, bignumbers } = this.state\n    var { currencies } = this.props\n    const web3 = this.props.drizzle.web3\n    \n    var can_buy = false\n    var can_sell = false\n    \n    var curr_0_balance = web3.utils.toBN(currency_0_balance)\n    var curr_1_balance = web3.utils.toBN(currency_1_balance)\n    \n    var amount_0_bn = web3.utils.toBN(amount_0)\n    var amount_1_bn = web3.utils.toBN(amount_1)\n\n    if(curr_0_balance.gte(amount_0_bn) && amount_0_bn.gt(web3.utils.toBN(\"0\"))) {\n      can_sell = true\n    }\n    \n    if(curr_1_balance.gte(amount_1_bn) && amount_1_bn.gt(web3.utils.toBN(\"0\"))) {\n      can_buy = true\n    }\n\n    return (\n      <div className=\"BuySell\">\n        <Form size='tiny'>\n          <div className=\"BuySell-headers\">Price</div>\n          <Form.Field>\n            <Input\n              label={{ basic: true, content: currencies[1] + \" / \" + currencies[0]  }}\n              labelPosition='right'\n              placeholder='Enter Price...'\n              value={price}\n              onChange={(e) => { this.handlePriceChange(e.target.value) }}\n            />\n          </Form.Field>\n          <div className=\"BuySell-headers\">Amounts</div>\n          <Form.Group widths='equal'>\n            <Form.Field>\n              <Input\n                label={{ basic: true, content: currencies[0] }}\n                labelPosition='right'\n                placeholder='Enter Amount...'\n                disabled={price === ''}\n                value={ui_amount_0}\n                onChange={(e) => { this.handleAmountChange(0, e.target.value) }}\n                className=\"BuySell-amount-input\"\n              />\n              <Button.Group className=\"BuySell-mini-buttons\" size='mini' basic inverted>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[4]))} >25%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[2]))} >50%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance) } >100%</Button>\n              </Button.Group>\n            </Form.Field>\n            <Form.Field>\n              <Input\n                label={{ basic: true, content: currencies[1] }}\n                labelPosition='right'\n                placeholder='Enter Amount...'\n                disabled={price === ''}\n                value={ui_amount_1}\n                onChange={(e) => { this.handleAmountChange(1, e.target.value) }}\n                className=\"BuySell-amount-input\"\n              />\n              <Button.Group className=\"BuySell-mini-buttons\" size='mini' basic inverted>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[4]))} >25%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[2]))} >50%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance) } >100%</Button>\n              </Button.Group>\n            </Form.Field>\n          </Form.Group>\n          <Button className=\"BuySell-button\" color='green' disabled={!can_buy} onClick={() => this.handleSubmit(\"BUY\")} >BUY {currencies[0]}</Button>\n          <Button className=\"BuySell-button\" color='red' disabled={!can_sell} onClick={() => this.handleSubmit(\"SELL\")} >SELL {currencies[0]}</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default BuySell\n","import React, { Component } from 'react'\nimport { Table, Button } from 'semantic-ui-react'\n\nimport './myorders.css'\n\nclass MyOrders extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      orders: []\n    }\n\n    this.updateOrders = this.updateOrders.bind(this)\n  }\n\n  async componentDidMount() {\n    this.updateOrders()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextState.orders !== this.state.orders) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  async updateOrders() {\n    var buy_orders = await this.getOrders(\"BUY\")\n    var sell_orders = await this.getOrders(\"SELL\")\n    var orders = buy_orders.concat(sell_orders)\n    orders.sort(function(a, b) {\n      return parseInt(a[3]) > parseInt(b[3]) ? 1 : -1\n    })\n    this.setState({ orders })\n    setTimeout(this.updateOrders, 2500)\n  }\n\n  async getOrders(type) {\n    var { drizzle, currencies } = this.props\n    var market = drizzle.contracts.Market\n\n    if(currencies.length === 2) {\n      var token_addr_0 = drizzle.contracts[currencies[0]].address\n      var token_addr_1 = drizzle.contracts[currencies[1]].address\n\n      var pay_token = null\n      var buy_token = null\n\n      if(type === \"BUY\") {\n        pay_token = token_addr_1\n        buy_token = token_addr_0\n      } else {\n        pay_token = token_addr_0\n        buy_token = token_addr_1\n      }\n\n      const rawOrders = await drizzle.contracts.SupportMethods.methods.getOffers(market.address, pay_token, buy_token).call()\n      var orders = []\n      if(rawOrders) {\n        orders = this.processOrders(rawOrders, type)\n      }\n      return orders\n    }\n  }\n\n  processOrders(rawOrders, type) {\n    var { drizzleState } = this.props\n\n    let account = drizzleState.accounts[0]\n    var n = rawOrders[\"ids\"].length\n    var orders = []\n    for(var i = 0; i < n; i++) {\n      if(rawOrders[\"ids\"][i] !== \"0\" && rawOrders[\"owners\"][i] === account) {\n        var id = rawOrders[\"ids\"][i]\n        var pay_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"payAmts\"][i].toString(), 'ether')\n        var buy_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"buyAmts\"][i].toString(), 'ether') \n        var price = 0\n        var order = {}\n        if(type === \"BUY\") {\n          price = Math.round(pay_amount / buy_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": buy_amount,\n            \"curr_1_amt\": pay_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        } else {\n          price = Math.round(buy_amount / pay_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": pay_amount,\n            \"curr_1_amt\": buy_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        }\n        orders.push(order)\n      }\n    }\n\n    return orders\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  cancelOrder(id) {\n    var { Market } = this.props.drizzle.contracts\n    let account = this.props.drizzleState.accounts[0]\n\n    console.log(\"CANCEL ORDER \" + id)\n    const cancel = Market.methods.cancel\n    cancel.cacheSend(id, {from: account, gasPrice: this.props.drizzle.web3.utils.toWei('5', 'gwei') })\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    var orders_table = null\n    var background_item = null\n\n    if(orders.length === 0) {\n      background_item = (<div id=\"MyOrders-empty\">NO ORDERS</div>)\n    } else {\n      orders_table = (<Table.Body id=\"MyOrders-tableBody\">\n            {orders.map((item, index) => {\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MyOrders-color\">{item[\"type\"]}</span>) : (<span className=\"red\">{item[\"type\"]}</span>)\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell  textAlign='left'>\n                    <div className='MyOrders-table-entry'><Button className=\"MyOrders-button\" color='red' size='mini' inverted onClick={() => {this.cancelOrder(item[\"id\"])}}>CANCEL</Button></div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"curr_0_amt\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"curr_1_amt\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MyOrders\">\n        <Table selectable striped basic celled unstackable columns={5} textAlign='left' id=\"MyOrders-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Action</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { orders_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MyOrders\n","import React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nimport './markethistory.css'\n\nclass MarketHistory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      orders: [],\n      subsciption: null\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    this.setState({ orders, loading: false })\n    var subscription = await this.subscribeToEvents()\n    this.setState({ subscription })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscription) {\n      this.state.subscription.unsubscribe()\n    }\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    \n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n      console.log(orders)\n    }.bind(this))\n\n    return subscription\n  }\n\n  componentWillMount() {\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      return \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      return \"BUY\"\n    } else {\n      return null\n    }\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var price = 0\n    if(type === \"BUY\") {\n      price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = this.props.drizzle.web3.utils.fromWei(order[\"give_amt\"].toString(), 'ether')\n      var buy_amt = this.props.drizzle.web3.utils.fromWei(order[\"take_amt\"].toString(), 'ether')\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      var timestamp = new Date(order[\"timestamp\"] * 1000)\n      timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n      order = {\n        \"timestamp\": timestamp,\n        \"type\": type,\n        \"price\": offer[0],\n        \"curr_1\": offer[1],\n        \"curr_2\": offer[2],\n        \"taker\": order[\"taker\"],\n        \"maker\": order[\"maker\"]\n      }\n      orders.push(order)\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock - 2000,\n      toBlock: 'latest'\n    })\n\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  render() {\n    var { loading, orders } = this.state\n    var { currencies } = this.props\n\n    var offers_table = null\n    var background_item = null\n\n    if(loading) {\n      background_item = (<div id=\"MarketHistory-empty\">Loading...</div>)\n    } else if(orders.length === 0) {\n      background_item = (<div id=\"MarketHistory-empty\">NO ORDERS</div>)\n    } else {\n      offers_table = (<Table.Body id=\"MarketHistory-tableBody\">\n            {orders.map((item, index) => {\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">BUY</span>) : (<span className=\"red MarketHistory-type\">SELL</span>)\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{item[\"timestamp\"]}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_1\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_2\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MarketHistory\">\n        <Table selectable striped basic celled unstackable id=\"MarketHistory-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Time</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { offers_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MarketHistory\n","import React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nimport './myhistory.css'\n\nclass MyHistory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      orders: [],\n      subscriptions: null\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    this.setState({ orders, loading: false })\n    var subscriptions = await this.subscribeToEvents()\n\n    this.setState({ subscriptions })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscriptions) {\n      this.state.subscriptions[0].unsubscribe()\n      this.state.subscriptions[1].unsubscribe()\n    }\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle, drizzleState } = this.props\n    var { Market } = drizzle.contracts\n    let account = drizzleState.accounts[0]\n\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var taker_subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2], taker: account },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    var maker_subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2], maker: account },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    return [taker_subscription, maker_subscription]\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    var type = null\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      type = \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      type = \"BUY\"\n    } else {\n      return null\n    }\n\n    return type\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var price = 0\n    if(type === \"BUY\") {\n      price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    let account = this.props.drizzleState.accounts[0]\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = this.props.drizzle.web3.utils.fromWei(order[\"give_amt\"].toString(), 'ether')\n      var buy_amt = this.props.drizzle.web3.utils.fromWei(order[\"take_amt\"].toString(), 'ether')\n      var true_type = type\n      if(order[\"maker\"] === account) {\n        if(type === \"BUY\") {\n          true_type = \"SELL\"\n        } else {\n          true_type = \"BUY\"\n        }\n      }\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      var timestamp = new Date(order[\"timestamp\"] * 1000)\n      timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n      order = {\n        \"timestamp\": timestamp,\n        \"type\": true_type,\n        \"price\": offer[0],\n        \"curr_1\": offer[1],\n        \"curr_2\": offer[2],\n        \"taker\": order[\"taker\"],\n        \"maker\": order[\"maker\"]\n      }\n      orders.push(order)\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle, drizzleState } = this.props\n    var { Market } = drizzle.contracts\n    let account = drizzleState.accounts[0]\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var taker_events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2], taker: account },\n      fromBlock: latestBlock - 25000,\n      toBlock: 'latest'\n    })\n    var maker_events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2], maker: account },\n      fromBlock: latestBlock - 25000,\n      toBlock: 'latest'\n    })\n\n    var events = maker_events.concat(taker_events)\n\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    console.log(events)\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  render() {\n    var { loading, orders } = this.state\n    var { currencies } = this.props\n\n    var offers_table = null\n    var background_item = null\n\n    if(loading) {\n      background_item = (<div id=\"MarketHistory-empty\">Loading...</div>)\n    } else if(orders.length === 0) {\n      background_item = (<div id=\"MarketHistory-empty\">NO ORDERS</div>)\n    } else {\n      offers_table = (<Table.Body id=\"MarketHistory-tableBody\">\n            {orders.map((item, index) => {\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">BUY</span>) : (<span className=\"red MarketHistory-type\">SELL</span>)\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{item[\"timestamp\"]}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_1\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_2\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MarketHistory\">\n        <Table selectable striped basic celled unstackable id=\"MarketHistory-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Time</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { offers_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MyHistory\n","import React, { Component } from 'react'\nimport { Sidebar, Segment, Icon, Input, Form, Button } from 'semantic-ui-react'\n\nimport './sidebar.css'\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: false,\n      amount: '0',\n      ui_amount: '',\n      currency_0_key: null,\n      currency_1_key: null,\n      info_key: null,\n      bignumbers: {}\n    }\n  }\n\n  // Get the balances for each of the currencies since we will need that throughout the component\n  componentDidMount() {\n    var { drizzle, drizzleState, currencies } = this.props\n\n    let account = drizzleState.accounts[0]\n    const currency_0_key = drizzle.contracts[currencies[0]].methods.balanceOf.cacheCall(account)\n    const currency_1_key = drizzle.contracts[currencies[1]].methods.balanceOf.cacheCall(account)\n\n    this.generateBigNumbers()\n    this.setState({ currency_0_key, currency_1_key })\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  // Need to update visible and the side_bar info key if a new order is passed in\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.visible !== this.props.visible) {\n      this.setState({ visible: nextProps.visible })\n      if(nextProps.visible === false) {\n        this.setState({ info_key: null, amount: '0', ui_amount: '' })\n      }\n    }\n    if(nextProps.sidebar_info !== this.props.sidebar_info) {\n      const info_key = this.props.drizzle.contracts.Market.methods.getOffer.cacheCall(nextProps.sidebar_info[\"id\"])\n      this.setState({ info_key, amount: '0', ui_amount: '' })\n    }\n  }\n\n  // Most important function in the entire file since it actually interfaces\n  // and edits the blockchain.\n  executeTrade = () => {\n    var { drizzle, drizzleState, sidebar_info } = this.props\n    const account = drizzleState.accounts[0]\n    const web3 = drizzle.web3\n\n    var amount = this.state.amount\n    var will_receive = amount === \"\" ? \"0\" : amount\n    will_receive = web3.utils.fromWei(will_receive, 'ether')\n    if(sidebar_info[\"type\"] === \"sell\") {\n      will_receive /= sidebar_info[\"price\"]\n    } else {\n      will_receive *= sidebar_info[\"price\"]\n    }\n    will_receive = web3.utils.toWei(will_receive.toString(), 'ether')\n\n    var id = sidebar_info[\"id\"]\n\n    const buy = drizzle.contracts.Market.methods.buy\n    buy.cacheSend(id, will_receive, {from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n\n    // this.setState({ visible: false, amount: '0', ui_amount: '', info_key: null })\n  }\n\n  numberWithCommas(x) {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n  }\n\n  handleUserChange(value) {\n    var internal_value = 0\n    try{\n      if(/\\S/.test(value)) {\n        internal_value = this.props.drizzle.web3.utils.toWei(value.toString(), 'ether')\n      }\n    } catch (err) {\n      console.log(err)\n      return\n    }\n    this.setState({ ui_amount: value, amount: internal_value })\n  }\n\n  handleAmountPercentageChange(value) {\n    var ui_value = this.props.drizzle.web3.utils.fromWei(value.toString(), 'ether')\n    this.setState({ amount: value, ui_amount: ui_value })\n  }\n\n  // Helper function to get the cacheKeys from drizzlestate if they exist. else return a 0 BN\n  // Also handles the case where sometimes metamask returns a null response. Treats that as a nonexistant key and returns 0 BN\n  // Note: ONLY MEANT FOR INTEGER RETURN VALUES\n  getItem(contract, func, key) {\n    const web3 = this.props.drizzle.web3\n    var ret = \"0\"\n\n    // Check if the cacheKey is in the store\n    if(key in contract[func]) {\n      ret = contract[func][key].value ? contract[func][key].value : \"0\"\n    }\n    return web3.utils.toBN(ret)\n  }\n\n  // So we were passed in the most up to date info the older component had.\n  // However this can and will change if it was stale or other people are taking the order.\n  // This keeps the info up to date and fallsback onto the old data if an error happens.\n  getUpdatedInfo() {\n    var { info_key } = this.state\n    var { sidebar_info } = this.props\n    const web3 = this.props.drizzle.web3\n    const Market = this.props.drizzleState.contracts.Market\n\n    var updated_info = null\n\n    if(info_key in Market.getOffer && Market.getOffer[info_key].value) {\n      updated_info = Market.getOffer[info_key].value\n      var buy_amt = updated_info[0]\n      var pay_amt = updated_info[2]\n      if(sidebar_info[\"type\"] === \"buy\") {\n        updated_info = {\n          \"price\": sidebar_info[\"price\"],\n          \"curr_0_amt\": web3.utils.toBN(pay_amt),\n          \"curr_1_amt\": web3.utils.toBN(buy_amt)\n        }\n      } else {\n        updated_info = {\n          \"price\": sidebar_info[\"price\"],\n          \"curr_0_amt\": web3.utils.toBN(buy_amt),\n          \"curr_1_amt\": web3.utils.toBN(pay_amt)\n        }\n      }\n    } else {\n      updated_info = {\n          \"price\": sidebar_info[\"price\"],\n          \"curr_0_amt\": web3.utils.toBN(web3.utils.toWei(sidebar_info[\"curr_0_amt\"].toString(), 'ether')),\n          \"curr_1_amt\": web3.utils.toBN(web3.utils.toWei(sidebar_info[\"curr_1_amt\"].toString(), 'ether'))\n      }\n    }\n\n    return updated_info\n  }\n\n  render() {\n    var { visible, amount, ui_amount, currency_0_key, currency_1_key, bignumbers } = this.state\n    var { currencies, toggleSidebar, sidebar_info } = this.props\n    const contracts = this.props.drizzleState.contracts\n    const web3 = this.props.drizzle.web3\n\n    // Invert the type since the action do as a taker is the inverse of the action of the maker\n    var action = sidebar_info[\"type\"] === \"buy\" ? \"SELL\" : \"BUY\"\n    var subtitle = action === \"BUY\" ? (<span className=\"green\">{action}</span>) : (<span className=\"red\">SELL</span>)\n\n    // Get the current balances so that we know the limits for our order\n    var curr_0_balance = this.getItem(contracts[currencies[0]], \"balanceOf\", currency_0_key)\n    var curr_1_balance = this.getItem(contracts[currencies[1]], \"balanceOf\", currency_1_key)\n\n    // So we were passed in the most up to date info the older component had.\n    // However this can and will change if it was stale or other people are taking the order.\n    // This keeps the info up to date and fallsback onto the old data if an error happens.\n    var updated_info = this.getUpdatedInfo()\n    \n    // Build object that swaps values for buys and sells so that rendering is simple\n    var giving = {\n      \"currency\": null,\n      \"balance\": 0,\n      \"offered\": 0,\n      \"max_take\": 0,\n      \"receive_currency\": null,\n      \"will_receive\": 0\n    }\n    var will_receive = ui_amount === \"\" ? 0 : ui_amount\n\n    if(action === \"BUY\") {\n      giving[\"currency\"] = currencies[1]\n      giving[\"receive_currency\"] = currencies[0]\n      giving[\"balance\"] = curr_1_balance\n      giving[\"ui_balance\"] = Math.round(web3.utils.fromWei(curr_1_balance, 'ether') * 1000) / 1000\n      giving[\"offered\"] = updated_info[\"curr_1_amt\"]\n      giving[\"ui_offered\"] = Math.round(web3.utils.fromWei(updated_info[\"curr_1_amt\"], 'ether') * 1000) / 1000\n      giving[\"will_receive\"] = Math.round((will_receive / updated_info[\"price\"]) * 1000) / 1000\n    } else {\n      giving[\"currency\"] = currencies[0]\n      giving[\"receive_currency\"] = currencies[1]\n      giving[\"balance\"] = curr_0_balance\n      giving[\"ui_balance\"] = Math.round(web3.utils.fromWei(curr_0_balance, 'ether') * 1000) / 1000\n      giving[\"offered\"] = updated_info[\"curr_0_amt\"]\n      giving[\"ui_offered\"] = Math.round(web3.utils.fromWei(updated_info[\"curr_0_amt\"], 'ether') * 1000) / 1000\n      giving[\"will_receive\"] = Math.round((will_receive * updated_info[\"price\"]) * 1000) / 1000\n    }\n    giving[\"max_take\"] = giving[\"balance\"].lt(giving[\"offered\"]) ? giving[\"balance\"] : giving[\"offered\"]\n\n    return (\n      <div className=\"Side_bar\">\n        <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Side_bar\">\n          <div id=\"Side_bar-x-container\">\n            <Icon name=\"close\" onClick={toggleSidebar} id=\"Side_bar-x\" size=\"large\" />\n          </div>\n          <div id=\"Side_bar-title\">Take Order</div>\n          <div id=\"Side_bar-subtitle\">How much would you like to {subtitle}?</div>\n          \n          <div id=\"Side_bar-info\">\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Price:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(updated_info[\"price\"])} <span id=\"Side_bar-exchange\">{currencies[1]} / {currencies[0]}</span></div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Balance {giving[\"currency\"]}:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(giving[\"ui_balance\"])} <span id=\"Side_bar-exchange\">{giving[\"currency\"]}</span></div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Offered {giving[\"currency\"]}:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(giving[\"ui_offered\"])} <span id=\"Side_bar-exchange\">{giving[\"currency\"]}</span></div>\n            </div>\n          </div>\n\n          <Form size='tiny' id=\"Side_bar-form\">\n            <Form.Field>\n              <div>\n                <div className=\"Side_bar-info-title\">Spend {giving[\"currency\"]}:</div>\n                <Input\n                  label={{ basic: true, content: giving[\"currency\"] }}\n                  labelPosition='right'\n                  placeholder='Enter Amount...'\n                  value={ui_amount}\n                  onChange={(e) => { this.handleUserChange(e.target.value) }}\n                />\n              </div>\n            </Form.Field>\n            <Button.Group id=\"Side_bar-mini-buttons\" size='mini' basic>\n              <Button onClick={ () => this.handleUserChange(\"\") } >0%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].div(bignumbers[4])) } >25%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].div(bignumbers[2])) } >50%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"]) } >100%</Button>\n            </Button.Group>\n          </Form>\n          <div className=\"Side_bar-info-item\">\n            <div className=\"Side_bar-info-title\">Will Receive</div>\n            <div className=\"Side_bar-info-content\">{giving[\"will_receive\"].toString() + \" \" + giving[\"receive_currency\"]}</div>\n          </div>\n\n          <Button className=\"BuySell-button\" color={action === \"BUY\" ? \"green\" : \"red\"} disabled={ui_amount === \"\" || web3.utils.toBN(amount).gt(giving[\"max_take\"])} onClick={this.executeTrade}>{action} {currencies[0]}</Button>\n\n        </Sidebar>\n      </div>\n    );\n  }\n}\n\nexport default SideBar\n","import React, { Component } from 'react'\nimport { Grid, Tab } from 'semantic-ui-react'\n\n// import Chart from './chart/chart'\nimport OrderList from './orderlist/orderlist'\nimport BuySell from './buysell/buysell'\nimport MyOrders from './myorders/myorders'\nimport MarketHistory from './markethistory/markethistory'\nimport MyHistory from './myhistory/myhistory'\nimport SideBar from './sidebar/sidebar'\n\nimport './market.css'\n\nclass Market extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currencies: [],\n      visible: false,\n      sidebar_info: {\n        \"price\": 0,\n        \"curr_0_amt\": 0,\n        \"curr_1_amt\": 0,\n        \"id\": \"\",\n        \"type\": \"\"\n      },\n      keys: {\n        numBuys: null,\n        numSells: null\n      }\n    }\n  }\n\n  componentWillMount() {\n    var currencies = this.props.pair.split(\"_\")\n    this.setState({currencies})\n  }\n\n  componentDidMount() {\n    var { drizzle } = this.props\n    var { currencies } = this.state\n\n    var buy_token_addr = drizzle.contracts[currencies[0]].address\n    var sell_token_addr = drizzle.contracts[currencies[1]].address\n\n    const numBuysKey = drizzle.contracts.Market.methods.getOfferCount.cacheCall(sell_token_addr, buy_token_addr)\n    const numSellsKey = drizzle.contracts.Market.methods.getOfferCount.cacheCall(buy_token_addr, sell_token_addr)\n\n    let keys = Object.assign({}, this.state.keys)\n    keys[\"numBuys\"] = numBuysKey\n    keys[\"numSells\"] = numSellsKey\n\n    this.setState({currencies, keys})\n  }\n\n  setSidebar = (info) => {\n    this.setState({ sidebar_info: info, visible: true })\n  }\n\n  toggleSidebar = () => {\n    this.setState({ visible: !this.state.visible })\n  }\n\n  render() {\n    var { currencies, keys, visible, sidebar_info } = this.state\n    var { Market } = this.props.drizzleState.contracts\n    var { drizzle, drizzleState } = this.props\n\n    var title = \"Market: \"\n    if(currencies.length === 2) {\n      title = title + currencies[0] + \"/\" + currencies[1]\n    }\n\n    var numBuys = \"Loading...\"\n    var numSells = \"Loading...\"\n\n    if(keys[\"numBuys\"] in Market.getOfferCount) {\n      numBuys = Market.getOfferCount[keys[\"numBuys\"]].value\n    }\n    if(keys[\"numSells\"] in Market.getOfferCount) {\n      numSells = Market.getOfferCount[keys[\"numSells\"]].value\n    }\n\n    if(!numBuys) {\n      numBuys = \"Error...\"\n    }\n    if(!numSells) {\n      numSells = \"Error...\"\n    }\n\n    const panes = [\n      { menuItem: 'Open Orders', render: () => <Tab.Pane className=\"Market-tab-pane\"><MyOrders currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n      { menuItem: 'My History', render: () => <Tab.Pane className=\"Market-tab-pane\"><MyHistory currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n      { menuItem: 'Market History', render: () => <Tab.Pane className=\"Market-tab-pane\"><MarketHistory currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n    ]\n\n    return (\n      <div className=\"Market\">\n        <SideBar currencies={currencies} toggleSidebar={this.toggleSidebar} sidebar_info={sidebar_info} visible={visible} drizzle={drizzle} drizzleState={ drizzleState } />\n        <div id=\"Market-title\"><span className=\"Market-h1\">{title}</span></div>\n\n        <div className=\"Market-headers\">Make Order</div>\n        <div id=\"Market-buysell\"><BuySell currencies={currencies} drizzle={drizzle} drizzleState={ drizzleState } /></div>\n        \n        <div className=\"Market-headers\">Activity Pane</div>\n        <div id=\"Market-activity-pane\">\n          <Tab menu={{ fluid: true, tabular: true, attached: 'top' }} panes={panes} />\n        </div>\n        <Grid divided id=\"Market-orderlists\">\n          <Grid.Row>\n            <Grid.Column className=\"Market-orderlist\" computer={8} tablet={8} mobile={16}>\n              <div className=\"Market-headers\">{currencies[0]} <span className=\"green\">Buy</span> Orders ({numBuys})</div>\n              <OrderList currencies={currencies} type={\"BUY\"} drizzle={drizzle} drizzleState={ drizzleState } setSidebar={this.setSidebar} />\n            </Grid.Column>\n            <Grid.Column className=\"Market-orderlist\" computer={8} tablet={8} mobile={16}>\n              <div className=\"Market-headers\">{currencies[0]} <span className=\"red\">Sell</span> Orders ({numSells})</div>\n              <OrderList currencies={currencies} type={\"SELL\"} drizzle={drizzle} drizzleState={ drizzleState } setSidebar={this.setSidebar} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Market\n","import React, { Component } from 'react'\nimport { Transition } from 'semantic-ui-react'\nimport './home.css'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate() {\n  }\n\n  render() {\n    return (\n      <div id=\"Home\">\n        <Transition transitionOnMount={true} animation='fade up' duration={1500}>\n          <div id=\"Home-title\">\n            OasisX\n          </div>\n        </Transition>\n        <Transition transitionOnMount={true} animation='fade up' duration={3500}>\n          <div id=\"Home-subtitle\">\n            The fastest UI for Oasis.\n          </div>\n        </Transition>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport { Input, Form, Button } from 'semantic-ui-react'\n\nimport './wrapstation.css'\n\nclass WrapStation extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      amount_wrap: '0',\n      ui_amount_wrap: '',\n      amount_unwrap: '0',\n      ui_amount_unwrap: '',\n      bignumbers: {}\n    }\n  }\n\n  componentDidMount() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  handlePercentUpdate(name, value) {\n    var ui_value = this.props.drizzle.web3.utils.fromWei(value.toString(), 'ether')\n    if(name === \"amount_wrap\") {\n      this.setState({ amount_wrap: value, ui_amount_wrap: ui_value })\n    } else if(name === \"amount_unwrap\") {\n      this.setState({ amount_unwrap: value, ui_amount_unwrap: ui_value })\n    } else {\n      return\n    }\n  }\n\n  handleUserUpdate(name, value) {\n    var internal_value = 0\n    try{\n      if(/\\S/.test(value)) {\n        internal_value = this.props.drizzle.web3.utils.toWei(value.toString(), 'ether')\n      }\n    } catch (err) {\n      console.log(err)\n      return\n    }\n\n    if(name === \"ui_amount_wrap\") {\n      this.setState({ ui_amount_wrap: value, amount_wrap: internal_value })\n    } else if(name === \"ui_amount_unwrap\") {\n      this.setState({ ui_amount_unwrap: value, amount_unwrap: internal_value })\n    } else {\n      return\n    }\n  }\n\n  onWrap = () => {\n    // Grab the wrap function from the contract instance and the account and amount we want to execute it with\n    const deposit = this.props.drizzle.contracts.WETH.methods.deposit\n    const account = this.props.drizzleState.accounts[0]\n    var amount = this.state.amount_wrap\n    var web3 = this.props.drizzle.web3\n\n    // Need to check if the amount value is an empty string/undefined/null and that it's greater than 0\n    if(amount && amount > 0) {\n      console.log(\"SENDING \" + amount + \" TO WRAPPER...\")\n      deposit.cacheSend({value: amount, from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      this.setState({ amount_wrap: '0', ui_amount_wrap: '' })\n    } else {\n      console.log(\"Error: No amount chosen\")\n    }\n  }\n\n  onUnwrap = () => {\n    const withdraw = this.props.drizzle.contracts.WETH.methods.withdraw\n    const account = this.props.drizzleState.accounts[0]\n    var amount = this.state.amount_unwrap\n    var web3 = this.props.drizzle.web3\n\n    if(amount && amount > 0) {\n      console.log(\"SENDING \" + amount + \" TO UNWRAPPER...\")\n      withdraw.cacheSend(amount.toString(), {from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      this.setState({ amount_unwrap: '0', ui_amount_unwrap: '' })\n    } else {\n      console.log(\"Error: No amount chosen\")\n    }\n  }\n\n  render() {\n    var { weth_balance, eth_balance } = this.props\n    var { ui_amount_wrap, ui_amount_unwrap, bignumbers } = this.state\n\n    // Convert to BigNumbers since they will have potential math done on them (risk of overflow/underflow)\n    eth_balance = this.props.drizzle.web3.utils.toBN(eth_balance)\n    weth_balance = this.props.drizzle.web3.utils.toBN(weth_balance)\n\n    return (\n      <div className=\"WrapStation\">\n        <div id=\"WrapStation-title\">Wrap / Unwrap</div>\n        <Form onSubmit={this.handleSubmit} size='tiny' id=\"WrapStation-form\">\n          <div className=\"WrapStation-headers\">Wrap <span id=\"WrapStation-warning\"><span className=\"red\">WARNING:</span> DO NOT WRAP ALL YOUR ETHER</span></div>\n          <Form.Group unstackable className=\"WrapStation-formgroup\">\n            <Form.Field width={11}>\n              <Input\n                label={{ basic: true, content: \"ETH\" }}\n                labelPosition='right'\n                placeholder='Enter Amount ETH...'\n                value={ui_amount_wrap}\n                onChange={(e) => { this.handleUserUpdate('ui_amount_wrap', e.target.value) }}\n              />\n            </Form.Field>\n            <Form.Button width={4} className=\"WrapStation-button\" color='green' size='small' disabled={ui_amount_wrap === \"\"} onClick={ () => this.onWrap() } >WRAP</Form.Button>\n          </Form.Group>\n          <Button.Group className=\"WrapStation-mini-buttons\" size='mini' basic inverted>\n            <Button onClick={ () => this.handleUserUpdate(\"ui_amount_wrap\", \"\") } >0%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.div(bignumbers[4])) } >25%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.div(bignumbers[2])) } >50%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.mul(bignumbers[9]).div(bignumbers[10])) } >90%</Button>\n          </Button.Group>\n          <div className=\"WrapStation-headers\">Unwrap</div>\n          <Form.Group unstackable className=\"WrapStation-formgroup\">\n            <Form.Field width={10}>\n              <Input\n                label={{ basic: true, content: \"WETH\" }}\n                labelPosition='right'\n                placeholder='Enter Amount WETH...'\n                value={ui_amount_unwrap}\n                onChange={(e) => { this.handleUserUpdate('amount_unwrap', e.target.value) }}\n              />\n            </Form.Field>\n            <Form.Button width={4} className=\"WrapStation-button\" color='green' size='small' disabled={ui_amount_unwrap === \"\"} onClick={ () => this.onUnwrap() } >UNWRAP</Form.Button>\n          </Form.Group>\n          <Button.Group className=\"WrapStation-mini-buttons\" size='mini' basic inverted>\n            <Button onClick={ () => this.handleUserUpdate(\"ui_amount_unwrap\", \"\") } >0%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.div(bignumbers[4])) } >25%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.div(bignumbers[2])) } >50%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance) } >100%</Button>\n          </Button.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default WrapStation\n","import React, { Component } from 'react'\nimport { Header, Table, Checkbox, Icon } from 'semantic-ui-react'\nimport './infobar.css'\n\nimport WrapStation from './wrapstation/wrapstation'\n\nclass Infobar extends Component {\n  constructor(props, context) {\n    super(props)\n    this.state = {\n      currencies: {\n        \"WETH\": {\n          balance: 0,\n          approved: 0\n        },\n        \"DAI\": {\n          balance: 0,\n          approved: 0\n        },\n        \"MKR\": {\n          balance: 0,\n          approved: 0\n        },\n        \"ETH\": {\n          balance: 0,\n          approved: 0\n        }\n      }\n    }\n\n    this.updateInfo = this.updateInfo.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateInfo()\n  }\n\n  async updateInfo() {\n    const { drizzle, drizzleState } = this.props\n    let account = drizzleState.accounts[0]\n    let market_address = drizzle.contracts.Market.address\n    \n    const weth_balance = await drizzle.contracts.WETH.methods.balanceOf(account).call()\n    const dai_balance = await drizzle.contracts.DAI.methods.balanceOf(account).call()\n    const mkr_balance = await drizzle.contracts.MKR.methods.balanceOf(account).call()\n    \n    const weth_approval = await drizzle.contracts.WETH.methods.allowance(account, market_address).call()\n    const dai_approval = await drizzle.contracts.DAI.methods.allowance(account, market_address).call()\n    const mkr_approval = await drizzle.contracts.MKR.methods.allowance(account, market_address).call()\n    \n    var eth_balance = drizzleState.accountBalances[account]\n\n    var currencies = {\n      \"WETH\": {\n        balance: weth_balance,\n        approved: weth_approval\n      },\n      \"DAI\": {\n        balance: dai_balance,\n        approved: dai_approval\n      },\n      \"MKR\": {\n        balance: mkr_balance,\n        approved: mkr_approval\n      },\n      \"ETH\": {\n        balance: eth_balance,\n        approved: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n      }\n    }\n\n    this.setState({ currencies })\n\n    setTimeout(this.updateInfo, 2500)\n  }\n\n  approveCurrencyForAmount(currency, amount) {\n    var { drizzle, drizzleState } = this.props\n    var account = drizzleState.accounts[0]\n    let market_address = drizzle.contracts.Market.address\n    var web3 = drizzle.web3\n\n    if(currency in drizzle.contracts) {\n      var currency_contract = drizzle.contracts[currency]\n      \n      var approve = currency_contract.methods.approve\n      approve.cacheSend(market_address, amount, {from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n    }\n  }\n\n  approveCurrency(currency) {\n    this.approveCurrencyForAmount(currency, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\")\n  }\n\n  unapproveCurrency(currency) {\n    this.approveCurrencyForAmount(currency, \"0\")\n  }\n\n  toggleApproval(currency, current_approval) {\n    let new_approval = !current_approval\n    if(new_approval) {\n      this.approveCurrency(currency)\n    } else {\n      this.unapproveCurrency(currency)\n    }\n  }\n\n  getUIBalance(raw_balance) {\n    let UI_balance = raw_balance\n    if(raw_balance != null) {\n      UI_balance = Math.round(this.props.drizzle.web3.utils.fromWei(raw_balance.toString(), 'ether') * 1000) / 1000\n    } else {\n      UI_balance = \"Error...\"\n    }\n    return UI_balance    \n  }\n\n  getUIAllowance(raw_balance, raw_allowance) {\n    const web3 = this.props.drizzle.web3\n    let UI_allowance = false\n    raw_allowance = web3.utils.toBN(raw_allowance)\n    let balance = web3.utils.toBN(raw_balance)\n    if(raw_allowance.gte(balance)) {\n      UI_allowance = true\n    } else {\n      UI_allowance = false\n    }\n    return UI_allowance\n  }\n\n  render() {\n    const { currencies } = this.state\n    const { padded, closeSidebar, drizzle, drizzleState } = this.props\n    let account = drizzleState.accounts[0]\n\n    const vals = Object.keys(currencies).map((key) => {\n      var obj = {}\n      obj[\"name\"] = key\n      obj[\"balance\"] = \"0\"\n      obj[\"approved\"] = false\n      var raw_balance = currencies[key][\"balance\"]\n      var raw_allowance = currencies[key][\"approved\"]\n      if(raw_balance && raw_allowance) {\n        obj[\"balance\"] = this.getUIBalance(raw_balance)\n        obj[\"approved\"] = this.getUIAllowance(raw_balance, raw_allowance)      \n      }\n      return obj\n    })\n\n    var padding = null\n    var ui_account = account\n    var x_icon = <Icon name=\"close\" id=\"Infobar-x\" size=\"large\" onClick={closeSidebar} />\n    if(padded) {\n      padding = \"very\"\n      x_icon = null\n    } else {\n      if(ui_account) {\n        ui_account = ui_account.substring(0, 10) + \" ... \" + ui_account.substring(ui_account.length - 10, ui_account.length) \n      }\n    }\n\n    return (\n      <div id='Infobar'>\n        <div className='Infobar-header'>{ui_account}{x_icon}</div>\n        <Table basic='very' padded={padding} striped unstackable id=\"Infobar-table\">\n          <Table.Header id=\"Infobar-table-header\">\n            <Table.Row>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Token</Table.HeaderCell>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Balance</Table.HeaderCell>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Approved</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {vals.map((item, index) => {\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell>\n                    <Header className='Infobar-table-entry' textAlign='left'>{item.name}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <Header className='Infobar-table-entry' textAlign='left'>{item.balance}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <Checkbox toggle disabled={item.name === \"ETH\"} checked={item.approved} onClick={ () => this.toggleApproval(item.name, item.approved) } />\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>\n        </Table>\n\n        <WrapStation drizzle={drizzle} drizzleState={drizzleState} weth_balance={currencies[\"WETH\"][\"balance\"]} eth_balance={currencies[\"ETH\"][\"balance\"]} />\n      </div>\n    )\n  }\n}\n\nexport default Infobar;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Responsive, Icon, Dropdown, Sidebar, Segment } from 'semantic-ui-react'\nimport './navbar.css'\nimport logo from '../../images/x.svg'\nimport Infobar from '../infobar/infobar'\n\nclass Navbar extends Component {\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeItem: '',\n      visible: false\n    }\n  }\n\n  componentDidUpdate() {\n  }\n\n  toggleVisible = () => {\n    this.setState({ visible: !this.state.visible })\n  }\n\n  render() {\n    const { children, drizzle, drizzleState } = this.props\n    const { activeItem, visible } = this.state\n\n    // var title = \"OasisX\"\n    var other_buttons = []\n    other_buttons.push(\n      {\n        name: 'WETH/DAI',\n        href: '/WETH_DAI' \n      },\n      {\n        name: 'MKR/WETH',\n        href: '/MKR_WETH'\n      },\n      {\n        name: 'MKR/DAI',\n        href: '/MKR_DAI'\n      }\n    )\n\n\n    return (\n      <div>\n        <Responsive {...Responsive.onlyMobile}>\n          <Menu \n            borderless\n            fixed='top'\n            id='Navbar-mobile'\n          >\n            <Menu.Item\n              name='Home'\n              active={activeItem === 'Home'}\n              href='/'\n              className='Navbar-item'\n            >\n              <div className='Navbar-button-mobile' id='Navbar-logo-container'><img src={logo} alt='logo' id='Navbar-logo-mobile' /></div>\n            </Menu.Item>\n            <Dropdown item text='Markets' className='Navbar-dropdown'>\n              <Dropdown.Menu>\n                {\n                  other_buttons.map((button, idx) => {\n                    return (\n                        <Dropdown.Item\n                          name={button.name}\n                          active={activeItem === button.name}\n                          className='Navbar-item'\n                          as={Link}\n                          to={button.href}\n                          key={idx}\n                        >\n                        {button.name}\n                      </Dropdown.Item>\n                    )\n                  })\n                }\n              </Dropdown.Menu>\n            </Dropdown>\n            <Menu.Menu position='right'>\n              <Menu.Item>\n                <Icon name='sidebar' inverted onClick={ this.toggleVisible } />\n              </Menu.Item>                \n            </Menu.Menu>\n          </Menu>\n          <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Navbar-Side_info_bar\">\n            <Infobar drizzle={drizzle} drizzleState={ drizzleState } padded={false} closeSidebar={this.toggleVisible} />\n          </Sidebar>\n          { children }\n        </Responsive>\n\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n          <Menu \n            secondary \n            vertical\n            size='mini'\n            id='Navbar'\n          >\n            <Menu.Item\n              name='Home'\n              className='Navbar-item'\n              as={Link}\n              to={'/'}\n            >\n              <div className='Navbar-button' id='Navbar-logo-container'><img src={logo} alt='logo' className='Navbar-icon' /></div>\n            </Menu.Item>\n            {\n              other_buttons.map((button, idx) => {\n                return (\n                    <Menu.Item\n                      name={button.name}\n                      active={activeItem === button.name}\n                      className='Navbar-item'\n                      onClick={this.handleToggle}\n                      as={Link}\n                      to={button.href}\n                      key={idx}\n                    >\n                    <div className='Navbar-button'>{button.name}</div>\n                  </Menu.Item>\n                )\n              })\n            }\n          </Menu>\n          { children }\n        </Responsive>\n      </div>\n    )\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { Responsive } from 'semantic-ui-react'\n\nimport './App.css'\n\nimport Market from '../market/market'\nimport Home from '../home/home'\nimport Navbar from '../navbar/navbar'\nimport Infobar from '../infobar/infobar'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      loading: true,\n      drizzleState: null\n    }\n  }\n\n  componentDidMount() {\n    const { drizzle } = this.props\n\n    // Subscribe to changes in the store and assign to unsubscribe for later release\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      // Every time the store updates we update the state and pass it to all the children\n      const drizzleState = drizzle.store.getState()\n\n      // If the entire setup is initialized then we update local component states\n      if(drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState })\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  render() {\n    var { loading, drizzleState } = this.state\n    var { drizzle } = this.props\n\n    if(loading) {\n      return <div id=\"App-loading-screen\">Connecting to Ethereum...</div>\n    }\n    else {\n      return (\n        <div className=\"App\">\n          <HashRouter>\n            <div>\n              <Navbar drizzle={drizzle} drizzleState={ drizzleState } />\n              <div id=\"App_market_container\">\n                  <Switch>\n                    <Route exact path='/' render={() => <Home drizzle={drizzle} drizzleState={ drizzleState } />} />\n                    <Route exact path='/WETH_DAI' render={() => <Market key={'WETH_DAI'} drizzle={drizzle} drizzleState={ drizzleState } pair={'WETH_DAI'} />} />\n                    <Route exact path='/MKR_WETH' render={() => <Market key={'MKR_WETH'} drizzle={drizzle} drizzleState={ drizzleState } pair={'MKR_WETH'} />} />\n                    <Route exact path='/MKR_DAI' render={() => <Market  key={'MKR_DAI'} drizzle={drizzle} drizzleState={ drizzleState } pair={'MKR_DAI'} />} />\n                  </Switch>\n              </div>\n            </div>\n          </HashRouter>\n          <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n            <Infobar drizzle={drizzle} drizzleState={ drizzleState } padded={true} />\n          </Responsive>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport './index.css';\nimport App from './containers/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { Drizzle, generateStore } from 'drizzle'\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:9545\")\n// web3.currentProvider.enable()\n\nconst config = require(\"./config\")\nconst erc20Abi = require(\"./abi/standard-token/erc20\")\nconst WEthAbi = require(\"./abi/standard-token/ds-eth-token\")\nconst MatchingMarketAbi = require(\"./abi/maker-otc/matching-market\");\nconst SupportMethodsAbi = require(\"./abi/otc-support-methods/otc-support-methods\")\n\nconst WETH = new web3.eth.Contract(WEthAbi.interface, config[\"tokens\"][\"main\"][\"W-ETH\"])\nconst DAI = new web3.eth.Contract(erc20Abi.interface, config[\"tokens\"][\"main\"][\"DAI\"])\nconst MKR = new web3.eth.Contract(erc20Abi.interface, config[\"tokens\"][\"main\"][\"MKR\"])\nconst market = new web3.eth.Contract(MatchingMarketAbi.interface, config[\"market\"][\"main\"][\"address\"])\nconst supportMethods = new web3.eth.Contract(SupportMethodsAbi.interface, config[\"otcSupportMethods\"][\"main\"][\"address\"])\n\nconst options = {\n\tcontracts: [\n\t\t{\n\t\t\tcontractName: 'WETH',\n\t\t\tweb3Contract: WETH\n\t\t},\n\t\t{\n\t\t\tcontractName: 'DAI',\n\t\t\tweb3Contract: DAI\n\t\t},\n\t\t{\n\t\t\tcontractName: 'MKR',\n\t\t\tweb3Contract: MKR\n\t\t},\n\t\t{\n\t\t\tcontractName: 'Market',\n\t\t\tweb3Contract: market\n\t\t},\n\t\t{\n\t\t\tcontractName: 'SupportMethods',\n\t\t\tweb3Contract: supportMethods\n\t\t}\n\t],\n\tevents: {\n\t\tMarket: ['LogTake']\n\t},\n\tpolls: {\n\t\taccounts: 3000,\n\t\tblocks: 3000\n\t},\n\tsyncAlways: false\n}\n\nconst drizzleStore = generateStore(options)\nconst drizzle = new Drizzle(options, drizzleStore)\n\nReactDOM.render(<App drizzle={drizzle} />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}