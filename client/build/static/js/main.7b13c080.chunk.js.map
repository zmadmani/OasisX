{"version":3,"sources":["images/x.svg","containers/market/orderlist/orderlist.js","containers/market/buysell/buysell.js","containers/market/myorders/myorders.js","containers/market/stats/chart/chart.js","containers/market/stats/stats.js","containers/market/markethistory/markethistory.js","containers/market/myhistory/myhistory.js","containers/market/sidebar/sidebar.js","containers/market/market.js","containers/home/home.js","containers/infobar/wrapstation/wrapstation.js","containers/infobar/infobar.js","containers/navbar/navbar.js","containers/App/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","OrderList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","orders","timeout","max_order","buildRow","bind","assertThisInitialized","updateOrders","nextProps","nextState","clearTimeout","getOrders","Math","max","apply","map","o","curr_1_amt","setTimeout","setState","drizzle","currencies","type","market","contracts","Market","length","token_addr_0","address","token_addr_1","pay_token","buy_token","SupportMethods","methods","getOffers","rawOrders","processOrders","n","i","id","pay_amount","web3","utils","fromWei","toString","buy_amount","price","order","round","curr_0_amt","push","x","parts","split","replace","join","item","index","_this2","ratio","color_0","color_1","style","backgroundImage","concat","backgroundSize","backgroundRepeat","react_default","a","createElement","Table","Row","key","onClick","setSidebar","className","Cell","numberWithCommas","textAlign","striped","basic","celled","unstackable","Header","HeaderCell","Body","Component","BuySell","loading","init","error","success","amount_0","ui_amount_0","amount_1","ui_amount_1","currency_0_balance","currency_1_balance","bignumbers","handleSubmit","updateBalances","flashSuccess","flashError","generateBigNumbers","drizzleState","account","accounts","balanceOf","toBN","_this$props2","curr_gem_0","curr_gem_1","data","pay_amt","pay_gem","buy_amt","buy_gem","console","log","offer","send","from","gasPrice","toWei","on","_this3","value","test","amount_1_bn","amount_0_bn","price_bn","one_bn","mul","div","_this4","_this$state2","can_buy","can_sell","curr_0_balance","curr_1_balance","gte","gt","side_text","Loader","active","inline","size","Form","Field","Input","label","content","labelPosition","placeholder","onChange","e","handlePriceChange","target","Group","widths","disabled","handleAmountChange","Button","inverted","handleAmountPercentageChange","color","MyOrders","buy_orders","sell_orders","sort","b","parseInt","cancel","cacheSend","orders_table","background_item","cancelOrder","selectable","columns","styler","width","CrossHairs","_this$props","y","pointerEvents","stroke","x1","y1","x2","y2","height","React","Chart","handleTrackerChange","tracker","handleTimeRangeChange","timerange","handleMouseMove","chart_data","volume_data","selection","points","buildChartPoints","TimeSeries","name","volume_points","last_item","Index","getIndexString","Date","reverse","_this$state","chart","start_time","range","begin","end_time","end","setHours","getHours","min_val","crop","min","max_val","padding","max_volume","entry","timeRange","minTime","maxTime","timeAxisAngledLabels","timeAxisHeight","paddingLeft","paddingRight","enablePanZoom","minDuration","onTrackerChanged","onBackgroundClick","onTimeRangeChanged","onMouseMove","showGrid","background","borderStyle","borderWidth","borderColor","paddingTop","timeAxisStyle","ticks","opacity","stroke-dasharray","values","fill","font-size","hideAxisLine","format","axis","series","interpolation","onSelectionChange","chart_CrossHairs","Stats","stats","num_users","num_buys","num_sells","buy_volume","sell_volume","last_price","last_type","subsciption","buildStat","getPastOrders","updateStats","subscribeToEvents","subscription","unsubscribe","are_stats_updated","old_stats","new_stats","users","eth","getBlockNumber","latestBlock","curr_1_addr","curr_2_addr","hashKey1","soliditySha3","hashKey2","Contract","abi","events","LogTake","filter","pair","fromBlock","event","eventsToOrders","buy_addr","pay_addr","returnValues","getType","getPrice","timestamp","toLocaleTimeString","toLocaleDateString","raw_timestamp","curr_1","curr_2","taker","maker","getPastEvents","toBlock","first","second","keys","statistics","stats_chart_chart","Grid","Column","mobile","tablet","computer","List","Item","Content","Description","MarketHistory","offers_table","MyHistory","subscriptions","taker_subscription","maker_subscription","true_type","taker_events","maker_events","SideBar","executeTrade","will_receive","sidebar_info","inputs","will_receive_wholenums","buy","button_loading","visible","amount","ui_amount","info","owner","button_success","button_error","updateInfo","stopLoading","getOffer","getOwner","toggleSidebar","internal_value","err","ui_value","amount_bn","_this$props3","balance","lt","_this$props4","action","subtitle","updated_info","getUpdatedInfo","Sidebar","as","Segment","animation","direction","Icon","giving","currency","receive_currency","offered","max_take","getMaxTake","calcWillReceive","substring","button_text","handleUserChange","lte","numBuys","numSells","buy_token_addr","sell_token_addr","numBuysKey","getOfferCount","cacheCall","numSellsKey","assign","title","panes","menuItem","render","Tab","Pane","myorders_myorders","myhistory_myhistory","markethistory_markethistory","sidebar_sidebar","stats_stats","menu","fluid","tabular","attached","buysell_buysell","divided","orderlist_orderlist","Home","Transition","transitionOnMount","duration","WrapStation","onWrap","deposit","WETH","amount_wrap","ui_amount_wrap","onUnwrap","withdraw","amount_unwrap","ui_amount_unwrap","weth_balance","eth_balance","onSubmit","handleUserUpdate","handlePercentUpdate","Infobar","context","approved","DAI","MKR","ETH","market_address","dai_balance","mkr_balance","allowance","weth_approval","dai_approval","mkr_approval","accountBalances","approve","approveCurrencyForAmount","current_approval","approveCurrency","unapproveCurrency","raw_balance","raw_allowance","padded","closeSidebar","vals","obj","getUIBalance","getUIAllowance","ui_account","x_icon","Checkbox","toggle","checked","toggleApproval","wrapstation_wrapstation","Navbar","handleItemClick","_ref","activeItem","toggleVisible","children","other_buttons","href","Responsive","onlyMobile","Menu","borderless","fixed","src","logo","alt","Dropdown","text","button","idx","Link","to","position","infobar_infobar","minWidth","onlyTablet","secondary","vertical","handleToggle","App","store","subscribe","getState","drizzleStatus","initialized","HashRouter","navbar_navbar","Switch","Route","exact","path","home_home","containers_market_market","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","Web3","givenProvider","config","require","erc20Abi","WEthAbi","MatchingMarketAbi","SupportMethodsAbi","options","contractName","web3Contract","interface","polls","blocks","syncAlways","drizzleStore","generateStore","Drizzle","ReactDOM","containers_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7b13c080.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/x.23ec4264.svg\";","import React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nimport './orderlist.css'\n\nclass OrderList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      orders: null,\n      timeout: null,\n      max_order: null\n    }\n\n    this.buildRow = this.buildRow.bind(this)\n    this.updateOrders = this.updateOrders.bind(this)\n  }\n\n  async componentDidMount() {\n    this.updateOrders()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextState.orders !== this.state.orders) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  componentWillUnmount() {\n    if(this.state.timeout !== null) {\n      clearTimeout(this.state.timeout)\n    }\n  }\n\n  async updateOrders() {\n    var orders = await this.getOrders()\n    var max_order = Math.max.apply(Math, orders.map(function(o) { return o.curr_1_amt; }))\n    var timeout = setTimeout(this.updateOrders, 5000)\n    this.setState({ orders, timeout, max_order })\n  }\n\n  async getOrders() {\n    var { drizzle, currencies, type } = this.props\n    var market = drizzle.contracts.Market\n\n    if(currencies.length === 2) {\n      var token_addr_0 = drizzle.contracts[currencies[0]].address\n      var token_addr_1 = drizzle.contracts[currencies[1]].address\n\n      var pay_token = null\n      var buy_token = null\n\n      if(type === \"BUY\") {\n        pay_token = token_addr_1\n        buy_token = token_addr_0\n      } else {\n        pay_token = token_addr_0\n        buy_token = token_addr_1\n      }\n\n      const rawOrders = await drizzle.contracts.SupportMethods.methods.getOffers(market.address, pay_token, buy_token).call()\n      var orders = []\n      if(rawOrders) {\n        orders = this.processOrders(rawOrders)\n      }\n      return orders\n    }\n  }\n\n  processOrders(rawOrders) {\n    var { type } = this.props\n\n    var n = rawOrders[\"ids\"].length\n    var orders = []\n    for(var i = 0; i < n; i++) {\n      if(rawOrders[\"ids\"][i] !== \"0\") {\n        var id = rawOrders[\"ids\"][i]\n        var pay_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"payAmts\"][i].toString(), 'ether')\n        var buy_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"buyAmts\"][i].toString(), 'ether') \n        var price = 0\n        var order = {}\n        if(type === \"BUY\") {\n          price = Math.round(pay_amount / buy_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": buy_amount,\n            \"curr_1_amt\": pay_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        } else {\n          price = Math.round(buy_amount / pay_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": pay_amount,\n            \"curr_1_amt\": buy_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        }\n        orders.push(order)\n      }\n    }\n\n    return orders\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  buildRow(item, index) {\n    var { max_order } = this.state\n    var { type } = this.props\n\n    var ratio = item[\"curr_1_amt\"]/max_order * 100\n    var direction = \"right\"\n    var color_0 = \"rgba(255, 0, 0, 0.2)\"\n    var color_1 = \"rgba(0,0,0,0)\"\n    if(type === \"BUY\") {\n      color_0 = \"rgba(0, 255, 0, 0.1)\"\n      color_1 = \"rgba(0, 0, 0, 0)\"\n    }\n    var style = { backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n      backgroundSize: `calc(${ratio}%) 100%`,\n      backgroundRepeat: `no-repeat`\n    }\n\n    return (\n      <Table.Row key={item[\"id\"]} onClick={() => this.props.setSidebar(item) } className=\"OrderList-table-row\" style={style}>\n        <Table.Cell>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n        </Table.Cell>\n\n        <Table.Cell>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"curr_0_amt\"])}</div>\n        </Table.Cell>\n\n        <Table.Cell  textAlign='left'>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"curr_1_amt\"])}</div>\n        </Table.Cell>\n      </Table.Row>\n    )\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    if(!orders) {\n      return (\n        <div className=\"OrderList\">\n          <div className=\"OrderList-loading\">Error...</div>\n        </div>\n      )\n    }\n\n    if(orders.length === 0) {\n      return (\n        <div className=\"OrderList\">\n          <div className=\"OrderList-loading\">Loading...</div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"OrderList\">\n        <Table striped basic celled unstackable id=\"OrderList-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body id=\"OrderList-tableBody\">\n            {orders.map(this.buildRow)}\n          </Table.Body>\n        </Table>\n\n      </div>\n    );\n  }\n}\n\nexport default OrderList\n","import React, { Component } from 'react'\nimport { Input, Form, Button, Loader } from 'semantic-ui-react'\n\nimport './buysell.css'\n\nclass BuySell extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      init: false,\n      error: false,\n      success: false,\n      price: '',\n      amount_0: '',\n      ui_amount_0: '',\n      amount_1: '',\n      ui_amount_1: '',\n      currency_0_balance: \"0\",\n      currency_1_balance: \"0\",\n      bignumbers: []\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.updateBalances = this.updateBalances.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n    this.flashError = this.flashError.bind(this)\n  }\n\n  componentDidMount() {\n    this.generateBigNumbers()\n    this.updateBalances()\n  }\n\n  async updateBalances() {\n    var { drizzle, drizzleState, currencies } = this.props\n    var { price, init } = this.state\n\n    if(!init || price !== '') {\n      const account = drizzleState.accounts[0]\n      const currency_0_balance = await drizzle.contracts[currencies[0]].methods.balanceOf(account).call()\n      const currency_1_balance = await drizzle.contracts[currencies[1]].methods.balanceOf(account).call()\n      this.setState({ currency_0_balance, currency_1_balance, init: true })  \n    }\n    setTimeout(this.updateBalances, 2500)\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  // Main function that interfaces and writes to the blockchain.\n  // This is the most important function here.\n  handleSubmit(type) {\n    // Set loading to true to update UI\n    this.setState({loading: true, error: false, success: false})\n\n    var { currencies, drizzle, drizzleState } = this.props\n    const web3 = drizzle.web3\n\n    // Get the important info for the transaction\n    const account = drizzleState.accounts[0]\n    var amount_0 = this.state.amount_0\n    var amount_1 = this.state.amount_1\n    var curr_gem_0 = drizzle.contracts[currencies[0]].address\n    var curr_gem_1 = drizzle.contracts[currencies[1]].address\n    var data = {}\n\n    // Set data to the correct value depending on if the order is a BUY or SELL\n    // Basically you just flip the currency 0 and currency 1\n    if(type === \"BUY\") {\n      data = {\n        pay_amt: amount_1,\n        pay_gem: curr_gem_1,\n        buy_amt: amount_0,\n        buy_gem: curr_gem_0\n      }\n    } else if(type === \"SELL\") {\n      data = {\n        pay_amt: amount_0,\n        pay_gem: curr_gem_0,\n        buy_amt: amount_1,\n        buy_gem: curr_gem_1\n      }\n    } else {\n      return\n    }\n\n    console.log(data)\n\n    this.props.drizzle.contracts.Market.methods.offer(data.pay_amt, data.pay_gem, data.buy_amt, data.buy_gem, 1).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', this.flashSuccess)\n      .on('error', this.flashError)\n\n    this.setState({ loading: true })\n  }\n\n  flashSuccess() {\n    this.setState({ success : true, loading: false })\n    setTimeout(() => this.setState({ success: false, price: '', amount_0: '0', ui_amount_0: '', amount_1: '0', ui_amount_1: '' }), 1500)\n  }\n\n  flashError() {\n    this.setState({ error: true, loading: false })\n    setTimeout(() => this.setState({ error: false }), 1500)\n  }\n\n  handlePriceChange(value) {\n    const web3 = this.props.drizzle.web3\n    if(/\\S/.test(value) && this.state.ui_amount_0 !== \"\") {\n      var price = value\n      var ui_amount_1 = this.state.ui_amount_0 * price\n      var amount_1_bn = web3.utils.toWei(ui_amount_1.toString(), 'ether')\n      this.setState({ price: price, amount_1: amount_1_bn.toString(), ui_amount_1: ui_amount_1.toString() })\n    } else {\n      this.setState({ price: value, amount_1: '0', ui_amount_1: '' })    \n    }\n  }\n\n  handleAmountChange(index, value) {\n    const web3 = this.props.drizzle.web3\n    if(/\\S/.test(value) && this.state.price !== \"\") {\n      var price = this.state.price\n      var ui_amount_0 = null\n      var ui_amount_1 = null\n      var amount_0_bn = null\n      var amount_1_bn = null\n\n      if(index === 0) {\n        ui_amount_0 = value\n        amount_0_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_0.toString(), 'ether'))\n        ui_amount_1 = ui_amount_0 * price\n        amount_1_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_1.toString(), 'ether'))\n      } else if(index === 1) {\n        ui_amount_1 = value\n        amount_1_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_1.toString(), 'ether'))\n        ui_amount_0 = ui_amount_1 / price\n        amount_0_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_0.toString(), 'ether'))\n      } else {\n        return\n      }\n\n      this.setState({ \n        amount_0: amount_0_bn.toString(), \n        ui_amount_0: ui_amount_0, \n        amount_1: amount_1_bn.toString(),\n        ui_amount_1: ui_amount_1,\n      })\n    } else {\n      this.setState({\n        amount_0: '0',\n        ui_amount_0: '',\n        amount_1: '0',\n        ui_amount_1: ''\n      })\n    }\n  }\n\n  handleAmountPercentageChange(index, value) {\n    const web3 = this.props.drizzle.web3\n    var price = this.state.price\n\n    var ui_amount_0 = null\n    var ui_amount_1 = null\n    var amount_0_bn = null\n    var amount_1_bn = null\n    var price_bn = web3.utils.toBN(web3.utils.toWei(price.toString(), 'ether'))\n    var one_bn = web3.utils.toBN(web3.utils.toWei('1'), 'ether')\n\n    if(index === 0) {\n      amount_0_bn = value\n      amount_1_bn = amount_0_bn.mul(price_bn).div(one_bn)\n    } else if(index === 1) {\n      amount_1_bn = value\n      amount_0_bn = amount_1_bn.mul(one_bn).div(price_bn)\n    } else {\n      return\n    }\n\n    ui_amount_0 = web3.utils.fromWei(amount_0_bn, 'ether')\n    ui_amount_1 = web3.utils.fromWei(amount_1_bn, 'ether')\n\n    this.setState({\n      amount_0: amount_0_bn.toString(),\n      ui_amount_0: ui_amount_0,\n      amount_1: amount_1_bn.toString(),\n      ui_amount_1: ui_amount_1\n    })\n  }\n\n  render() {\n    var { price, amount_0, amount_1, ui_amount_0, ui_amount_1, currency_0_balance, currency_1_balance, bignumbers, loading, success, error } = this.state\n    var { currencies } = this.props\n    const web3 = this.props.drizzle.web3\n    \n    var can_buy = false\n    var can_sell = false\n    \n    var curr_0_balance = web3.utils.toBN(currency_0_balance)\n    var curr_1_balance = web3.utils.toBN(currency_1_balance)\n    \n    var amount_0_bn = web3.utils.toBN(amount_0)\n    var amount_1_bn = web3.utils.toBN(amount_1)\n\n    if(curr_0_balance.gte(amount_0_bn) && amount_0_bn.gt(web3.utils.toBN(\"1000\"))) {\n      can_sell = true\n    }\n    \n    if(curr_1_balance.gte(amount_1_bn) && amount_1_bn.gt(web3.utils.toBN(\"1000\"))) {\n      can_buy = true\n    }\n\n    var side_text = \"\"\n    if(loading) {\n      side_text = (<span className=\"BuySell-color\"><Loader active inline size=\"small\"/> LOADING...</span>)\n    }\n    if(error) {\n      side_text = (<span className=\"red BuySell-color\">FAILED</span>)\n    }\n    if(success) {\n      side_text = (<span className=\"green BuySell-color\">SUCCESS</span>)\n    }\n\n    return (\n      <div className=\"BuySell\">\n        <Form size='tiny'>\n          <div className=\"BuySell-headers\">Price</div>\n          <Form.Field>\n            <Input\n              label={{ basic: true, content: currencies[1] + \" / \" + currencies[0]  }}\n              labelPosition='right'\n              placeholder='Enter Price...'\n              value={price}\n              onChange={(e) => { this.handlePriceChange(e.target.value) }}\n            />\n          </Form.Field>\n          <div className=\"BuySell-headers\">Amounts</div>\n          <Form.Group widths='equal'>\n            <Form.Field>\n              <Input\n                label={{ basic: true, content: currencies[0] }}\n                labelPosition='right'\n                placeholder='Enter Amount...'\n                disabled={price === ''}\n                value={ui_amount_0}\n                onChange={(e) => { this.handleAmountChange(0, e.target.value) }}\n                className=\"BuySell-amount-input\"\n              />\n              <Button.Group className=\"BuySell-mini-buttons\" size='mini' basic inverted>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[4]))} >25%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[2]))} >50%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance) } >100%</Button>\n              </Button.Group>\n            </Form.Field>\n            <Form.Field>\n              <Input\n                label={{ basic: true, content: currencies[1] }}\n                labelPosition='right'\n                placeholder='Enter Amount...'\n                disabled={price === ''}\n                value={ui_amount_1}\n                onChange={(e) => { this.handleAmountChange(1, e.target.value) }}\n                className=\"BuySell-amount-input\"\n              />\n              <Button.Group className=\"BuySell-mini-buttons\" size='mini' basic inverted>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[4]))} >25%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[2]))} >50%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance) } >100%</Button>\n              </Button.Group>\n            </Form.Field>\n          </Form.Group>\n          <Button className=\"BuySell-button\" color='green' disabled={!can_buy || loading} onClick={() => this.handleSubmit(\"BUY\")} >BUY {currencies[0]}</Button>\n          <Button className=\"BuySell-button\" color='red' disabled={!can_sell || loading} onClick={() => this.handleSubmit(\"SELL\")} >SELL {currencies[0]}</Button>\n          {side_text}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default BuySell\n","import React, { Component } from 'react'\nimport { Table, Button } from 'semantic-ui-react'\n\nimport './myorders.css'\n\nclass MyOrders extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      orders: []\n    }\n\n    this.updateOrders = this.updateOrders.bind(this)\n  }\n\n  async componentDidMount() {\n    this.updateOrders()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextState.orders !== this.state.orders) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  async updateOrders() {\n    var buy_orders = await this.getOrders(\"BUY\")\n    var sell_orders = await this.getOrders(\"SELL\")\n    var orders = buy_orders.concat(sell_orders)\n    orders.sort(function(a, b) {\n      return parseInt(a[3]) > parseInt(b[3]) ? 1 : -1\n    })\n    this.setState({ orders })\n    setTimeout(this.updateOrders, 5000)\n  }\n\n  async getOrders(type) {\n    var { drizzle, currencies } = this.props\n    var market = drizzle.contracts.Market\n\n    if(currencies.length === 2) {\n      var token_addr_0 = drizzle.contracts[currencies[0]].address\n      var token_addr_1 = drizzle.contracts[currencies[1]].address\n\n      var pay_token = null\n      var buy_token = null\n\n      if(type === \"BUY\") {\n        pay_token = token_addr_1\n        buy_token = token_addr_0\n      } else {\n        pay_token = token_addr_0\n        buy_token = token_addr_1\n      }\n\n      const rawOrders = await drizzle.contracts.SupportMethods.methods.getOffers(market.address, pay_token, buy_token).call()\n      var orders = []\n      if(rawOrders) {\n        orders = this.processOrders(rawOrders, type)\n      }\n      return orders\n    }\n  }\n\n  processOrders(rawOrders, type) {\n    var { drizzleState } = this.props\n\n    let account = drizzleState.accounts[0]\n    var n = rawOrders[\"ids\"].length\n    var orders = []\n    for(var i = 0; i < n; i++) {\n      if(rawOrders[\"ids\"][i] !== \"0\" && rawOrders[\"owners\"][i] === account) {\n        var id = rawOrders[\"ids\"][i]\n        var pay_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"payAmts\"][i].toString(), 'ether')\n        var buy_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"buyAmts\"][i].toString(), 'ether') \n        var price = 0\n        var order = {}\n        if(type === \"BUY\") {\n          price = Math.round(pay_amount / buy_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": buy_amount,\n            \"curr_1_amt\": pay_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        } else {\n          price = Math.round(buy_amount / pay_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": pay_amount,\n            \"curr_1_amt\": buy_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        }\n        orders.push(order)\n      }\n    }\n\n    return orders\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  cancelOrder(id) {\n    var { Market } = this.props.drizzle.contracts\n    let account = this.props.drizzleState.accounts[0]\n\n    console.log(\"CANCEL ORDER \" + id)\n    const cancel = Market.methods.cancel\n    cancel.cacheSend(id, {from: account, gasPrice: this.props.drizzle.web3.utils.toWei('5', 'gwei') })\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    var orders_table = null\n    var background_item = null\n\n    if(orders.length === 0) {\n      background_item = (<div id=\"MyOrders-empty\">NO ORDERS</div>)\n    } else {\n      orders_table = (<Table.Body id=\"MyOrders-tableBody\">\n            {orders.map((item, index) => {\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MyOrders-color\">{item[\"type\"]}</span>) : (<span className=\"red\">{item[\"type\"]}</span>)\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell  textAlign='left'>\n                    <div className='MyOrders-table-entry'><Button className=\"MyOrders-button\" color='red' size='mini' inverted onClick={() => {this.cancelOrder(item[\"id\"])}}>CANCEL</Button></div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"curr_0_amt\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"curr_1_amt\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MyOrders\">\n        <Table selectable striped basic celled unstackable columns={5} textAlign='left' id=\"MyOrders-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Action</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { orders_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MyOrders\n","import React, { Component } from 'react'\nimport { Charts, ChartContainer, ChartRow, YAxis, LineChart, BarChart, styler, Resizable } from \"react-timeseries-charts\";\nimport { TimeSeries, Index } from \"pondjs\";\n\nimport './chart.css'\n\nconst style = styler([\n    { key: \"price\", color: \"white\", width: 1 },\n    { key: \"volume\", color: \"white\" }\n]);\n\nclass CrossHairs extends React.Component {\n    render() {\n        const { x, y } = this.props;\n        const style = { pointerEvents: \"none\", stroke: \"#ccc\" };\n        if (!(x === null) && !(y === null)) {\n            return (\n                <g>\n                    <line style={style} x1={0} y1={y} x2={this.props.width} y2={y} />\n                    <line style={style} x1={x} y1={0} x2={x} y2={this.props.height} />\n                </g>\n            );\n        } else {\n            return <g />;\n        }\n    }\n}\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      tracker: null,\n      chart_data: null,\n      volume_data: null,\n      timerange: null,\n      x: null,\n      y: null,\n      selection: null\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.orders.length > 0) {\n      var points = this.buildChartPoints(nextProps.orders)\n      var chart_data = new TimeSeries({\n        name: \"Chart\",\n        columns: [\"time\", \"price\"],\n        points: points\n      })\n      var timerange = chart_data.timerange()\n\n      var volume_points = []\n      for(var i = 0; i < nextProps.orders.length; i++) {\n        var item = nextProps.orders[i]\n        if(i > 0) {\n          var last_item = nextProps.orders[i-1]\n          if(item[\"raw_timestamp\"] === last_item[\"raw_timestamp\"]) {\n            volume_points[volume_points.length-1][1] += item[\"curr_2\"]\n          } else {\n            volume_points.push([Index.getIndexString(\"1s\", new Date(item[\"raw_timestamp\"])), item[\"curr_2\"]])\n          }\n        } else {\n          volume_points.push([Index.getIndexString(\"1s\", new Date(item[\"raw_timestamp\"])), item[\"curr_2\"]])\n        }\n      }\n\n      volume_points.reverse()\n      var volume_data = new TimeSeries({\n        name: \"Volume\",\n        columns: [\"index\", \"volume\"],\n        points: volume_points\n      })\n      this.setState({loading: false, chart_data, volume_data, timerange })\n    }\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  componentWillMount() {\n  }\n\n  handleTrackerChange = (tracker) => {\n    if(!tracker) {\n      this.setState({ tracker, x: null, y: null })\n    } else {\n      this.setState({ tracker })\n    }\n  }\n\n  handleTimeRangeChange = (timerange) => {\n    this.setState({ timerange })\n  }\n\n  handleMouseMove = (x, y) => {\n    this.setState({ x, y })\n  }\n\n  buildChartPoints(orders) {\n    var chart_data = orders.map(function(order) {\n      return [order[\"raw_timestamp\"], order[\"price\"], order[\"curr_2\"]]\n    })\n    chart_data.reverse()\n    return chart_data\n  }\n\n  render() {\n    var { loading, chart_data, volume_data, timerange } = this.state\n    var { currencies } = this.props\n\n    var chart = <div id=\"Chart-loading\">Loading...</div>\n    if(chart_data && !loading) {\n      var start_time = chart_data.range().begin()\n      var end_time = chart_data.range().end()\n      end_time.setHours(end_time.getHours() + 6)\n      var min_val = chart_data.crop(timerange).min(\"price\")\n      var max_val = chart_data.crop(timerange).max(\"price\")\n      var padding = (max_val - min_val)*0.1\n      var max_volume = volume_data.crop(timerange).max(\"volume\")\n      chart = (\n        <Resizable>\n          <ChartContainer \n            timeRange={timerange} \n            minTime={start_time} \n            maxTime={end_time} \n            timeAxisAngledLabels={true}\n            timeAxisHeight={80}\n            paddingLeft={20}\n            paddingRight={20}\n            enablePanZoom={true}\n            minDuration={1000 * 60 * 60}\n            onTrackerChanged={this.handleTrackerChange}\n            onBackgroundClick={() => this.setState({ selection: null })}\n            onTimeRangeChanged={this.handleTimeRangeChange}\n            onMouseMove={(x, y) => this.handleMouseMove(x, y) }\n            showGrid\n            style={{\n                background: \"#0b1215\",\n                borderStyle: \"solid\",\n                borderWidth: 1,\n                borderColor: \"#0b1215\",\n                paddingTop: \"1em\"\n            }}\n            timeAxisStyle={{\n                              ticks: {\n                                  stroke: \"#AAA\",\n                                  opacity: 0.25,\n                                  \"stroke-dasharray\": \"1,1\"\n                                  // Note: this isn't in camel case because this is\n                                  // passed into d3's style\n                              },\n                              values: {\n                                  fill: \"#AAA\",\n                                  \"font-size\": 12\n                              }\n                          }}\n          >\n            <ChartRow height=\"325\">\n              <YAxis \n                id=\"price\" \n                label={\"Price (\" + currencies[1] + \" / \" + currencies[0] + \")\"} \n                min={min_val - padding} \n                max={max_val + padding}\n                hideAxisLine \n                showGrid \n                width=\"50\" \n                type=\"linear\" \n                format=\",.2f\"\n                style={{\n                    ticks: {\n                        stroke: \"#AAA\",\n                        opacity: 0.25,\n                        \"stroke-dasharray\": \"1,1\"\n                        // Note: this isn't in camel case because this is\n                        // passed into d3's style\n                    }}}\n              />\n              <Charts>\n                <LineChart \n                  axis=\"price\"\n                  series={chart_data} \n                  columns={[\"price\"]} \n                  style={style}\n                  interpolation=\"curveStepAfter\"\n                  selection={this.state.selection}\n                  onSelectionChange={selection =>\n                                      this.setState({ selection })\n                                    }\n                />\n                <CrossHairs x={this.state.x} y={this.state.y} />\n              </Charts>\n            </ChartRow>\n            <ChartRow height=\"75\">\n              <YAxis \n                id=\"amount\" \n                label={\"Volume (\" + currencies[1] + \")\"} \n                min={0}\n                max={max_volume} \n                hideAxisLine\n                showGrid\n                width=\"50\" \n                type=\"linear\" \n                format=\",.2r\"\n                style={{\n                    ticks: {\n                        stroke: \"#AAA\",\n                        opacity: 0.25,\n                        \"stroke-dasharray\": \"1,1\"\n                        // Note: this isn't in camel case because this is\n                        // passed into d3's style\n                    }}}\n              />\n              <Charts>\n                <BarChart\n                    axis=\"amount\"\n                    style={style}\n                    columns={[\"volume\"]}\n                    series={volume_data}\n                />\n              </Charts>\n            </ChartRow>\n          </ChartContainer>\n        </Resizable>\n      )\n    }\n\n    return (\n      <div className=\"Chart\">\n        {chart}\n      </div>\n    );\n  }\n}\n\nexport default Chart\n\n                // <BandChart\n                //   axis=\"price\"\n                //   series={chart_data}\n                //   column=\"price\"\n                //   aggregation={ {\n                //       size: \"30m\",\n                //       reducers: {\n                //           outer: [percentile(5), percentile(95)],\n                //           inner: [percentile(25), percentile(75)]\n                //       }\n                //   } }\n                //   style={style}\n                //   interpolation=\"curveBasis\"\n                // />","import React, { Component } from 'react'\nimport { Grid, List } from 'semantic-ui-react'\nimport Chart from './chart/chart'\n\nimport './stats.css'\n\nclass Stats extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      orders: [],\n      stats: {\n        num_users: \"...\",\n        num_buys: \"...\",\n        num_sells: \"...\",\n        buy_volume: \"...\",\n        sell_volume: \"...\",\n        last_price: \"...\",\n        last_type: \"BUY\"\n      },\n      subsciption: null\n    }\n\n    this.buildStat = this.buildStat.bind(this)\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    this.setState({ orders }, this.updateStats)\n    var subscription = await this.subscribeToEvents()\n    this.setState({ subscription })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscription) {\n      this.state.subscription.unsubscribe()\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.are_stats_updated(this.state.stats, nextState.stats)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  are_stats_updated(old_stats, new_stats) {\n    if(old_stats[\"num_users\"] !== new_stats[\"num_users\"] ||\n      old_stats[\"num_buys\"] !== new_stats[\"num_buys\"] ||\n      old_stats[\"num_sells\"] !== new_stats[\"num_sells\"] ||\n      old_stats[\"buy_volume\"] !== new_stats[\"buy_volume\"] ||\n      old_stats[\"sell_volume\"] !== new_stats[\"sell_volume\"] ||\n      old_stats[\"last_price\"] !== new_stats[\"last_price\"] ||\n      old_stats[\"last_type\"] !== new_stats[\"last_type\"] ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  updateStats() {\n    var new_stats = {\n      num_users: 0,\n      num_buys: 0,\n      num_sells: 0,\n      buy_volume: 0,\n      sell_volume: 0,\n      last_price: 0,\n      last_type: \"BUY\"\n    }\n\n    var users = {}\n    var orders = this.state.orders\n    for(var i = 0; i < orders.length; i++) {\n      var order = orders[i]\n\n      // Check if maker is in user list\n      if(!(order[\"maker\"] in users)) {\n        users[order[\"maker\"]] = 1\n        new_stats[\"num_users\"] += 1\n      }\n\n      // Check if taker is in user list\n      if(!(order[\"taker\"] in users)) {\n        users[order[\"taker\"]] = 1\n        new_stats[\"num_users\"] += 1\n      }\n\n      // Check if order is buy or sell and add the necessary info\n      if(order[\"type\"] === \"BUY\") {\n        new_stats[\"num_buys\"] += 1\n        new_stats[\"buy_volume\"] += order[\"curr_2\"]\n      } else if(order[\"type\"] === \"SELL\") {\n        new_stats[\"num_sells\"] += 1\n        new_stats[\"sell_volume\"] += order[\"curr_2\"]\n      }\n    }\n\n    new_stats[\"last_price\"] = Math.round(orders[0][\"price\"] * 100) / 100\n    new_stats[\"last_type\"] = orders[0][\"type\"]\n    new_stats[\"buy_volume\"] = Math.round(new_stats[\"buy_volume\"] * 100) / 100\n    new_stats[\"sell_volume\"] = Math.round(new_stats[\"sell_volume\"] * 100) / 100\n\n    this.setState({ stats: new_stats, loading: false })\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    \n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) }, this.updateStats)\n    }.bind(this))\n\n    return subscription\n  }\n\n  componentWillMount() {\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      return \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      return \"BUY\"\n    } else {\n      return null\n    }\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var price = 0\n    if(type === \"BUY\") {\n      price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = this.props.drizzle.web3.utils.fromWei(order[\"give_amt\"].toString(), 'ether')\n      var buy_amt = this.props.drizzle.web3.utils.fromWei(order[\"take_amt\"].toString(), 'ether')\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      var timestamp = new Date(order[\"timestamp\"] * 1000)\n      timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n      order = {\n        \"raw_timestamp\": order[\"timestamp\"] * 1000,\n        \"timestamp\": timestamp,\n        \"type\": type,\n        \"price\": offer[0],\n        \"curr_1\": offer[1],\n        \"curr_2\": offer[2],\n        \"taker\": order[\"taker\"],\n        \"maker\": order[\"maker\"]\n      }\n      orders.push(order)\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock - 5760,\n      toBlock: 'latest'\n    })\n\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  buildStat(key) {\n    if(this.state.stats[key] === \"...\") {\n      return <span className=\"loading_value\">{this.state.stats[key]}</span>\n    }\n    var color = null\n    var value = this.numberWithCommas(this.state.stats[key])\n    if(key === \"buy_volume\" || key === \"sell_volume\") {\n      color = key === \"buy_volume\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()} <span className=\"sub_value\">{this.props.currencies[1]}</span></span>\n    }\n\n    if(key === \"num_buys\" || key === \"num_sells\") {\n      color = key === \"num_buys\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()}</span>\n    }\n\n    if(key === \"last_price\") {\n      color = this.state.stats[\"last_type\"] === \"BUY\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()} <span className=\"sub_value\">{this.props.currencies[1]} / {this.props.currencies[0]}</span></span>\n    }\n\n    return value\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    var keys = [\"num_users\", \"num_buys\", \"num_sells\", \"buy_volume\", \"sell_volume\", \"last_price\"]\n    var statistics = {}\n    for(var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      statistics[key] = this.buildStat(key)\n    }\n\n    var chart = <div id=\"Stats-chart\"><Chart orders={orders} currencies={currencies} /></div>\n\n    return (\n      <div className=\"Stats\">\n        {chart}\n        <div id=\"Stats-statistics\">\n          <Grid id=\"Stats-grid\">\n            <Grid.Row>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Buys</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_buys\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Buy Vol.</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"buy_volume\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Sells</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_sells\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Sell Vol.</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"sell_volume\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={8} computer={8} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Last Price</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"last_price\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={8} computer={8} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Users</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_users\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stats","import React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nimport './markethistory.css'\n\nclass MarketHistory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      orders: [],\n      max_order: null,\n      subsciption: null\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    var max_order = Math.max.apply(Math, orders.map(function(o) { return o.curr_2; }))\n    this.setState({ orders, max_order, loading: false })\n    var subscription = await this.subscribeToEvents()\n    this.setState({ subscription })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscription) {\n      this.state.subscription.unsubscribe()\n    }\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    \n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    return subscription\n  }\n\n  componentWillMount() {\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      return \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      return \"BUY\"\n    } else {\n      return null\n    }\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var price = 0\n    if(type === \"BUY\") {\n      price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = this.props.drizzle.web3.utils.fromWei(order[\"give_amt\"].toString(), 'ether')\n      var buy_amt = this.props.drizzle.web3.utils.fromWei(order[\"take_amt\"].toString(), 'ether')\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      var timestamp = new Date(order[\"timestamp\"] * 1000)\n      timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n      order = {\n        \"timestamp\": timestamp,\n        \"type\": type,\n        \"price\": offer[0],\n        \"curr_1\": offer[1],\n        \"curr_2\": offer[2],\n        \"taker\": order[\"taker\"],\n        \"maker\": order[\"maker\"]\n      }\n      orders.push(order)\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock - 2000,\n      toBlock: 'latest'\n    })\n\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  render() {\n    var { loading, orders, max_order } = this.state\n    var { currencies } = this.props\n\n    var offers_table = null\n    var background_item = null\n\n    if(loading) {\n      background_item = (<div id=\"MarketHistory-empty\">Loading...</div>)\n    } else if(orders.length === 0) {\n      background_item = (<div id=\"MarketHistory-empty\">NO ORDERS</div>)\n    } else {\n      offers_table = (<Table.Body id=\"MarketHistory-tableBody\">\n            {orders.map((item, index) => {\n              var ratio = item[\"curr_2\"]/max_order * 100\n              var direction = \"right\"\n              var color_0 = \"rgba(255, 0, 0, 0.2)\"\n              var color_1 = \"rgba(0,0,0,0)\"\n              if(item[\"type\"] === \"BUY\") {\n                color_0 = \"rgba(0, 255, 0, 0.1)\"\n                color_1 = \"rgba(0, 0, 0, 0)\"\n              }\n              var style = { backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n                backgroundSize: `calc(${ratio}%) 100%`,\n                backgroundRepeat: `no-repeat`\n              }\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">BUY</span>) : (<span className=\"red MarketHistory-type\">SELL</span>)\n              return (\n                <Table.Row key={index} style={style}>\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{item[\"timestamp\"]}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_1\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_2\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MarketHistory\">\n        <Table striped basic celled unstackable id=\"MarketHistory-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Time</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { offers_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MarketHistory\n","import React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nimport './myhistory.css'\n\nclass MyHistory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      orders: [],\n      max_order: null,\n      subscriptions: null\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    var max_order = Math.max.apply(Math, orders.map(function(o) { return o.curr_2; }))\n    this.setState({ orders, max_order, loading: false })\n    var subscriptions = await this.subscribeToEvents()\n    this.setState({ subscriptions })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscriptions) {\n      this.state.subscriptions[0].unsubscribe()\n      this.state.subscriptions[1].unsubscribe()\n    }\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle, drizzleState } = this.props\n    var { Market } = drizzle.contracts\n    let account = drizzleState.accounts[0]\n\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var taker_subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2], taker: account },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    var maker_subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2], maker: account },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    return [taker_subscription, maker_subscription]\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    var type = null\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      type = \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      type = \"BUY\"\n    } else {\n      return null\n    }\n\n    return type\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var price = 0\n    if(type === \"BUY\") {\n      price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    let account = this.props.drizzleState.accounts[0]\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = this.props.drizzle.web3.utils.fromWei(order[\"give_amt\"].toString(), 'ether')\n      var buy_amt = this.props.drizzle.web3.utils.fromWei(order[\"take_amt\"].toString(), 'ether')\n      var true_type = type\n      if(order[\"maker\"] === account) {\n        if(type === \"BUY\") {\n          true_type = \"SELL\"\n        } else {\n          true_type = \"BUY\"\n        }\n      }\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      var timestamp = new Date(order[\"timestamp\"] * 1000)\n      timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n      order = {\n        \"timestamp\": timestamp,\n        \"type\": true_type,\n        \"price\": offer[0],\n        \"curr_1\": offer[1],\n        \"curr_2\": offer[2],\n        \"taker\": order[\"taker\"],\n        \"maker\": order[\"maker\"]\n      }\n      orders.push(order)\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle, drizzleState } = this.props\n    var { Market } = drizzle.contracts\n    let account = drizzleState.accounts[0]\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var taker_events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2], taker: account },\n      fromBlock: latestBlock - 25000,\n      toBlock: 'latest'\n    })\n    var maker_events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2], maker: account },\n      fromBlock: latestBlock - 25000,\n      toBlock: 'latest'\n    })\n\n    var events = maker_events.concat(taker_events)\n\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  render() {\n    var { loading, orders, max_order } = this.state\n    var { currencies } = this.props\n\n    var offers_table = null\n    var background_item = null\n\n    if(loading) {\n      background_item = (<div id=\"MarketHistory-empty\">Loading...</div>)\n    } else if(orders.length === 0) {\n      background_item = (<div id=\"MarketHistory-empty\">NO ORDERS</div>)\n    } else {\n      offers_table = (<Table.Body id=\"MarketHistory-tableBody\">\n            {orders.map((item, index) => {\n              var ratio = item[\"curr_2\"]/max_order * 100\n              var direction = \"right\"\n              var color_0 = \"rgba(255, 0, 0, 0.2)\"\n              var color_1 = \"rgba(0,0,0,0)\"\n              if(item[\"type\"] === \"BUY\") {\n                color_0 = \"rgba(0, 255, 0, 0.1)\"\n                color_1 = \"rgba(0, 0, 0, 0)\"\n              }\n              var style = { backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n                backgroundSize: `calc(${ratio}%) 100%`,\n                backgroundRepeat: `no-repeat`\n              }\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">BUY</span>) : (<span className=\"red MarketHistory-type\">SELL</span>)\n              return (\n                <Table.Row key={index} style={style}>\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{item[\"timestamp\"]}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_1\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_2\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MarketHistory\">\n        <Table striped basic celled unstackable id=\"MarketHistory-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Time</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { offers_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MyHistory\n","import React, { Component } from 'react'\nimport { Sidebar, Segment, Icon, Input, Form, Button, Loader } from 'semantic-ui-react'\n\nimport './sidebar.css'\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      visible: false,\n      amount: '0',\n      ui_amount: '',\n      currency_0_balance: \"0\",\n      currency_1_balance: \"0\",\n      id: null,\n      info: null,\n      owner: null,\n      bignumbers: {},\n      button_loading: false,\n      button_success: false,\n      button_error: false\n    }\n\n    this.updateInfo = this.updateInfo.bind(this)\n    this.stopLoading = this.stopLoading.bind(this)\n    this.flashError = this.flashError.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n  }\n\n  // Get the balances for each of the currencies since we will need that throughout the component\n  componentDidMount() {\n    this.generateBigNumbers()\n    this.updateInfo()\n  }\n\n  async updateInfo() {\n    var { drizzle, drizzleState, currencies } = this.props\n    if(this.state.visible && this.state.id) {\n      let account = drizzleState.accounts[0]\n\n      const currency_0_balance = await drizzle.contracts[currencies[0]].methods.balanceOf(account).call()\n      const currency_1_balance = await drizzle.contracts[currencies[1]].methods.balanceOf(account).call()\n      const info = await drizzle.contracts.Market.methods.getOffer(this.state.id).call()\n      const owner = await drizzle.contracts.Market.methods.getOwner(this.state.id).call()\n      this.setState({ currency_0_balance, currency_1_balance, info, owner })\n    }\n    setTimeout(this.updateInfo, 1000)\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  stopLoading() {\n    this.setState({ loading: false })\n  }\n\n  // Need to update visible and the side_bar info key if a new order is passed in\n  async componentWillReceiveProps(nextProps) {\n    if(nextProps.visible !== this.props.visible) {\n      this.setState({ visible: nextProps.visible })\n      if(nextProps.visible === false) {\n        this.setState({ info: null, owner: null, amount: '0', ui_amount: '', button_success: false, button_error: false, button_loading: false })\n      }\n    }\n    if(nextProps.sidebar_info !== this.props.sidebar_info) {\n      this.setState({ loading: true })\n      const info = await this.props.drizzle.contracts.Market.methods.getOffer(nextProps.sidebar_info[\"id\"]).call()\n      const owner = await this.props.drizzle.contracts.Market.methods.getOwner(nextProps.sidebar_info[\"id\"]).call()\n      this.setState({ id: nextProps.sidebar_info[\"id\"], info, owner, amount: '0', ui_amount: '' })\n      setTimeout(this.stopLoading, 150)\n    }\n  }\n\n  flashSuccess() {\n    var { toggleSidebar } = this.props\n    this.setState({ button_success : true, button_loading: false })\n    setTimeout(toggleSidebar, 1500)\n  }\n\n  flashError() {\n    this.setState({ button_error: true, button_loading: false })\n    setTimeout(() => this.setState({ button_error: false }), 1500)\n  }\n\n  // Most important function in the entire file since it actually interfaces\n  // and edits the blockchain.\n  executeTrade = (will_receive) => {\n    var { drizzle, drizzleState, sidebar_info } = this.props\n    const account = drizzleState.accounts[0]\n    const web3 = drizzle.web3\n\n    var id = sidebar_info[\"id\"]\n\n    // Log the inputs for the transaction so that you can always be 100% positive what is being sent\n    var inputs = {\n      \"id\": id,\n      \"will_receive\": will_receive.toString(),\n      \"will_receive_wholenums\": web3.utils.fromWei(will_receive.toString(), 'ether')\n    }\n    console.log(inputs)\n\n    drizzle.contracts.Market.methods.buy(id, will_receive.toString()).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', this.flashSuccess)\n      .on('error', this.flashError)\n\n    this.setState({ button_loading: true })\n  }\n\n  numberWithCommas(x) {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n  }\n\n  handleUserChange(value) {\n    var internal_value = 0\n    try{\n      if(/\\S/.test(value)) {\n        internal_value = this.props.drizzle.web3.utils.toWei(value.toString(), 'ether').toString()\n      }\n    } catch (err) {\n      console.log(err)\n      return\n    }\n    this.setState({ ui_amount: value, amount: internal_value })\n  }\n\n  handleAmountPercentageChange(value) {\n    var ui_value = this.props.drizzle.web3.utils.fromWei(value.toString(), 'ether')\n    this.setState({ amount: value.toString(), ui_amount: ui_value })\n  }\n\n  // So we were passed in the most up to date info the older component had.\n  // However this can and will change if it was stale or other people are taking the order.\n  // This keeps the info up to date and fallsback onto the old data if an error happens.\n  getUpdatedInfo() {\n    var { info } = this.state\n    var { sidebar_info } = this.props\n\n    var info_obj = {}\n    if(!info) {\n      return null\n    }\n\n    var buy_amt = info[0]\n    var pay_amt = info[2]\n    if(sidebar_info[\"type\"] === \"BUY\") {\n      info_obj = {\n        \"price\": sidebar_info[\"price\"],\n        \"curr_0_amt\": pay_amt.toString(),\n        \"curr_1_amt\": buy_amt.toString()\n      }\n    } else {\n      info_obj = {\n        \"price\": sidebar_info[\"price\"],\n        \"curr_0_amt\": buy_amt.toString(),\n        \"curr_1_amt\": pay_amt.toString()\n      }\n    }\n\n    return info_obj\n  }\n\n  calcWillReceive() {\n    var { drizzle } = this.props\n    var { amount } = this.state\n    const web3 = drizzle.web3\n\n    // Don't forget that these are flipped from the actual smart contract docs since\n    // WE are the counterparties so buy_amt/pay_amt is flipped from expected\n    var buy_amt = web3.utils.toBN(this.state.info[0])\n    var pay_amt = web3.utils.toBN(this.state.info[2])\n\n    let amount_bn = web3.utils.toBN(amount)\n    try {\n      let will_receive = amount_bn.mul(buy_amt).div(pay_amt)\n      return will_receive\n    } catch(err) {\n      return web3.utils.toBN(\"0\")\n    }\n  }\n\n  getMaxTake() {\n    var { sidebar_info, drizzle } = this.props\n    var { info, currency_0_balance, currency_1_balance } = this.state\n    const web3 = drizzle.web3\n\n    var pay_amt = web3.utils.toBN(info[2])\n    var balance = sidebar_info[\"type\"] === \"BUY\" ? web3.utils.toBN(currency_0_balance) : web3.utils.toBN(currency_1_balance)\n    if(balance.lt(pay_amt)) {\n      return balance\n    } else {\n      return pay_amt\n    }\n  }\n\n  render() {\n    var { visible, amount, ui_amount, currency_0_balance, currency_1_balance, bignumbers, loading, button_loading, button_error, button_success, owner } = this.state\n    var { currencies, toggleSidebar, sidebar_info } = this.props\n    const web3 = this.props.drizzle.web3\n\n    // Invert the type since the action do as a taker is the inverse of the action of the maker\n    var action = sidebar_info[\"type\"] === \"BUY\" ? \"SELL\" : \"BUY\"\n    var subtitle = action === \"BUY\" ? (<span className=\"green\">{action}</span>) : (<span className=\"red\">SELL</span>)\n\n    // So we were passed in the most up to date info the older component had.\n    // However this can and will change if it was stale or other people are taking the order.\n    // This keeps the info up to date and fallsback onto the old data if an error happens.\n    var updated_info = this.getUpdatedInfo()\n    if(!updated_info || loading) {\n      return (\n        <div className=\"Side_bar\">\n          <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Side_bar\">\n            <div id=\"Side_bar-x-container\">\n              <Icon name=\"close\" onClick={toggleSidebar} id=\"Side_bar-x\" size=\"large\" />\n            </div>\n            <div id=\"Side_bar-title\">Take Order</div>\n            <Loader active>Loading</Loader>\n          </Sidebar>\n        </div>\n      )\n    }\n\n    // Build object that swaps values for buys and sells so that rendering is simple\n    var giving = {\n      \"currency\": null,\n      \"receive_currency\": null,\n      \"balance\": 0,\n      \"offered\": 0,\n      \"max_take\": this.getMaxTake(),\n      \"will_receive\": this.calcWillReceive(),\n      \"maker\": owner ? owner.substring(0, 10) + \" ... \" + owner.substring(owner.length - 10, owner.length) : \"Loading...\",\n    }\n    giving[\"ui_will_receive\"] = Math.round(web3.utils.fromWei(giving[\"will_receive\"].toString()) * 1000) / 1000\n\n    if(action === \"BUY\") {\n      giving[\"currency\"] = currencies[1]\n      giving[\"receive_currency\"] = currencies[0]\n      giving[\"balance\"] = web3.utils.toBN(currency_1_balance)\n      giving[\"ui_balance\"] = Math.round(web3.utils.fromWei(currency_1_balance.toString(), 'ether') * 1000) / 1000\n      giving[\"offered\"] = web3.utils.toBN(updated_info[\"curr_1_amt\"])\n      giving[\"ui_offered\"] = Math.round(web3.utils.fromWei(updated_info[\"curr_1_amt\"], 'ether') * 1000) / 1000\n    } else {\n      giving[\"currency\"] = currencies[0]\n      giving[\"receive_currency\"] = currencies[1]\n      giving[\"balance\"] = web3.utils.toBN(currency_0_balance)\n      giving[\"ui_balance\"] = Math.round(web3.utils.fromWei(currency_0_balance.toString(), 'ether') * 1000) / 1000\n      giving[\"offered\"] = web3.utils.toBN(updated_info[\"curr_0_amt\"])\n      giving[\"ui_offered\"] = Math.round(web3.utils.fromWei(updated_info[\"curr_0_amt\"], 'ether') * 1000) / 1000\n    }\n\n    // Adjust the text on the button if an action or error just occurred\n    var button_text = action + \" \" + currencies[0]\n    button_text = button_success ? \"SUCCESS\" : button_text\n    button_text = button_error ? \"FAILED\" : button_text\n\n    return (\n      <div className=\"Side_bar\">\n        <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Side_bar\">\n          <div id=\"Side_bar-x-container\">\n            <Icon name=\"close\" onClick={toggleSidebar} id=\"Side_bar-x\" size=\"large\" />\n          </div>\n          <div id=\"Side_bar-title\">Take Order</div>\n          <div id=\"Side_bar-subtitle\">How much would you like to {subtitle}?</div>\n          \n          <div id=\"Side_bar-info\">\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Maker:</div>\n              <div className=\"Side_bar-info-content\">{giving[\"maker\"]}</div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Price:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(updated_info[\"price\"])} <span id=\"Side_bar-exchange\">{currencies[1]} / {currencies[0]}</span></div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Balance {giving[\"currency\"]}:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(giving[\"ui_balance\"])} <span id=\"Side_bar-exchange\">{giving[\"currency\"]}</span></div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Offered {giving[\"currency\"]}:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(giving[\"ui_offered\"])} <span id=\"Side_bar-exchange\">{giving[\"currency\"]}</span></div>\n            </div>\n          </div>\n\n          <Form size='tiny' id=\"Side_bar-form\">\n            <Form.Field>\n              <div>\n                <div className=\"Side_bar-info-title\">Spend {giving[\"currency\"]}:</div>\n                <Input\n                  label={{ basic: true, content: giving[\"currency\"] }}\n                  labelPosition='right'\n                  placeholder='Enter Amount...'\n                  value={ui_amount}\n                  onChange={(e) => { this.handleUserChange(e.target.value) }}\n                />\n              </div>\n            </Form.Field>\n            <Button.Group id=\"Side_bar-mini-buttons\" size='mini' basic>\n              <Button onClick={ () => this.handleUserChange(\"\") } >0%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].div(bignumbers[4])) } >25%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].div(bignumbers[2])) } >50%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"]) } >100%</Button>\n            </Button.Group>\n          </Form>\n          <div className=\"Side_bar-info-item\">\n            <div className=\"Side_bar-info-title\">Will Receive</div>\n            <div className=\"Side_bar-info-content\">{giving[\"ui_will_receive\"].toString() + \" \" + giving[\"receive_currency\"]}</div>\n          </div>\n\n          <Button className=\"BuySell-button\" loading={button_loading} color={action === \"BUY\" ? \"green\" : \"red\"} disabled={button_text !== action + \" \" + currencies[0] || giving[\"will_receive\"].lte(web3.utils.toBN(\"1000\")) || web3.utils.toBN(amount).gt(giving[\"max_take\"])} onClick={() => this.executeTrade(giving[\"will_receive\"]) }>{button_text}</Button>\n\n        </Sidebar>\n      </div>\n    );\n  }\n}\n\nexport default SideBar\n","import React, { Component } from 'react'\nimport { Grid, Tab } from 'semantic-ui-react'\n\n// import Chart from './chart/chart'\nimport OrderList from './orderlist/orderlist'\nimport BuySell from './buysell/buysell'\nimport MyOrders from './myorders/myorders'\nimport Stats from './stats/stats'\nimport MarketHistory from './markethistory/markethistory'\nimport MyHistory from './myhistory/myhistory'\nimport SideBar from './sidebar/sidebar'\n\nimport './market.css'\n\nclass Market extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currencies: [],\n      visible: false,\n      sidebar_info: {\n        \"price\": 0,\n        \"curr_0_amt\": 0,\n        \"curr_1_amt\": 0,\n        \"id\": \"\",\n        \"type\": \"\"\n      },\n      keys: {\n        numBuys: null,\n        numSells: null\n      }\n    }\n  }\n\n  componentWillMount() {\n    var currencies = this.props.pair.split(\"_\")\n    this.setState({currencies})\n  }\n\n  componentDidMount() {\n    var { drizzle } = this.props\n    var { currencies } = this.state\n\n    var buy_token_addr = drizzle.contracts[currencies[0]].address\n    var sell_token_addr = drizzle.contracts[currencies[1]].address\n\n    const numBuysKey = drizzle.contracts.Market.methods.getOfferCount.cacheCall(sell_token_addr, buy_token_addr)\n    const numSellsKey = drizzle.contracts.Market.methods.getOfferCount.cacheCall(buy_token_addr, sell_token_addr)\n\n    let keys = Object.assign({}, this.state.keys)\n    keys[\"numBuys\"] = numBuysKey\n    keys[\"numSells\"] = numSellsKey\n\n    this.setState({currencies, keys})\n  }\n\n  setSidebar = (info) => {\n    this.setState({ sidebar_info: info, visible: true })\n  }\n\n  toggleSidebar = () => {\n    this.setState({ visible: !this.state.visible })\n  }\n\n  render() {\n    var { currencies, keys, visible, sidebar_info } = this.state\n    var { Market } = this.props.drizzleState.contracts\n    var { drizzle, drizzleState } = this.props\n\n    var title = \"Market: \"\n    if(currencies.length === 2) {\n      title = title + currencies[0] + \"/\" + currencies[1]\n    }\n\n    var numBuys = \"Loading...\"\n    var numSells = \"Loading...\"\n\n    if(keys[\"numBuys\"] in Market.getOfferCount) {\n      numBuys = Market.getOfferCount[keys[\"numBuys\"]].value\n    }\n    if(keys[\"numSells\"] in Market.getOfferCount) {\n      numSells = Market.getOfferCount[keys[\"numSells\"]].value\n    }\n\n    if(!numBuys) {\n      numBuys = \"Error...\"\n    }\n    if(!numSells) {\n      numSells = \"Error...\"\n    }\n\n    const panes = [\n      { menuItem: 'Open Orders', render: () => <Tab.Pane className=\"Market-tab-pane\"><MyOrders currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n      { menuItem: 'My History', render: () => <Tab.Pane className=\"Market-tab-pane\"><MyHistory currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n      { menuItem: 'Market History', render: () => <Tab.Pane className=\"Market-tab-pane\"><MarketHistory currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n    ]\n\n    return (\n      <div className=\"Market\">\n        <SideBar currencies={currencies} toggleSidebar={this.toggleSidebar} sidebar_info={sidebar_info} visible={visible} drizzle={drizzle} drizzleState={ drizzleState } />\n        <div id=\"Market-title\"><span className=\"Market-h1\">{title}</span></div>\n\n        <div className=\"Market-headers\">24-Hour Market Stats</div>\n        <div id=\"Market-stats\"><Stats currencies={currencies} drizzle={drizzle} drizzleState={ drizzleState } /></div>\n \n        <div className=\"Market-headers\">Activity Pane</div>\n        <div id=\"Market-activity-pane\">\n          <Tab menu={{ fluid: true, tabular: true, attached: 'top' }} panes={panes} />\n        </div>\n\n        <div className=\"Market-headers\">Make Order</div>\n        <div id=\"Market-buysell\"><BuySell currencies={currencies} drizzle={drizzle} drizzleState={ drizzleState } /></div>\n        \n        <Grid divided id=\"Market-orderlists\">\n          <Grid.Row>\n            <Grid.Column className=\"Market-orderlist\" computer={8} tablet={8} mobile={16}>\n              <div className=\"Market-headers\">{currencies[0]} <span className=\"green\">Buy</span> Orders ({numBuys})</div>\n              <OrderList currencies={currencies} type={\"BUY\"} drizzle={drizzle} drizzleState={ drizzleState } setSidebar={this.setSidebar} />\n            </Grid.Column>\n            <Grid.Column className=\"Market-orderlist\" computer={8} tablet={8} mobile={16}>\n              <div className=\"Market-headers\">{currencies[0]} <span className=\"red\">Sell</span> Orders ({numSells})</div>\n              <OrderList currencies={currencies} type={\"SELL\"} drizzle={drizzle} drizzleState={ drizzleState } setSidebar={this.setSidebar} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      \n      </div>\n    );\n  }\n}\n\nexport default Market\n","import React, { Component } from 'react'\nimport { Transition } from 'semantic-ui-react'\nimport './home.css'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate() {\n  }\n\n  render() {\n    return (\n      <div id=\"Home\">\n        <Transition transitionOnMount={true} animation='fade up' duration={1500}>\n          <div id=\"Home-title\">\n            OasisX\n          </div>\n        </Transition>\n        <Transition transitionOnMount={true} animation='fade up' duration={3500}>\n          <div id=\"Home-subtitle\">\n            The fastest UI for Oasis.\n          </div>\n        </Transition>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport { Input, Form, Button } from 'semantic-ui-react'\n\nimport './wrapstation.css'\n\nclass WrapStation extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      amount_wrap: '0',\n      ui_amount_wrap: '',\n      amount_unwrap: '0',\n      ui_amount_unwrap: '',\n      bignumbers: {}\n    }\n  }\n\n  componentDidMount() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  handlePercentUpdate(name, value) {\n    var ui_value = this.props.drizzle.web3.utils.fromWei(value.toString(), 'ether')\n    if(name === \"amount_wrap\") {\n      this.setState({ amount_wrap: value, ui_amount_wrap: ui_value })\n    } else if(name === \"amount_unwrap\") {\n      this.setState({ amount_unwrap: value, ui_amount_unwrap: ui_value })\n    } else {\n      return\n    }\n  }\n\n  handleUserUpdate(name, value) {\n    var internal_value = 0\n    try{\n      if(/\\S/.test(value)) {\n        internal_value = this.props.drizzle.web3.utils.toWei(value.toString(), 'ether')\n      }\n    } catch (err) {\n      console.log(err)\n      return\n    }\n\n    if(name === \"ui_amount_wrap\") {\n      this.setState({ ui_amount_wrap: value, amount_wrap: internal_value })\n    } else if(name === \"ui_amount_unwrap\") {\n      this.setState({ ui_amount_unwrap: value, amount_unwrap: internal_value })\n    } else {\n      return\n    }\n  }\n\n  onWrap = () => {\n    // Grab the wrap function from the contract instance and the account and amount we want to execute it with\n    const deposit = this.props.drizzle.contracts.WETH.methods.deposit\n    const account = this.props.drizzleState.accounts[0]\n    var amount = this.state.amount_wrap\n    var web3 = this.props.drizzle.web3\n\n    // Need to check if the amount value is an empty string/undefined/null and that it's greater than 0\n    if(amount && amount > 0) {\n      console.log(\"SENDING \" + amount + \" TO WRAPPER...\")\n      deposit.cacheSend({value: amount, from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      this.setState({ amount_wrap: '0', ui_amount_wrap: '' })\n    } else {\n      console.log(\"Error: No amount chosen\")\n    }\n  }\n\n  onUnwrap = () => {\n    const withdraw = this.props.drizzle.contracts.WETH.methods.withdraw\n    const account = this.props.drizzleState.accounts[0]\n    var amount = this.state.amount_unwrap\n    var web3 = this.props.drizzle.web3\n\n    if(amount && amount > 0) {\n      console.log(\"SENDING \" + amount + \" TO UNWRAPPER...\")\n      withdraw.cacheSend(amount.toString(), {from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      this.setState({ amount_unwrap: '0', ui_amount_unwrap: '' })\n    } else {\n      console.log(\"Error: No amount chosen\")\n    }\n  }\n\n  render() {\n    var { weth_balance, eth_balance } = this.props\n    var { ui_amount_wrap, ui_amount_unwrap, bignumbers } = this.state\n\n    // Convert to BigNumbers since they will have potential math done on them (risk of overflow/underflow)\n    eth_balance = this.props.drizzle.web3.utils.toBN(eth_balance)\n    weth_balance = this.props.drizzle.web3.utils.toBN(weth_balance)\n\n    return (\n      <div className=\"WrapStation\">\n        <div id=\"WrapStation-title\">Wrap / Unwrap</div>\n        <Form onSubmit={this.handleSubmit} size='tiny' id=\"WrapStation-form\">\n          <div className=\"WrapStation-headers\">Wrap <span id=\"WrapStation-warning\"><span className=\"red\">WARNING:</span> DO NOT WRAP ALL YOUR ETHER</span></div>\n          <Form.Group unstackable className=\"WrapStation-formgroup\">\n            <Form.Field width={11}>\n              <Input\n                label={{ basic: true, content: \"ETH\" }}\n                labelPosition='right'\n                placeholder='Enter Amount ETH...'\n                value={ui_amount_wrap}\n                onChange={(e) => { this.handleUserUpdate('ui_amount_wrap', e.target.value) }}\n              />\n            </Form.Field>\n            <Form.Button width={4} className=\"WrapStation-button\" color='green' size='small' disabled={ui_amount_wrap === \"\"} onClick={ () => this.onWrap() } >WRAP</Form.Button>\n          </Form.Group>\n          <Button.Group className=\"WrapStation-mini-buttons\" size='mini' basic inverted>\n            <Button onClick={ () => this.handleUserUpdate(\"ui_amount_wrap\", \"\") } >0%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.div(bignumbers[4])) } >25%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.div(bignumbers[2])) } >50%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.mul(bignumbers[9]).div(bignumbers[10])) } >90%</Button>\n          </Button.Group>\n          <div className=\"WrapStation-headers\">Unwrap</div>\n          <Form.Group unstackable className=\"WrapStation-formgroup\">\n            <Form.Field width={10}>\n              <Input\n                label={{ basic: true, content: \"WETH\" }}\n                labelPosition='right'\n                placeholder='Enter Amount WETH...'\n                value={ui_amount_unwrap}\n                onChange={(e) => { this.handleUserUpdate('amount_unwrap', e.target.value) }}\n              />\n            </Form.Field>\n            <Form.Button width={4} className=\"WrapStation-button\" color='green' size='small' disabled={ui_amount_unwrap === \"\"} onClick={ () => this.onUnwrap() } >UNWRAP</Form.Button>\n          </Form.Group>\n          <Button.Group className=\"WrapStation-mini-buttons\" size='mini' basic inverted>\n            <Button onClick={ () => this.handleUserUpdate(\"ui_amount_unwrap\", \"\") } >0%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.div(bignumbers[4])) } >25%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.div(bignumbers[2])) } >50%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n            <Button onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance) } >100%</Button>\n          </Button.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default WrapStation\n","import React, { Component } from 'react'\nimport { Header, Table, Checkbox, Icon } from 'semantic-ui-react'\nimport './infobar.css'\n\nimport WrapStation from './wrapstation/wrapstation'\n\nclass Infobar extends Component {\n  constructor(props, context) {\n    super(props)\n    this.state = {\n      currencies: {\n        \"WETH\": {\n          balance: 0,\n          approved: 0\n        },\n        \"DAI\": {\n          balance: 0,\n          approved: 0\n        },\n        \"MKR\": {\n          balance: 0,\n          approved: 0\n        },\n        \"ETH\": {\n          balance: 0,\n          approved: 0\n        }\n      }\n    }\n\n    this.updateInfo = this.updateInfo.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateInfo()\n  }\n\n  async updateInfo() {\n    const { drizzle, drizzleState } = this.props\n    let account = drizzleState.accounts[0]\n    let market_address = drizzle.contracts.Market.address\n    \n    const weth_balance = await drizzle.contracts.WETH.methods.balanceOf(account).call()\n    const dai_balance = await drizzle.contracts.DAI.methods.balanceOf(account).call()\n    const mkr_balance = await drizzle.contracts.MKR.methods.balanceOf(account).call()\n    \n    const weth_approval = await drizzle.contracts.WETH.methods.allowance(account, market_address).call()\n    const dai_approval = await drizzle.contracts.DAI.methods.allowance(account, market_address).call()\n    const mkr_approval = await drizzle.contracts.MKR.methods.allowance(account, market_address).call()\n    \n    var eth_balance = drizzleState.accountBalances[account]\n\n    var currencies = {\n      \"WETH\": {\n        balance: weth_balance,\n        approved: weth_approval\n      },\n      \"DAI\": {\n        balance: dai_balance,\n        approved: dai_approval\n      },\n      \"MKR\": {\n        balance: mkr_balance,\n        approved: mkr_approval\n      },\n      \"ETH\": {\n        balance: eth_balance,\n        approved: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n      }\n    }\n\n    this.setState({ currencies })\n\n    setTimeout(this.updateInfo, 5000)\n  }\n\n  approveCurrencyForAmount(currency, amount) {\n    var { drizzle, drizzleState } = this.props\n    var account = drizzleState.accounts[0]\n    let market_address = drizzle.contracts.Market.address\n    var web3 = drizzle.web3\n\n    if(currency in drizzle.contracts) {\n      var currency_contract = drizzle.contracts[currency]\n      \n      var approve = currency_contract.methods.approve\n      approve.cacheSend(market_address, amount, {from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n    }\n  }\n\n  approveCurrency(currency) {\n    this.approveCurrencyForAmount(currency, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\")\n  }\n\n  unapproveCurrency(currency) {\n    this.approveCurrencyForAmount(currency, \"0\")\n  }\n\n  toggleApproval(currency, current_approval) {\n    let new_approval = !current_approval\n    if(new_approval) {\n      this.approveCurrency(currency)\n    } else {\n      this.unapproveCurrency(currency)\n    }\n  }\n\n  getUIBalance(raw_balance) {\n    let UI_balance = raw_balance\n    if(raw_balance != null) {\n      UI_balance = Math.round(this.props.drizzle.web3.utils.fromWei(raw_balance.toString(), 'ether') * 1000) / 1000\n    } else {\n      UI_balance = \"Error...\"\n    }\n    return UI_balance    \n  }\n\n  getUIAllowance(raw_balance, raw_allowance) {\n    const web3 = this.props.drizzle.web3\n    let UI_allowance = false\n    raw_allowance = web3.utils.toBN(raw_allowance)\n    let balance = web3.utils.toBN(raw_balance)\n    if(raw_allowance.gte(balance)) {\n      UI_allowance = true\n    } else {\n      UI_allowance = false\n    }\n    return UI_allowance\n  }\n\n  render() {\n    const { currencies } = this.state\n    const { padded, closeSidebar, drizzle, drizzleState } = this.props\n    let account = drizzleState.accounts[0]\n\n    const vals = Object.keys(currencies).map((key) => {\n      var obj = {}\n      obj[\"name\"] = key\n      obj[\"balance\"] = \"0\"\n      obj[\"approved\"] = false\n      var raw_balance = currencies[key][\"balance\"]\n      var raw_allowance = currencies[key][\"approved\"]\n      if(raw_balance && raw_allowance) {\n        obj[\"balance\"] = this.getUIBalance(raw_balance)\n        obj[\"approved\"] = this.getUIAllowance(raw_balance, raw_allowance)      \n      }\n      return obj\n    })\n\n    var padding = null\n    var ui_account = account\n    var x_icon = <Icon name=\"close\" id=\"Infobar-x\" size=\"large\" onClick={closeSidebar} />\n    if(padded) {\n      padding = \"very\"\n      x_icon = null\n    } else {\n      if(ui_account) {\n        ui_account = ui_account.substring(0, 10) + \" ... \" + ui_account.substring(ui_account.length - 10, ui_account.length) \n      }\n    }\n\n    return (\n      <div id='Infobar'>\n        <div className='Infobar-header'>{ui_account}{x_icon}</div>\n        <Table basic='very' padded={padding} striped unstackable id=\"Infobar-table\">\n          <Table.Header id=\"Infobar-table-header\">\n            <Table.Row>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Token</Table.HeaderCell>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Balance</Table.HeaderCell>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Approved</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {vals.map((item, index) => {\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell>\n                    <Header className='Infobar-table-entry' textAlign='left'>{item.name}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <Header className='Infobar-table-entry' textAlign='left'>{item.balance}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <Checkbox toggle disabled={item.name === \"ETH\"} checked={item.approved} onClick={ () => this.toggleApproval(item.name, item.approved) } />\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>\n        </Table>\n\n        <WrapStation drizzle={drizzle} drizzleState={drizzleState} weth_balance={currencies[\"WETH\"][\"balance\"]} eth_balance={currencies[\"ETH\"][\"balance\"]} />\n      </div>\n    )\n  }\n}\n\nexport default Infobar;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Responsive, Icon, Dropdown, Sidebar, Segment } from 'semantic-ui-react'\nimport './navbar.css'\nimport logo from '../../images/x.svg'\nimport Infobar from '../infobar/infobar'\n\nclass Navbar extends Component {\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeItem: '',\n      visible: false\n    }\n  }\n\n  componentDidUpdate() {\n  }\n\n  toggleVisible = () => {\n    this.setState({ visible: !this.state.visible })\n  }\n\n  render() {\n    const { children, drizzle, drizzleState } = this.props\n    const { activeItem, visible } = this.state\n\n    // var title = \"OasisX\"\n    var other_buttons = []\n    other_buttons.push(\n      {\n        name: 'WETH/DAI',\n        href: '/WETH_DAI' \n      },\n      {\n        name: 'MKR/WETH',\n        href: '/MKR_WETH'\n      },\n      {\n        name: 'MKR/DAI',\n        href: '/MKR_DAI'\n      }\n    )\n\n\n    return (\n      <div>\n        <Responsive {...Responsive.onlyMobile}>\n          <Menu \n            borderless\n            fixed='top'\n            id='Navbar-mobile'\n          >\n            <Menu.Item\n              name='Home'\n              active={activeItem === 'Home'}\n              href='/'\n              className='Navbar-item'\n            >\n              <div className='Navbar-button-mobile' id='Navbar-logo-container'><img src={logo} alt='logo' id='Navbar-logo-mobile' /></div>\n            </Menu.Item>\n            <Dropdown item text='Markets' className='Navbar-dropdown'>\n              <Dropdown.Menu>\n                {\n                  other_buttons.map((button, idx) => {\n                    return (\n                        <Dropdown.Item\n                          name={button.name}\n                          active={activeItem === button.name}\n                          className='Navbar-item'\n                          as={Link}\n                          to={button.href}\n                          key={idx}\n                        >\n                        {button.name}\n                      </Dropdown.Item>\n                    )\n                  })\n                }\n              </Dropdown.Menu>\n            </Dropdown>\n            <Menu.Menu position='right'>\n              <Menu.Item>\n                <Icon name='sidebar' inverted onClick={ this.toggleVisible } />\n              </Menu.Item>                \n            </Menu.Menu>\n          </Menu>\n          <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Navbar-Side_info_bar\">\n            <Infobar drizzle={drizzle} drizzleState={ drizzleState } padded={false} closeSidebar={this.toggleVisible} />\n          </Sidebar>\n          { children }\n        </Responsive>\n\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n          <Menu \n            secondary \n            vertical\n            size='mini'\n            id='Navbar'\n          >\n            <Menu.Item\n              name='Home'\n              className='Navbar-item'\n              as={Link}\n              to={'/'}\n            >\n              <div className='Navbar-button' id='Navbar-logo-container'><img src={logo} alt='logo' className='Navbar-icon' /></div>\n            </Menu.Item>\n            {\n              other_buttons.map((button, idx) => {\n                return (\n                    <Menu.Item\n                      name={button.name}\n                      active={activeItem === button.name}\n                      className='Navbar-item'\n                      onClick={this.handleToggle}\n                      as={Link}\n                      to={button.href}\n                      key={idx}\n                    >\n                    <div className='Navbar-button'>{button.name}</div>\n                  </Menu.Item>\n                )\n              })\n            }\n          </Menu>\n          { children }\n        </Responsive>\n      </div>\n    )\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { Responsive } from 'semantic-ui-react'\n\nimport './App.css'\n\nimport Market from '../market/market'\nimport Home from '../home/home'\nimport Navbar from '../navbar/navbar'\nimport Infobar from '../infobar/infobar'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      loading: true,\n      drizzleState: null\n    }\n  }\n\n  componentDidMount() {\n    const { drizzle } = this.props\n\n    // Subscribe to changes in the store and assign to unsubscribe for later release\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      // Every time the store updates we update the state and pass it to all the children\n      const drizzleState = drizzle.store.getState()\n\n      // If the entire setup is initialized then we update local component states\n      if(drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState })\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  render() {\n    var { loading, drizzleState } = this.state\n    var { drizzle } = this.props\n\n    if(loading) {\n      return <div id=\"App-loading-screen\">Connecting to Ethereum...</div>\n    }\n    else {\n      return (\n        <div className=\"App\">\n          <HashRouter>\n            <div>\n              <Navbar drizzle={drizzle} drizzleState={ drizzleState } />\n              <div id=\"App_market_container\">\n                  <Switch>\n                    <Route exact path='/' render={() => <Home drizzle={drizzle} drizzleState={ drizzleState } />} />\n                    <Route exact path='/WETH_DAI' render={() => <Market key={'WETH_DAI'} drizzle={drizzle} drizzleState={ drizzleState } pair={'WETH_DAI'} />} />\n                    <Route exact path='/MKR_WETH' render={() => <Market key={'MKR_WETH'} drizzle={drizzle} drizzleState={ drizzleState } pair={'MKR_WETH'} />} />\n                    <Route exact path='/MKR_DAI' render={() => <Market  key={'MKR_DAI'} drizzle={drizzle} drizzleState={ drizzleState } pair={'MKR_DAI'} />} />\n                  </Switch>\n              </div>\n            </div>\n          </HashRouter>\n          <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n            <Infobar drizzle={drizzle} drizzleState={ drizzleState } padded={true} />\n          </Responsive>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport './index.css';\nimport App from './containers/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { Drizzle, generateStore } from 'drizzle'\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:9545\")\n// web3.currentProvider.enable()\n\nconst config = require(\"./config\")\nconst erc20Abi = require(\"./abi/standard-token/erc20\")\nconst WEthAbi = require(\"./abi/standard-token/ds-eth-token\")\nconst MatchingMarketAbi = require(\"./abi/maker-otc/matching-market\");\nconst SupportMethodsAbi = require(\"./abi/otc-support-methods/otc-support-methods\")\n\nconst WETH = new web3.eth.Contract(WEthAbi.interface, config[\"tokens\"][\"main\"][\"W-ETH\"])\nconst DAI = new web3.eth.Contract(erc20Abi.interface, config[\"tokens\"][\"main\"][\"DAI\"])\nconst MKR = new web3.eth.Contract(erc20Abi.interface, config[\"tokens\"][\"main\"][\"MKR\"])\nconst market = new web3.eth.Contract(MatchingMarketAbi.interface, config[\"market\"][\"main\"][\"address\"])\nconst supportMethods = new web3.eth.Contract(SupportMethodsAbi.interface, config[\"otcSupportMethods\"][\"main\"][\"address\"])\n\nconst options = {\n\tcontracts: [\n\t\t{\n\t\t\tcontractName: 'WETH',\n\t\t\tweb3Contract: WETH\n\t\t},\n\t\t{\n\t\t\tcontractName: 'DAI',\n\t\t\tweb3Contract: DAI\n\t\t},\n\t\t{\n\t\t\tcontractName: 'MKR',\n\t\t\tweb3Contract: MKR\n\t\t},\n\t\t{\n\t\t\tcontractName: 'Market',\n\t\t\tweb3Contract: market\n\t\t},\n\t\t{\n\t\t\tcontractName: 'SupportMethods',\n\t\t\tweb3Contract: supportMethods\n\t\t}\n\t],\n\tevents: {\n\t\tMarket: ['LogTake']\n\t},\n\tpolls: {\n\t\taccounts: 3000,\n\t\tblocks: 3000\n\t},\n\tsyncAlways: false\n}\n\nconst drizzleStore = generateStore(options)\nconst drizzle = new Drizzle(options, drizzleStore)\n\nReactDOM.render(<App drizzle={drizzle} />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}