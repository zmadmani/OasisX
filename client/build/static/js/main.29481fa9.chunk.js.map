{"version":3,"sources":["images/x.svg","containers/utils/humanname/humanname.js","containers/market/orderlistV2/orderlistV2.js","containers/market/limitorder/limitorder.js","containers/market/marketorder/marketorder.js","containers/market/myorders/myorders.js","containers/market/stats/chart/chart.js","containers/market/stats/stats.js","containers/market/markethistory/markethistory.js","containers/market/leaderboard/leaderboard.js","containers/market/myhistory/myhistory.js","containers/market/sidebar/sidebar.js","containers/market/market.js","containers/home/home.js","containers/infobar/wrapstation/wrapstation.js","containers/infobar/infobar.js","containers/navbar/navbar.js","containers/App/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","first_names","last_names","colors","fontColors","HumanName","nextProps","nextState","this","props","address","two_hundred","ethers","utils","bigNumberify","portion_1","substr","toString","portion_2","mod","initials","num_colors","long_num","color_idx","_this$props","icon_only","inactive_link","react_default","a","createElement","className","_this$getName","getName","_this$getName2","Object","slicedToArray","name","_this$getColor","getColor","_this$getColor2","backgroundColor","fontColor","color","onClick","window","open","icon","style","final","title","Component","OrderListV2","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","max_order","orders","Math","max","apply","map","o","curr_1_amt","prevProps","prevState","buy_orders","length","sell_orders","last_order","x","parts","split","replace","join","_this2","index","_ref","key","item","maker","price","numberWithCommas","round","id","Grid","padded","Column","computer","tablet","mobile","account","type","ratio","color_0","color_1","custom_style","backgroundImage","concat","backgroundSize","backgroundRepeat","assign","setSidebar","verticalAlign","humanname_humanname","_this3","currencies","sell_orders_reverse","slice","reverse","push","curr_0_amt","getMax","Icon","size","es","outline","_ref2","height","width","rowHeight","rowCount","rowRenderer","scrollToIndex","LimitOrder","loading","init","error","success","amount_0","ui_amount_0","amount_1","ui_amount_1","bignumbers","last_price","handleSubmit","bind","assertThisInitialized","flashSuccess","flashError","generateBigNumbers","i","setState","options","curr_gem_0","contracts","curr_gem_1","data","pay_amt","pay_gem","buy_amt","buy_gem","console","log","Market","offer","tx","wait","_context","t0","setTimeout","value","test","amount_1_bn","parseUnits","amount_0_bn","price_bn","one_bn","mul","div","formatUnits","err","_this4","_this$state","_this$props2","balances","can_buy","can_sell","curr_0_balance","curr_1_balance","gte","gt","side_text","Loader","active","inline","Form","Field","Input","label","basic","content","labelPosition","placeholder","onChange","e","handlePriceChange","target","disabled","handleAmountChange","Button","Group","inverted","handleAmountPercentageChange","MarketOrder","amounts","ui_amounts","expected_price","expected_amount","handleMarketBuy","handleMarketSell","min_expected_amount","min_fill_amount","sellAllAmount","_this$state5","reset","_this$state6","_this3$state","_this$state7","will_receive","giving","getBuyAmount","one","_this$state9","new_amounts","new_ui_amounts","ui_amount","amount_bn","setExpectedAmount","_this5","_this$state10","_this6","_this$state11","_this$props4","side_texts","widths","MyOrders","myOrders","cancel","orders_table","background_item","getMyOrders","Table","Body","Row","Cell","textAlign","cancelOrder","selectable","striped","celled","unstackable","columns","Header","HeaderCell","candlesAppearance","wickStroke","fill","d","close","widthRatio","opacity","CandleChart","first_timestamp","curr_candle","date","Date","high","low","volume","parseFloat","end_timestamp","order","min","chart","initialData","buildChartPoints","ema10","ema","windowSize","sourcePath","skipUndefined","merge","c","accessor","stroke","ema50","calculatedData","margin","left","right","top","bottom","yGrid","innerTickSize","tickStrokeDasharray","tickStrokeOpacity","tickStrokeWidth","xGrid","_xScaleProvider","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","last","react_stockcharts_es","seriesName","clamp","yExtents","axes","axisAt","orient","ticks","tickStroke","series","yAccessor","coordinates","tooltip","origin","xDisplayFormat","timeFormat","textFill","echo","w","h","tickFormat","format","fitWidth","Stats","buildStat","users","num_users","num_buys","num_sells","buy_volume","sell_volume","last_type","new_stats","curr_1","symbol","document","raw_stats","keys","statistics","updateStats","stats_chart_chart","List","Item","Content","Description","MarketHistory","participants","only","Leaderboard","direction","column","new_data","eventsToData","max_profit","abs","lte","amount_0_given","amount_1_received","amount_1_given","amount_0_received","avg_buy_order","avg_sell_order","amount_sell","amount_buy","sell_price","buy_price","min_amount","lt","events","profiles","taker","buyer","seller","newUserProfile","profile_data","add","getPrice","avg_buy_price","avg_sell_price","profit","getProfit","data_point","user","amount_0_bought","amount_0_sold","sort","first","second","clicked_column","profit_color","_this$state2","headers","handleSort","MyHistory","my_orders","new_order","SideBar","executeTrade","asyncToGenerator","regenerator_default","mark","_callee","sidebar_info","inputs","wrap","prev","next","will_receive_wholenums","buy","sent","button_loading","stop","_x","arguments","visible","amount","currency_0_balance","currency_1_balance","info","owner","button_success","button_error","updateInfo","stopLoading","balanceOf","getOffer","getOwner","toggleSidebar","internal_value","ui_value","balance","action","subtitle","updated_info","getUpdatedInfo","Sidebar","as","Segment","animation","currency","receive_currency","offered","max_take","getMaxTake","calcWillReceive","button_text","handleUserChange","past_orders","open_buy_orders","open_sell_orders","timers","updateBalances","updateOpenOrders","signer","getAddress","getPastOrders","subscribeToEvents","clearTimeout","curr_1_addr","curr_2_addr","hashKey1","solidityKeccak256","hashKey2","filter1","filters","LogTake","filter2","removeAllListeners","timer","on","pair","take_amt","give_amt","timestamp","event","eventsToOrders","buy_addr","toUpperCase","pay_addr","getType","toLocaleTimeString","undefined","hour","minute","toLocaleDateString","day","month","year","raw_timestamp","curr_0","provider","getBlockNumber","latestBlock","fromBlock","Promise","all","getLogs","events1","events2","interface","decode","topics","parseInt","getOpenOrders","token_addr_0","token_addr_1","pay_token","buy_token","SupportMethods","getOffers","rawOrders","processOpenOrders","n","pay_amount","buy_amount","_this$props7","all_open_orders","b","activity_panes","menuItem","render","Tab","Pane","myorders_myorders","myhistory_myhistory","markethistory_markethistory","leaderboard_leaderboard","buy_panes","limitorder_limitorder","marketorder_marketorder","sidebar_sidebar","stats_stats","divided","menu","fluid","tabular","attached","panes","orderlistV2_orderlistV2","Responsive","minWidth","onlyTablet","maxWidth","Home","Transition","transitionOnMount","duration","WrapStation","onWrap","deposit","WETH","amount_wrap","onUnwrap","_callee2","withdraw","_context2","amount_unwrap","ui_amount_wrap","ui_amount_unwrap","_this$state3","weth_balance","eth_balance","_this$state4","onSubmit","handleUserUpdate","handlePercentUpdate","Infobar","context","approved","DAI","MKR","ETH","market_address","dai_balance","mkr_balance","allowance","weth_approval","dai_approval","mkr_approval","getBalance","contract","approve","approveCurrencyForAmount","current_approval","approveCurrency","unapproveCurrency","raw_balance","raw_allowance","closeSidebar","vals","obj","getUIBalance","getUIAllowance","x_icon","Checkbox","toggle","checked","toggleApproval","wrapstation_wrapstation","Navbar","handleItemClick","activeItem","toggleVisible","children","other_buttons","href","onlyMobile","Menu","borderless","fixed","src","logo","alt","Dropdown","text","button","idx","Link","to","position","infobar_infobar","secondary","vertical","handleToggle","App","HashRouter","navbar_navbar","Switch","Route","exact","path","home_home","market_market","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ethereum","web3","currentProvider","readOnly","contract_initializer","providers","Web3Provider","getSigner","getDefaultProvider","Wallet","createRandom","config","require","erc20Abi","WEthAbi","MatchingMarketAbi","SupportMethodsAbi","Contract","ReactDOM","containers_App_App","getElementById","URL","process","addEventListener","fetch","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.29481fa9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/x.23ec4264.svg\";","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\n\nimport './humanname.css'\n\nvar first_names = [\"JAMES\", \"JOHN\", \"ROBERT\", \"MICHAEL\", \"WILLIAM\", \"DAVID\", \"RICHARD\", \"CHARLES\", \"JOSEPH\", \"THOMAS\", \"CHRISTOPHER\", \"DANIEL\", \"PAUL\", \"MARK\", \"DONALD\", \"GEORGE\", \"KENNETH\", \"STEVEN\", \"EDWARD\", \"BRIAN\", \"RONALD\", \"ANTHONY\", \"KEVIN\", \"JASON\", \"MATTHEW\", \"GARY\", \"TIMOTHY\", \"JOSE\", \"LARRY\", \"JEFFREY\", \"FRANK\", \"SCOTT\", \"ERIC\", \"STEPHEN\", \"ANDREW\", \"RAYMOND\", \"GREGORY\", \"JOSHUA\", \"JERRY\", \"DENNIS\", \"WALTER\", \"PATRICK\", \"PETER\", \"HAROLD\", \"DOUGLAS\", \"HENRY\", \"CARL\", \"ARTHUR\", \"RYAN\", \"ROGER\", \"JOE\", \"JUAN\", \"JACK\", \"ALBERT\", \"JONATHAN\", \"JUSTIN\", \"TERRY\", \"GERALD\", \"KEITH\", \"SAMUEL\", \"WILLIE\", \"RALPH\", \"LAWRENCE\", \"NICHOLAS\", \"ROY\", \"BENJAMIN\", \"BRUCE\", \"BRANDON\", \"ADAM\", \"HARRY\", \"FRED\", \"WAYNE\", \"BILLY\", \"STEVE\", \"LOUIS\", \"JEREMY\", \"AARON\", \"RANDY\", \"HOWARD\", \"EUGENE\", \"CARLOS\", \"RUSSELL\", \"BOBBY\", \"VICTOR\", \"MARTIN\", \"ERNEST\", \"PHILLIP\", \"TODD\", \"JESSE\", \"CRAIG\", \"ALAN\", \"SHAWN\", \"CLARENCE\", \"SEAN\", \"PHILIP\", \"CHRIS\", \"JOHNNY\", \"EARL\", \"JIMMY\", \"ANTONIO\", \"DANNY\", \"BRYAN\", \"TONY\", \"LUIS\", \"MIKE\", \"STANLEY\", \"LEONARD\", \"NATHAN\", \"DALE\", \"MANUEL\", \"RODNEY\", \"CURTIS\", \"NORMAN\", \"ALLEN\", \"MARVIN\", \"VINCENT\", \"GLENN\", \"JEFFERY\", \"TRAVIS\", \"JEFF\", \"CHAD\", \"JACOB\", \"LEE\", \"MELVIN\", \"ALFRED\", \"KYLE\", \"FRANCIS\", \"BRADLEY\", \"JESUS\", \"HERBERT\", \"FREDERICK\", \"RAY\", \"JOEL\", \"EDWIN\", \"DON\", \"EDDIE\", \"RICKY\", \"TROY\", \"RANDALL\", \"BARRY\", \"ALEXANDER\", \"BERNARD\", \"MARIO\", \"LEROY\", \"FRANCISCO\", \"MARCUS\", \"MICHEAL\", \"THEODORE\", \"CLIFFORD\", \"MIGUEL\", \"OSCAR\", \"JAY\", \"JIM\", \"TOM\", \"CALVIN\", \"ALEX\", \"JON\", \"RONNIE\", \"BILL\", \"LLOYD\", \"TOMMY\", \"LEON\", \"DEREK\", \"WARREN\", \"DARRELL\", \"JEROME\", \"FLOYD\", \"LEO\", \"ALVIN\", \"TIM\", \"WESLEY\", \"GORDON\", \"DEAN\", \"GREG\", \"JORGE\", \"DUSTIN\", \"PEDRO\", \"DERRICK\", \"DAN\", \"LEWIS\", \"ZACHARY\", \"COREY\", \"HERMAN\", \"MAURICE\", \"VERNON\", \"ROBERTO\", \"CLYDE\", \"GLEN\", \"HECTOR\", \"SHANE\", \"RICARDO\", \"SAM\", \"RICK\", \"LESTER\", \"BRENT\", \"RAMON\", \"CHARLIE\", \"TYLER\", \"GILBERT\", \"GENE\"]\nvar last_names = [\"SMITH\", \"JOHNSON\", \"WILLIAMS\", \"JONES\", \"BROWN\", \"DAVIS\", \"MILLER\", \"WILSON\", \"MOORE\", \"TAYLOR\", \"ANDERSON\", \"THOMAS\", \"JACKSON\", \"WHITE\", \"HARRIS\", \"MARTIN\", \"THOMPSON\", \"GARCIA\", \"MARTINEZ\", \"ROBINSON\", \"CLARK\", \"RODRIGUEZ\", \"LEWIS\", \"LEE\", \"WALKER\", \"HALL\", \"ALLEN\", \"YOUNG\", \"HERNANDEZ\", \"KING\", \"WRIGHT\", \"LOPEZ\", \"HILL\", \"SCOTT\", \"GREEN\", \"ADAMS\", \"BAKER\", \"GONZALEZ\", \"NELSON\", \"CARTER\", \"MITCHELL\", \"PEREZ\", \"ROBERTS\", \"TURNER\", \"PHILLIPS\", \"CAMPBELL\", \"PARKER\", \"EVANS\", \"EDWARDS\", \"COLLINS\", \"STEWART\", \"SANCHEZ\", \"MORRIS\", \"ROGERS\", \"REED\", \"COOK\", \"MORGAN\", \"BELL\", \"MURPHY\", \"BAILEY\", \"RIVERA\", \"COOPER\", \"RICHARDSON\", \"COX\", \"HOWARD\", \"WARD\", \"TORRES\", \"PETERSON\", \"GRAY\", \"RAMIREZ\", \"JAMES\", \"WATSON\", \"BROOKS\", \"KELLY\", \"SANDERS\", \"PRICE\", \"BENNETT\", \"WOOD\", \"BARNES\", \"ROSS\", \"HENDERSON\", \"COLEMAN\", \"JENKINS\", \"PERRY\", \"POWELL\", \"LONG\", \"PATTERSON\", \"HUGHES\", \"FLORES\", \"WASHINGTON\", \"BUTLER\", \"SIMMONS\", \"FOSTER\", \"GONZALES\", \"BRYANT\", \"ALEXANDER\", \"RUSSELL\", \"GRIFFIN\", \"DIAZ\", \"HAYES\", \"MYERS\", \"FORD\", \"HAMILTON\", \"GRAHAM\", \"SULLIVAN\", \"WALLACE\", \"WOODS\", \"COLE\", \"WEST\", \"JORDAN\", \"OWENS\", \"REYNOLDS\", \"FISHER\", \"ELLIS\", \"HARRISON\", \"GIBSON\", \"MCDONALD\", \"CRUZ\", \"MARSHALL\", \"ORTIZ\", \"GOMEZ\", \"MURRAY\", \"FREEMAN\", \"WELLS\", \"WEBB\", \"SIMPSON\", \"STEVENS\", \"TUCKER\", \"PORTER\", \"HUNTER\", \"HICKS\", \"CRAWFORD\", \"HENRY\", \"BOYD\", \"MASON\", \"MORALES\", \"KENNEDY\", \"WARREN\", \"DIXON\", \"RAMOS\", \"REYES\", \"BURNS\", \"GORDON\", \"SHAW\", \"HOLMES\", \"RICE\", \"ROBERTSON\", \"HUNT\", \"BLACK\", \"DANIELS\", \"PALMER\", \"MILLS\", \"NICHOLS\", \"GRANT\", \"KNIGHT\", \"FERGUSON\", \"ROSE\", \"STONE\", \"HAWKINS\", \"DUNN\", \"PERKINS\", \"HUDSON\", \"SPENCER\", \"GARDNER\", \"STEPHENS\", \"PAYNE\", \"PIERCE\", \"BERRY\", \"MATTHEWS\", \"ARNOLD\", \"WAGNER\", \"WILLIS\", \"RAY\", \"WATKINS\", \"OLSON\", \"CARROLL\", \"DUNCAN\", \"SNYDER\", \"HART\", \"CUNNINGHAM\", \"BRADLEY\", \"LANE\", \"ANDREWS\", \"RUIZ\", \"HARPER\", \"FOX\", \"RILEY\", \"ARMSTRONG\", \"CARPENTER\", \"WEAVER\", \"GREENE\", \"LAWRENCE\", \"ELLIOTT\", \"CHAVEZ\", \"SIMS\", \"AUSTIN\", \"PETERS\", \"KELLEY\", \"FRANKLIN\", \"LAWSON\"]\nvar colors = [\"#001f3f\", \"#0074D9\", \"#7FDBFF\", \"#39CCCC\", \"#2ECC40\", \"#01FF70\", \"#FFDC00\", \"#FF851B\", \"#3D9970\", \"#F15152\", \"#111111\", \"#AAAAAA\", \"#DDDDDD\"]\nvar fontColors = [\"#FFFFFF\", \"#FFFFFF\", \"#111111\", \"#111111\", \"#111111\", \"#111111\", \"#111111\", \"#111111\", \"#111111\", \"#111111\", \"#FFFFFF\", \"#111111\", \"#111111\"]\nclass HumanName extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.props.address !== nextProps.address) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  getName(address) {\n    var two_hundred = ethers.utils.bigNumberify(\"200\")\n\n    var portion_1 = ethers.utils.bigNumberify(address.substr(0, 22)).toString()\n    var portion_2 = ethers.utils.bigNumberify(\"0x\" + address.substr(22, 40)).toString()\n    \n    portion_1 = ethers.utils.bigNumberify(portion_1).mod(two_hundred).toString()\n    portion_2 = ethers.utils.bigNumberify(portion_2).mod(two_hundred).toString()\n\n    if(portion_1 !== 0 && portion_2 !== 0) {\n      var initials = first_names[portion_1][0] + last_names[portion_2][0]\n      return [first_names[portion_1] + \" \" + last_names[portion_2], initials]\n    } else {\n      return [address, \"0x\"]\n    }\n  }\n\n  getColor(address) {\n    var num_colors = ethers.utils.bigNumberify(\"13\")\n\n    var long_num = ethers.utils.bigNumberify(address).toString()\n\n    var color_idx = ethers.utils.bigNumberify(long_num).mod(num_colors).toString()\n    return [colors[color_idx], fontColors[color_idx]]\n  }\n\n  render() {\n    var { address, icon_only, inactive_link } = this.props\n\n    if(!address) {\n      return (<div className=\"HumanName-circle\"></div>)\n    }\n\n    var [ name, initials ] = this.getName(address)\n    var [ backgroundColor, fontColor ] = this.getColor(address)\n    name = (<div className=\"HumanName-name\">{name}</div>)\n    var color = {\n      \"backgroundColor\": backgroundColor,\n      \"color\": fontColor\n    }\n    var onClick = () => window.open('https://etherscan.io/address/' + address, '_blank')\n    if(inactive_link) {\n      onClick = null\n    }\n\n    var icon = (<div className=\"HumanName-circle\" style={color}>{initials}</div>)\n    var final = (<span className=\"HumanName\" title={address} onClick={onClick}>{icon} {name}</span>)\n    if( icon_only ) {\n      final = (<span className=\"HumanName\" title={address} onClick={onClick}>{icon}</span>)\n    }\n    return final\n\n  }\n}\n\nexport default HumanName\n","import React, { Component } from 'react'\nimport { Grid, Icon } from 'semantic-ui-react'\nimport { AutoSizer, List } from 'react-virtualized'\n\nimport HumanName from '../../utils/humanname/humanname'\n\nimport './orderlistV2.css'\n\nclass OrderListV2 extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n\n    this.max_order = 1\n    this.orders = []\n  }\n\n  componentDidMount() {\n  }\n\n  getMax(orders) {\n    return Math.max.apply(Math, orders.map(function(o) { return o.curr_1_amt }))\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevProps.buy_orders.length === 0 || prevProps.sell_orders.length === 0) {\n\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextProps.buy_orders !== this.props.buy_orders || nextProps.sell_orders !== this.props.sell_orders || nextProps.last_order !== this.props.last_order) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  rowRenderer({index, key, style}) {\n    var item = this.orders[index]\n    if(item.maker === \"0\") {\n      var { last_order } = this.props\n      let price = \"...\"\n      if(last_order[\"price\"]) {\n        price = last_order[\"type\"] === \"BUY\" ? (<span className=\"green\">{this.numberWithCommas(Math.round(last_order[\"price\"] * 100)/100) + \"▲\"}</span>) : (<span className=\"red\">{this.numberWithCommas(Math.round(last_order[\"price\"] * 100)/100)  + \"▼\" }</span>)\n      }\n      return (\n        <div id=\"OrderListV2-table-middle\" key={key} style={style} >\n          <Grid padded={'horizontally'}>\n            <Grid.Column computer={2} tablet={2} mobile={3}>\n            </Grid.Column>\n            <Grid.Column computer={4} tablet={4} mobile={4}>\n              {price}\n            </Grid.Column>\n            <Grid.Column computer={5} tablet={5} mobile={4}>\n            </Grid.Column>\n            <Grid.Column computer={5} tablet={5} mobile={5}>\n              Last Price\n            </Grid.Column>\n          </Grid>\n        </div>\n      )      \n    }\n\n    var { account } = this.props\n    var type = item[\"type\"]\n    var ratio = item[\"curr_1_amt\"]/this.max_order * 100\n    var direction = \"right\"\n    var color_0 = \"rgba(255, 0, 0, 0.2)\"\n    var color_1 = \"rgba(0,0,0,0)\"\n    if(type === \"BUY\") {\n      color_0 = \"rgba(0, 255, 0, 0.1)\"\n      color_1 = \"rgba(0, 0, 0, 0)\"\n    }\n\n    var color = index % 2 === 0 ? `#182026` : `#1c262c`\n    if(account === item[\"maker\"]) {\n      color = `#3f4a50`\n    }\n\n    var custom_style = { \n      backgroundColor: color,\n      backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n      backgroundSize: `calc(${ratio}%) 100%`,\n      backgroundRepeat: `no-repeat`\n    }\n\n    style = Object.assign(custom_style, style)\n    let price = item[\"type\"] === \"BUY\" ? (<span className=\"green\">{this.numberWithCommas(Math.round(item[\"price\"] * 100)/100)}</span>) : (<span className=\"red\">{this.numberWithCommas(Math.round(item[\"price\"] * 100)/100)}</span>)\n    return (\n      <div className=\"OrderListV2-table-entry\" key={key} style={style} onClick={() => this.props.setSidebar(item) } >\n        <Grid padded={'horizontally'} verticalAlign={'middle'}>\n          <Grid.Column computer={2} tablet={2} mobile={3}>\n            <HumanName inactive_link icon_only address={item[\"maker\"]} />\n          </Grid.Column>\n          <Grid.Column computer={4} tablet={4} mobile={4}>\n            {price}\n          </Grid.Column>\n          <Grid.Column computer={5} tablet={5} mobile={4}>\n            {this.numberWithCommas(item[\"curr_0_amt\"])}\n          </Grid.Column>\n          <Grid.Column computer={5} tablet={5} mobile={5}>\n            {this.numberWithCommas(item[\"curr_1_amt\"])}\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n\n  render() {\n    // var { orders } = this.state\n    var { currencies, buy_orders, sell_orders } = this.props\n\n    var sell_orders_reverse = sell_orders.slice(0)\n    sell_orders_reverse.reverse()\n    sell_orders_reverse.push({\n      \"maker\": \"0\",\n      \"price\": \"0\",\n      \"curr_0_amt\": \"0\",\n      \"curr_1_amt\": \"0\"\n    })\n\n    if(sell_orders.length === 0 && buy_orders.length === 0) {\n      return (\n        <div className=\"OrderListV2\">\n          <div className=\"OrderListV2-loading\">Loading...</div>\n        </div>\n      )\n    }\n\n    this.max_order = Math.max(this.getMax(sell_orders), this.getMax(buy_orders))\n    this.orders = sell_orders_reverse.concat(buy_orders)\n\n    return (\n      <div className=\"OrderListV2\">\n        <Grid id=\"OrderListV2-table-header\">\n          <Grid.Column computer={2} tablet={2} mobile={3}>\n            <Icon name=\"user circle\" size=\"large\" />\n          </Grid.Column>\n          <Grid.Column computer={4} tablet={4} mobile={4}>\n            Price\n          </Grid.Column>\n          <Grid.Column computer={5} tablet={5} mobile={4}>\n            {currencies[0]}\n          </Grid.Column>\n          <Grid.Column computer={5} tablet={5} mobile={5}>\n            {currencies[1]}\n          </Grid.Column>\n        </Grid>\n        <AutoSizer style={{outline: 'none'}}>\n          {({ height, width }) => (\n            <List\n              width={width}\n              height={height - 50}\n              rowHeight={40}\n              rowCount={this.orders.length}\n              rowRenderer={(props) => this.rowRenderer(props)}\n              scrollToIndex={sell_orders_reverse.length + 6}\n              className=\"OrderListV2-infinite-list\"\n            >\n            </List>\n          )}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n\nexport default OrderListV2","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\nimport { Input, Form, Button, Loader } from 'semantic-ui-react'\n\nimport './limitorder.css'\n\nclass LimitOrder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      init: false,\n      error: false,\n      success: false,\n      price: '',\n      amount_0: '',\n      ui_amount_0: '',\n      amount_1: '',\n      ui_amount_1: '',\n      bignumbers: [],\n      last_price: ''\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n    this.flashError = this.flashError.bind(this)\n  }\n\n  componentDidMount() {\n    this.generateBigNumbers()\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = ethers.utils.bigNumberify(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  // Main function that interfaces and writes to the blockchain.\n  // This is the most important function here.\n  async handleSubmit(type) {\n    // Set loading to true to update UI\n    this.setState({loading: true, error: false, success: false})\n\n    var { currencies, options } = this.props\n\n    // Get the important info for the transaction\n    var amount_0 = this.state.amount_0\n    var amount_1 = this.state.amount_1\n    var curr_gem_0 = options.contracts[currencies[0]].address\n    var curr_gem_1 = options.contracts[currencies[1]].address\n    var data = {}\n\n    // Set data to the correct value depending on if the order is a BUY or SELL\n    // Basically you just flip the currency 0 and currency 1\n    if(type === \"BUY\") {\n      data = {\n        pay_amt: amount_1,\n        pay_gem: curr_gem_1,\n        buy_amt: amount_0,\n        buy_gem: curr_gem_0\n      }\n    } else if(type === \"SELL\") {\n      data = {\n        pay_amt: amount_0,\n        pay_gem: curr_gem_0,\n        buy_amt: amount_1,\n        buy_gem: curr_gem_1\n      }\n    } else {\n      return\n    }\n\n    console.log(data)\n\n    try {\n      var tx = await options.contracts.Market.offer(data.pay_amt, data.pay_gem, data.buy_amt, data.buy_gem, 1)\n      await tx.wait()\n      this.flashSuccess()\n    } catch (error) {\n      console.log(error)\n      this.flashError()\n    }\n  }\n\n  flashSuccess() {\n    this.setState({ success : true, loading: false })\n    setTimeout(() => this.setState({ success: false, price: '', amount_0: '0', ui_amount_0: '', amount_1: '0', ui_amount_1: '' }), 1500)\n  }\n\n  flashError() {\n    this.setState({ error: true, loading: false })\n    setTimeout(() => this.setState({ error: false }), 1500)\n  }\n\n  handlePriceChange(value) {\n    if(/\\S/.test(value) && this.state.ui_amount_0 !== \"\") {\n      var price = value\n      var ui_amount_1 = this.state.ui_amount_0 * price\n      var amount_1_bn = ethers.utils.parseUnits(ui_amount_1.toString(), 'ether')\n      this.setState({ price: price, amount_1: amount_1_bn.toString(), ui_amount_1: ui_amount_1.toString() })\n    } else {\n      this.setState({ price: value, amount_1: '0', ui_amount_1: '' })    \n    }\n  }\n\n  handleAmountChange(index, value) {\n    if(/\\S/.test(value) && this.state.price !== \"\") {\n      var price = this.state.price\n      var ui_amount_0 = null\n      var ui_amount_1 = null\n      var amount_0_bn = null\n      var amount_1_bn = null\n\n      if(index === 0) {\n        ui_amount_0 = value\n        amount_0_bn = ethers.utils.bigNumberify(ethers.utils.parseUnits(ui_amount_0.toString(), 'ether'))\n        ui_amount_1 = ui_amount_0 * price\n        amount_1_bn = ethers.utils.bigNumberify(ethers.utils.parseUnits(ui_amount_1.toString(), 'ether'))\n      } else if(index === 1) {\n        ui_amount_1 = value\n        amount_1_bn = ethers.utils.bigNumberify(ethers.utils.parseUnits(ui_amount_1.toString(), 'ether'))\n        ui_amount_0 = ui_amount_1 / price\n        amount_0_bn = ethers.utils.bigNumberify(ethers.utils.parseUnits(ui_amount_0.toString(), 'ether'))\n      } else {\n        return\n      }\n\n      this.setState({ \n        amount_0: amount_0_bn.toString(), \n        ui_amount_0: ui_amount_0, \n        amount_1: amount_1_bn.toString(),\n        ui_amount_1: ui_amount_1,\n      })\n    } else {\n      this.setState({\n        amount_0: '0',\n        ui_amount_0: '',\n        amount_1: '0',\n        ui_amount_1: ''\n      })\n    }\n  }\n\n  handleAmountPercentageChange(index, value) {\n    var price = this.state.price\n\n    var ui_amount_0 = null\n    var ui_amount_1 = null\n    var amount_0_bn = null\n    var amount_1_bn = null\n    var price_bn = ethers.utils.bigNumberify(ethers.utils.parseUnits(price.toString(), 'ether'))\n    var one_bn = ethers.utils.bigNumberify(ethers.utils.parseUnits('1'), 'ether')\n\n    if(index === 0) {\n      amount_0_bn = value\n      amount_1_bn = amount_0_bn.mul(price_bn).div(one_bn)\n    } else if(index === 1) {\n      amount_1_bn = value\n      amount_0_bn = amount_1_bn.mul(one_bn).div(price_bn)\n    } else {\n      return\n    }\n\n    try {\n      ui_amount_0 = ethers.utils.formatUnits(amount_0_bn.toString(), 'ether')\n    } catch(err) {\n      console.log(err)\n      ui_amount_0 = ethers.utils.formatUnits(\"0\", 'ether')\n    }\n\n    try {\n      ui_amount_1 = ethers.utils.formatUnits(amount_1_bn.toString(), 'ether')\n    } catch(err) {\n      console.log(err)\n      ui_amount_1 = ethers.utils.formatUnits(\"0\", 'ether')\n    }\n\n    this.setState({\n      amount_0: amount_0_bn.toString(),\n      ui_amount_0: ui_amount_0,\n      amount_1: amount_1_bn.toString(),\n      ui_amount_1: ui_amount_1\n    })\n  }\n\n  render() {\n    var { price, amount_0, amount_1, ui_amount_0, ui_amount_1, bignumbers, loading, success, error } = this.state\n    var { currencies, last_price, balances } = this.props\n    \n    var can_buy = false\n    var can_sell = false\n    \n    var curr_0_balance = ethers.utils.bigNumberify(balances[0])\n    var curr_1_balance = ethers.utils.bigNumberify(balances[1])\n    \n    var amount_0_bn = ethers.utils.bigNumberify(amount_0)\n    var amount_1_bn = ethers.utils.bigNumberify(amount_1)\n\n    if(price !== \"\" && curr_0_balance.gte(amount_0_bn) && amount_0_bn.gt(ethers.utils.bigNumberify(\"1000\"))) {\n      can_sell = true\n    }\n    \n    if(price !== \"\" && curr_1_balance.gte(amount_1_bn) && amount_1_bn.gt(ethers.utils.bigNumberify(\"1000\"))) {\n      can_buy = true\n    }\n\n    var side_text = \"\"\n    if(loading) {\n      side_text = (<span className=\"LimitOrder-color\"><Loader active inline size=\"small\"/> LOADING...</span>)\n    }\n    if(error) {\n      side_text = (<span className=\"red LimitOrder-color\">FAILED</span>)\n    }\n    if(success) {\n      side_text = (<span className=\"green LimitOrder-color\">SUCCESS</span>)\n    }\n\n    return (\n      <div className=\"LimitOrder\">\n        <Form size='tiny'>\n          <div className=\"LimitOrder-headers\">Price</div>\n          <Form.Field id=\"LimitOrder-price\">\n            <Input\n              label={{ basic: true, content: currencies[1] + \" / \" + currencies[0]  }}\n              labelPosition='right'\n              placeholder='Enter Price...'\n              value={price}\n              onChange={(e) => { this.handlePriceChange(e.target.value) }}\n            />\n            <span className=\"LimitOrder-currentPrice\" onClick={() => this.handlePriceChange(last_price) } >Current Market Price</span>\n          </Form.Field>\n          <hr />\n          <div className=\"LimitOrder-headers\" id=\"LimitOrder-amount-header\">Amounts</div>\n            <Form.Field>\n              <Input\n                label={{ basic: true, content: currencies[0] }}\n                labelPosition='right'\n                placeholder='Enter Amount...'\n                disabled={price === ''}\n                value={ui_amount_0}\n                onChange={(e) => { this.handleAmountChange(0, e.target.value) }}\n                className=\"LimitOrder-amount-input\"\n              />\n              <Button.Group className=\"LimitOrder-mini-buttons\" size='mini' basic inverted>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[4]))} >25%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[2]))} >50%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance) } >100%</Button>\n              </Button.Group>\n            </Form.Field>\n            <Form.Field>\n              <Input\n                label={{ basic: true, content: currencies[1] }}\n                labelPosition='right'\n                placeholder='Enter Amount...'\n                disabled={price === ''}\n                value={ui_amount_1}\n                onChange={(e) => { this.handleAmountChange(1, e.target.value) }}\n                className=\"LimitOrder-amount-input\"\n              />\n              <Button.Group className=\"LimitOrder-mini-buttons\" size='mini' basic inverted>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[4]))} >25%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[2]))} >50%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance) } >100%</Button>\n              </Button.Group>\n            </Form.Field>\n          <Button className=\"LimitOrder-button\" color='green' disabled={!can_buy || loading} onClick={() => this.handleSubmit(\"BUY\")} >BUY {currencies[0]}</Button>\n          <Button className=\"LimitOrder-button\" color='red' disabled={!can_sell || loading} onClick={() => this.handleSubmit(\"SELL\")} >SELL {currencies[0]}</Button>\n          {side_text}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default LimitOrder\n","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\nimport { Input, Form, Button, Loader } from 'semantic-ui-react'\n\nimport './marketorder.css'\n\nclass MarketOrder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: [false, false],\n      error: [false, false],\n      success: [false, false],\n      amounts: ['0', '0'],\n      ui_amounts: ['', ''],\n      expected_price: ['', ''],\n      expected_amount: ['0', '0'],\n      bignumbers: []\n    }\n\n    this.handleMarketBuy = this.handleMarketBuy.bind(this)\n    this.handleMarketSell = this.handleMarketSell.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n    this.flashError = this.flashError.bind(this)\n  }\n\n  componentDidMount() {\n    this.generateBigNumbers()\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = ethers.utils.bigNumberify(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  async handleMarketBuy() {\n    // Set loading to true to update UI\n    var { loading, error, success } = this.state\n    loading[1] = true\n    error[1] = false\n    success[1] = false\n    this.setState({ loading , error, success })\n    \n    var { amounts, expected_amount } = this.state\n    var { currencies, options } = this.props\n    \n    var curr_gem_0 = options.contracts[currencies[0]].address\n    var curr_gem_1 = options.contracts[currencies[1]].address\n\n    var min_expected_amount = ethers.utils.bigNumberify(\"98\").mul(expected_amount[1]).div(ethers.utils.bigNumberify(\"100\"))\n\n    var data = {\n      pay_gem: curr_gem_1,\n      pay_amt: amounts[1],\n      buy_gem: curr_gem_0,\n      min_fill_amount: min_expected_amount.toString()\n    }\n\n    console.log(data)\n\n    try {\n      var tx = await options.contracts.Market.sellAllAmount(data[\"pay_gem\"], data[\"pay_amt\"], data[\"buy_gem\"], data[\"min_fill_amount\"])\n      await tx.wait()\n      this.flashSuccess(1)\n    } catch (error) {\n      this.flashError(1)\n    }\n  }\n\n  async handleMarketSell() {\n    // Set loading to true to update UI\n    var { loading, error, success } = this.state\n    loading[0] = true\n    error[0] = false\n    success[0] = false\n    this.setState({ loading , error, success })\n\n    var { amounts, expected_amount } = this.state\n    var { currencies, options } = this.props\n\n    var curr_gem_0 = options.contracts[currencies[0]].address\n    var curr_gem_1 = options.contracts[currencies[1]].address\n\n    var min_expected_amount = ethers.utils.bigNumberify(\"98\").mul(expected_amount[0]).div(ethers.utils.bigNumberify(\"100\"))\n\n    var data = {\n      pay_gem: curr_gem_0,\n      pay_amt: amounts[0],\n      buy_gem: curr_gem_1,\n      min_fill_amount: min_expected_amount.toString()\n    }\n\n    console.log(data)\n\n    try {\n      var tx = await options.contracts.Market.sellAllAmount(data[\"pay_gem\"], data[\"pay_amt\"], data[\"buy_gem\"], data[\"min_fill_amount\"])\n      await tx.wait()\n      this.flashSuccess(0)\n    } catch (error) {\n      this.flashError(0)\n    }\n  }\n\n  flashSuccess(index) {\n    var { loading, success, error } = this.state\n    loading[index] = false\n    success[index] = true\n    error[index] = false\n    this.setState({ loading, success, error })\n    setTimeout(() => this.reset(index), 1500)\n  }\n\n  flashError(index) {\n    var { loading, success, error } = this.state\n    loading[index] = false\n    success[index] = false\n    error[index] = true\n    this.setState({ loading, success, error })\n    setTimeout(() => {\n      var { loading, success, error } = this.state\n      loading[index] = false\n      success[index] = false\n      error[index] = false\n      this.setState({ error })\n    }, 1500)\n  }\n\n  reset(index) {\n    var { loading, success, error, amounts, ui_amounts } = this.state\n    loading[index] = false\n    success[index] = false\n    error[index] = false\n    amounts[index] = \"0\"\n    ui_amounts[index] = \"\"\n    this.setState({ loading, success, error, amounts, ui_amounts })\n  }\n\n  async setExpectedAmount(index) {\n    var { amounts, expected_amount, expected_price } = this.state\n    var { currencies, options } = this.props\n\n    var curr_gem_0 = options.contracts[currencies[0]].address\n    var curr_gem_1 = options.contracts[currencies[1]].address\n\n    var will_receive = \"0\"\n    var giving = amounts[index]\n\n    if(index === 0) {\n      will_receive = await options.contracts.Market.getBuyAmount(curr_gem_1, curr_gem_0, giving)\n    } else if(index === 1) {\n      will_receive = await options.contracts.Market.getBuyAmount(curr_gem_0, curr_gem_1, giving)\n    }\n\n    if(will_receive !== \"0\" && giving !== \"0\") {\n      will_receive = ethers.utils.bigNumberify(will_receive)\n      giving = ethers.utils.bigNumberify(giving)\n      var one = ethers.utils.bigNumberify(ethers.utils.parseUnits('1', 'ether'))\n\n      var price = one.mul(will_receive).div(giving)\n      if(index === 1) {\n        price = one.mul(giving).div(will_receive)\n      }\n      price = Math.round(ethers.utils.formatUnits(price.toString(), 'ether') * 1000) / 1000\n\n      expected_amount[index] = will_receive\n      expected_price[index] = price\n    } else {\n      expected_amount[index] = \"0\"\n      expected_price[index] = \"\"\n    }\n    this.setState({ expected_amount, expected_price })\n\n  }\n\n  handleAmountChange(index, value) {\n    var { amounts, ui_amounts } = this.state\n\n    var new_amounts = amounts.slice(0)\n    var new_ui_amounts = ui_amounts.slice(0)\n\n    try {\n      if(/\\S/.test(value)) {\n        var ui_amount = value\n        var amount_bn = ethers.utils.bigNumberify(ethers.utils.parseUnits(ui_amount.toString(), 'ether'))\n\n        new_amounts[index] = amount_bn.toString()\n        new_ui_amounts[index] = ui_amount.toString()\n\n        this.setState({ \n          amounts: new_amounts,\n          ui_amounts: new_ui_amounts\n        })\n      } else {\n        new_amounts[index] = '0'\n        new_ui_amounts[index] = ''\n      }\n    } catch(err) {\n      console.log(err)\n      new_amounts[index] = '0'\n      new_ui_amounts[index] = ''\n    }\n\n    this.setState({\n      amounts: new_amounts,\n      ui_amounts: new_ui_amounts\n    }, () => {\n      this.setExpectedAmount(index)\n    })\n  }\n\n  handleAmountPercentageChange(index, value) {\n    var { amounts, ui_amounts } = this.state\n\n    var amount_bn = value\n    var ui_amount = ethers.utils.formatUnits(\"0\", 'ether')\n    try {\n      ui_amount = ethers.utils.formatUnits(amount_bn.toString(), 'ether')\n    } catch(err) {\n      console.log(err)\n    }\n\n    var new_amounts = amounts.slice(0)\n    var new_ui_amounts = ui_amounts.slice(0)\n\n    new_amounts[index] = amount_bn.toString()\n    new_ui_amounts[index] = ui_amount.toString()\n\n    this.setState({ \n      amounts: new_amounts,\n      ui_amounts: new_ui_amounts\n    }, () => {\n      this.setExpectedAmount(index)\n    })\n  }\n\n  render() {\n    var { amounts, ui_amounts, expected_price, bignumbers, loading, success, error } = this.state\n    var { currencies, balances } = this.props\n    \n    var can_buy = false\n    var can_sell = false\n    \n    var curr_0_balance = ethers.utils.bigNumberify(balances[0])\n    var curr_1_balance = ethers.utils.bigNumberify(balances[1])\n    \n    var amount_0_bn = ethers.utils.bigNumberify(amounts[0])\n    var amount_1_bn = ethers.utils.bigNumberify(amounts[1])\n\n    if(curr_0_balance.gte(amount_0_bn) && amount_0_bn.gt(ethers.utils.bigNumberify(\"1000\"))) {\n      can_sell = true\n    }\n    \n    if(curr_1_balance.gte(amount_1_bn) && amount_1_bn.gt(ethers.utils.bigNumberify(\"1000\"))) {\n      can_buy = true\n    }\n\n    var side_texts = [\"\", \"\"]\n    for(var i = 0; i < 2; i++) {\n      if(loading[i]) {\n        side_texts[i] = (<span className=\"MarketOrder-color\"><Loader active inline size=\"small\"/> LOADING...</span>)\n      }\n      if(error[i]) {\n        side_texts[i] = (<span className=\"red MarketOrder-color\">FAILED</span>)\n      }\n      if(success[i]) {\n        side_texts[i] = (<span className=\"green MarketOrder-color\">SUCCESS</span>)\n      }\n    }\n\n    return (\n      <div className=\"MarketOrder\">\n        <div className=\"MarketOrder-pane\">\n          <div className=\"MarketOrder-main-header\">Market <span className=\"green\">BUY</span></div>\n          <div className=\"MarketOrder-small-note\">Note: Orders will cancel if slippage >2%</div>\n          <div className=\"MarketOrder-sub-header\">Est. Price: {expected_price[1]} <span className=\"MarketOrder-tiny-note\">{currencies[1]}/{currencies[0]}</span></div>\n          <Form size='tiny'>\n            <div className=\"MarketOrder-headers\"><span className=\"green\">Buy</span> Allowance</div>\n            <Form.Group widths='equal'>\n              <Form.Field>\n                <Input\n                  label={{ basic: true, content: currencies[1] }}\n                  labelPosition='right'\n                  placeholder='Enter Amount...'\n                  value={ui_amounts[1]}\n                  onChange={(e) => { this.handleAmountChange(1, e.target.value) }}\n                  className=\"MarketOrder-amount-input\"\n                />\n                <Button.Group className=\"MarketOrder-mini-buttons\" size='mini' basic inverted>\n                  <Button onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                  <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[4]))} >25%</Button>\n                  <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[2]))} >50%</Button>\n                  <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                  <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance) } >100%</Button>\n                </Button.Group>\n              </Form.Field>\n            </Form.Group>\n            <Button className=\"MarketOrder-button\" color='green' disabled={!can_buy || loading[1] || error[1]} onClick={this.handleMarketBuy} >BUY {currencies[0]}</Button>\n            {side_texts[1]}\n          </Form>\n        </div>\n        <hr />\n        <div className=\"MarketOrder-pane\">\n          <div className=\"MarketOrder-main-header\">Market <span className=\"red\">SELL</span></div>\n          <div className=\"MarketOrder-small-note\">Note: Orders will cancel if slippage >2%</div>\n          <div className=\"MarketOrder-sub-header\">Est. Price: {expected_price[0]} <span className=\"MarketOrder-tiny-note\">{currencies[1]}/{currencies[0]}</span></div>\n          <Form size='tiny'>\n            <div className=\"MarketOrder-headers\"><span className=\"red\">Sell</span> Allowance</div>\n            <Form.Group widths='equal'>\n              <Form.Field>\n                <Input\n                  label={{ basic: true, content: currencies[0] }}\n                  labelPosition='right'\n                  placeholder='Enter Amount...'\n                  value={ui_amounts[0]}\n                  onChange={(e) => { this.handleAmountChange(0, e.target.value) }}\n                  className=\"MarketOrder-amount-input\"\n                />\n                <Button.Group className=\"MarketOrder-mini-buttons\" size='mini' basic inverted>\n                  <Button onClick={() => this.handleAmountChange(0, '') } >0%</Button>\n                  <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[4]))} >25%</Button>\n                  <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[2]))} >50%</Button>\n                  <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                  <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance) } >100%</Button>\n                </Button.Group>\n              </Form.Field>\n            </Form.Group>\n            <Button className=\"MarketOrder-button\" color='red' disabled={!can_sell || loading[0] || error[0]} onClick={this.handleMarketSell} >SELL {currencies[0]}</Button>\n            {side_texts[0]}\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MarketOrder\n","import React, { Component } from 'react'\nimport { Table, Button } from 'semantic-ui-react'\n\nimport './myorders.css'\n\nclass MyOrders extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n\n  }\n\n  componentDidMount() {\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if(nextState.orders !== this.state.orders) {\n  //     return true\n  //   } else {\n  //     return false\n  //   }\n  // }\n\n  getMyOrders() {\n    var { orders, account } = this.props\n    var myOrders = []\n    for(var i = 0; i < orders.length; i++) {\n      if(orders[i][\"maker\"] === account) {\n        myOrders.push(orders[i])\n      }\n    }\n\n    return myOrders\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  async cancelOrder(id) {\n    var { Market } = this.props.options.contracts\n    console.log(\"CANCEL ORDER \" + id)\n    try {\n      var tx = await Market.cancel(id)\n      await tx.wait()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  render() {\n    var { currencies } = this.props\n\n    var orders_table = null\n    var background_item = null\n    var orders = this.getMyOrders()\n\n    if(orders.length === 0) {\n      background_item = (<div id=\"MyOrders-empty\">NO ORDERS</div>)\n    } else {\n      orders_table = (<Table.Body id=\"MyOrders-tableBody\">\n            {orders.map((item, index) => {\n              var price = item[\"type\"] === \"BUY\" ? (<span className=\"green MyOrders-color\">{this.numberWithCommas(item[\"price\"])}</span>) : (<span className=\"red MyOrders-color\">{this.numberWithCommas(item[\"price\"])}</span>)\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell  textAlign='left'>\n                    <div className='MyOrders-table-entry'><Button className=\"MyOrders-button\" color='red' size='mini' inverted onClick={() => {this.cancelOrder(item[\"id\"])}}>CANCEL</Button></div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{price}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"curr_0_amt\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"curr_1_amt\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MyOrders\">\n        <Table selectable striped basic celled unstackable columns={5} textAlign='left' id=\"MyOrders-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Action</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { orders_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MyOrders\n","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { BarSeries, CandlestickSeries, LineSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { CrossHairCursor, CurrentCoordinate } from \"react-stockcharts/lib/coordinates\";\nimport { OHLCTooltip, MovingAverageTooltip } from \"react-stockcharts/lib/tooltip\";\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\" \nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last } from \"react-stockcharts/lib/utils\";\nimport { ema } from \"react-stockcharts/lib/indicator\";\n\nimport './chart.css'\n\nconst candlesAppearance = {\n  wickStroke: \"#7a8692\",\n  fill: function fill(d) {\n    return d.close > d.open ? \"rgba(0, 255, 0, 0.5)\" : \"rgba(255, 0, 0, 0.5)\";\n  },\n  widthRatio: 0.8,\n  opacity: 1,\n}\n\nclass CandleChart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillUnmount() {\n  }\n\n  componentWillMount() {\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.props.orders.length !== nextProps.orders.length) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  buildChartPoints(orders) {\n    var data = []\n\n    var first_timestamp = orders[orders.length - 1]['raw_timestamp']\n    first_timestamp = first_timestamp - (first_timestamp % (3600000/4))\n\n    var curr_candle = {\n      date: new Date(first_timestamp),\n      open: orders[orders.length-1]['price'],\n      high: orders[orders.length-1]['price'],\n      low: orders[orders.length-1]['price'],\n      close: orders[orders.length-1]['price'],\n      volume: parseFloat(ethers.utils.formatUnits(orders[orders.length-1]['curr_1'], 'ether'))\n    }\n    var end_timestamp = first_timestamp + (3600000/4)\n    for(var i = orders.length-2; i >= 0; i--) {\n      var order = orders[i]\n      if(order[\"raw_timestamp\"] < end_timestamp) {\n        curr_candle['volume'] += parseFloat(ethers.utils.formatUnits(order['curr_1'], 'ether'))\n        curr_candle['close'] = order['price']\n        if(order['price'] > curr_candle['high']) {\n          curr_candle['high'] = order['price']\n        } else if(order['price'] < curr_candle['low']) {\n          curr_candle['low'] = order['price']\n        }\n      } else {\n        data.push(curr_candle)\n        curr_candle = {\n          date: new Date(end_timestamp),\n          open: curr_candle['close'],\n          high: Math.max(order['price'], curr_candle['close']),\n          low: Math.min(order['price'], curr_candle['close']),\n          close: order['price'],\n          volume: parseFloat(ethers.utils.formatUnits(order['curr_1'], 'ether'))\n        }\n        end_timestamp = end_timestamp + (3600000/4)\n      }\n    }\n    return data\n  }\n\n  render() {\n    var { width, ratio, orders } = this.props\n\n    var chart = <div id=\"CandleChart-loading\">Loading...</div>\n    if(orders.length > 0) {\n      var initialData = this.buildChartPoints(orders)\n      const ema10 = ema()\n        .options({\n          windowSize: 10, // optional will default to 10\n          sourcePath: \"close\", // optional will default to close as the source\n        })\n        .skipUndefined(true) // defaults to true\n        .merge((d, c) => {d.ema10 = c;}) // Required, if not provided, log a error\n        .accessor(d => d.ema10) // Required, if not provided, log an error during calculation\n        .stroke(\"#ce4200\"); // Optional\n      const ema50 = ema()\n        .options({\n          windowSize: 50, // optional will default to 10\n          sourcePath: \"close\", // optional will default to close as the source\n        })\n        .skipUndefined(true) // defaults to true\n        .merge((d, c) => {d.ema50 = c;}) // Required, if not provided, log a error\n        .accessor(d => d.ema50) // Required, if not provided, log an error during calculation\n        .stroke(\"blue\"); // Optional\n      const calculatedData = ema50(ema10(initialData))\n\n      const margin = { left: 50, right: 60, top: 30, bottom: 50 }\n      const height = 500\n      var gridHeight = height - margin.top - margin.bottom;\n      var gridWidth = width - margin.left - margin.right;\n      var showGrid = true;\n      var yGrid = showGrid ? { \n          innerTickSize: -1 * gridWidth,\n          tickStrokeDasharray: 'Solid',\n          tickStrokeOpacity: 0.2,\n          tickStrokeWidth: 1\n      } : {};\n      var xGrid = showGrid ? { \n          innerTickSize: -1 * gridHeight,\n          tickStrokeDasharray: 'Solid',\n          tickStrokeOpacity: 0.2,\n          tickStrokeWidth: 1\n      } : {};\n      const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor( d => d.date )\n      const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider( calculatedData )\n      const start = xAccessor(last(data))\n      const end = xAccessor(data[Math.max(0, data.length - 100)])\n      const xExtents = [start, end]\n\n      chart = (\n        <ChartCanvas\n          height={height}\n          ratio={ratio}\n          width={width}\n          margin={margin}\n          type=\"hybrid\"\n          seriesName=\"Data\"\n          data={data}\n          xScale={xScale}\n          xAccessor={xAccessor}\n          displayXAccessor={displayXAccessor}\n          xExtents={xExtents}\n          clamp={true}\n        >\n          <Chart id={1} height={400} yExtents={[d => [d.high+3, d.low-3], ema10.accessor(), ema50.accessor()]}>\n            <YAxis axisAt=\"right\" orient=\"right\" ticks={10} stroke=\"#9aa3ad\" tickStroke=\"#9aa3ad\" {...yGrid} />\n            <CandlestickSeries {...candlesAppearance} />\n            <LineSeries yAccessor={ema10.accessor()} stroke={ema10.stroke()}/>\n            <LineSeries yAccessor={ema50.accessor()} stroke={ema50.stroke()}/>\n            <CurrentCoordinate yAccessor={ema10.accessor()} fill={ema10.stroke()} />\n            <CurrentCoordinate yAccessor={ema50.accessor()} fill={ema50.stroke()} />\n            <OHLCTooltip origin={[10, 10]} xDisplayFormat={timeFormat(\"%m-%d-%y %I:%M %p\")} textFill=\"#9aa3ad\" />\n            <MovingAverageTooltip\n              origin={[10, 25]}\n              textFill=\"#9aa3ad\"\n              options={[\n                {\n                  yAccessor: ema10.accessor(),\n                  type: \"EMA\",\n                  stroke: ema10.stroke(),\n                  windowSize: ema10.options().windowSize,\n                  echo: \"some echo here\",\n                },\n                {\n                  yAccessor: ema50.accessor(),\n                  type: \"EMA\",\n                  stroke: ema50.stroke(),\n                  windowSize: ema50.options().windowSize,\n                  echo: \"some echo here\",\n                },\n              ]}\n            />\n          </Chart>\n          <Chart id={2} origin={(w, h) => [0, h - 100]} height={100} yExtents={d => d.volume}>\n            <XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"#9aa3ad\" tickStroke=\"#9aa3ad\" {...xGrid} />\n            <YAxis axisAt=\"left\" orient=\"left\" ticks={5} stroke=\"#9aa3ad\" tickStroke=\"#9aa3ad\" tickFormat={format(\".2s\")} />\n            <BarSeries\n              yAccessor={d => d.volume}\n              fill={d => (d.close > d.open ? \"rgba(0, 255, 0, 0.2)\" : \"rgba(255, 0, 0, 0.3)\")}\n            />\n          </Chart>\n          <CrossHairCursor stroke=\"#9aa3ad\" opacity={1} />\n        </ChartCanvas>\n      )\n    }\n    return (\n      <div className=\"CandleChart\">\n        {chart}\n      </div>\n    );\n  }\n}\n\nCandleChart = fitWidth(CandleChart);\nexport default CandleChart","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\nimport { Grid, List } from 'semantic-ui-react'\nimport CandleChart from './chart/chart'\n\nimport './stats.css'\n\nclass Stats extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n\n    this.buildStat = this.buildStat.bind(this)\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.props.orders.length !== nextProps.orders.length) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  updateStats() {\n    var users = {}\n    var { orders } = this.props\n\n    if(orders.length === 0) {\n      return {\n        num_users: '...',\n        num_buys: '...',\n        num_sells: '...',\n        buy_volume: '...',\n        sell_volume: '...',\n        last_price: '...',\n        last_type: '...'\n      }\n    }\n\n    var new_stats = {\n      num_users: 0,\n      num_buys: 0,\n      num_sells: 0,\n      buy_volume: 0.0,\n      sell_volume: 0.0,\n      last_price: 0,\n      last_type: \"BUY\"\n    }\n\n    for(var i = 0; i < orders.length; i++) {\n      var order = orders[i]\n\n      // Check if maker is in user list\n      if(!(order[\"maker\"] in users)) {\n        users[order[\"maker\"]] = 1\n        new_stats[\"num_users\"] += 1\n      }\n\n      // Check if taker is in user list\n      if(!(order[\"taker\"] in users)) {\n        users[order[\"taker\"]] = 1\n        new_stats[\"num_users\"] += 1\n      }\n\n      // Check if order is buy or sell and add the necessary info\n      var curr_1 = parseFloat(ethers.utils.formatUnits(order[\"curr_1\"].toString(), \"ether\"))\n      if(order[\"type\"] === \"BUY\") {\n        new_stats[\"num_buys\"] += 1\n        new_stats[\"buy_volume\"] += curr_1\n      } else if(order[\"type\"] === \"SELL\") {\n        new_stats[\"num_sells\"] += 1\n        new_stats[\"sell_volume\"] += curr_1\n      }\n    }\n\n    if(orders.length > 0) {\n      new_stats[\"last_price\"] = Math.round(orders[0][\"price\"] * 1000) / 1000\n      new_stats[\"last_type\"] = orders[0][\"type\"]\n      new_stats[\"buy_volume\"] = Math.round(new_stats[\"buy_volume\"] * 100) / 100\n      new_stats[\"sell_volume\"] = Math.round(new_stats[\"sell_volume\"] * 100) / 100\n    }\n\n    var symbol = \"▲\"\n    if(new_stats[\"last_type\"] === \"SELL\") {\n      symbol = \"▼\"\n    }\n\n    document.title = new_stats[\"last_price\"] + \" \" + symbol + \" \" + this.props.currencies[1] + \"/\" + this.props.currencies[0]\n    return new_stats\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  buildStat(key, raw_stats) {\n    if(raw_stats[key] === \"...\") {\n      return <span className=\"loading_value\">{raw_stats[key]}</span>\n    }\n    var color = null\n    var value = this.numberWithCommas(raw_stats[key])\n    if(key === \"buy_volume\" || key === \"sell_volume\") {\n      color = key === \"buy_volume\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()} <span className=\"sub_value\">{this.props.currencies[1]}</span></span>\n    }\n\n    if(key === \"num_buys\" || key === \"num_sells\") {\n      color = key === \"num_buys\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()}</span>\n    }\n\n    if(key === \"last_price\") {\n      color = raw_stats[\"last_type\"] === \"BUY\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()} <span className=\"sub_value\">{this.props.currencies[1]} / {this.props.currencies[0]}</span></span>\n    }\n\n    return value\n  }\n\n  render() {\n    var { currencies, orders } = this.props\n\n    var keys = [\"num_users\", \"num_buys\", \"num_sells\", \"buy_volume\", \"sell_volume\", \"last_price\"]\n    var statistics = {}\n    var raw_stats = this.updateStats()\n    for(var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      statistics[key] = this.buildStat(key, raw_stats)\n    }\n\n    var chart = <div id=\"Stats-chart\"><CandleChart orders={orders} currencies={currencies} /></div>\n\n    return (\n      <div className=\"Stats\">\n        {chart}\n        <div id=\"Stats-statistics\">\n          <Grid id=\"Stats-grid\">\n            <Grid.Row>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Buys</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_buys\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Buy Vol.</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"buy_volume\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Sells</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_sells\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Sell Vol.</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"sell_volume\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={8} computer={8} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Last Price</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"last_price\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={8} computer={8} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Users</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_users\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stats","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\nimport { Grid, Icon } from 'semantic-ui-react'\nimport { AutoSizer, List } from 'react-virtualized'\n\nimport HumanName from '../../utils/humanname/humanname'\n\nimport './markethistory.css'\n\nclass MarketHistory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true\n    }\n\n    this.max_order = 1\n  }\n\n  componentDidMount() {\n    this.setState({ loading: false })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.state.loading && !nextState.loading) {\n      return true\n    } else if(this.props.orders.length !== nextProps.orders.length || this.state.loading) {\n      this.setState({ loading: false })\n      return true\n    } else {\n      return false\n    }\n  }\n\n  getMax(orders) {\n    return Math.max.apply(Math, orders.slice(0, 250).map(function(o) { return o.curr_1 }))\n  }\n\n  componentWillMount() {\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  rowRenderer({index, key, style}) {\n    var item = this.props.orders[index]\n    \n    var type = item[\"type\"]\n    var ratio = item[\"curr_1\"]/this.max_order * 100\n    var direction = \"right\"\n    var color_0 = \"rgba(255, 0, 0, 0.2)\"\n    var color_1 = \"rgba(0,0,0,0)\"\n    if(type === \"BUY\") {\n      color_0 = \"rgba(0, 255, 0, 0.1)\"\n      color_1 = \"rgba(0, 0, 0, 0)\"\n    }\n\n    var color = index % 2 === 0 ? `#182026` : `#1c262c`\n\n    var custom_style = { \n      backgroundColor: color,\n      backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n      backgroundSize: `calc(${ratio}%) 100%`,\n      backgroundRepeat: `no-repeat`\n    }\n    style = Object.assign(custom_style, style)\n\n    var price = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">{this.numberWithCommas(Math.round(item[\"price\"] * 100)/100)}</span>) : (<span className=\"red MarketHistory-type\">{this.numberWithCommas(Math.round(item[\"price\"] * 100)/100)}</span>)\n    var participants = (<div className=\"MarketHistory-participants\">\n                          <div className=\"MarketHistory-taker\"><HumanName icon_only address={item[\"taker\"]} /></div>\n                          <div className=\"MarketHistory-arrow\"><Icon size=\"large\" name=\"long arrow alternate right\" /></div>\n                          <div className=\"MarketHistory-maker\"><HumanName icon_only address={item[\"maker\"]} /></div>\n                        </div>)\n    return (\n      <div className=\"MarketHistory-table-entry\" key={key} style={style}>\n        <Grid padded={true}>\n          <Grid.Column computer={3} tablet={3} mobile={3}>\n            {price}\n          </Grid.Column>\n          <Grid.Column computer={4} tablet={4} mobile={6}>\n            {item[\"timestamp\"]}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} mobile={3}>\n            {this.numberWithCommas(Math.round(ethers.utils.formatUnits(item[\"curr_0\"], 'ether') * 100) / 100 )}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} mobile={4}>\n            {this.numberWithCommas(Math.round(ethers.utils.formatUnits(item[\"curr_1\"], 'ether') * 100) / 100 )}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} only={'computer tablet'} textAlign='center'>\n            {participants}\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n\n  render() {\n    var { currencies, orders } = this.props\n\n    this.max_order = this.getMax(orders)\n\n    return (\n      <div className=\"MarketHistory\">\n        <Grid id=\"MarketHistory-table-header\">\n          <Grid.Column computer={3} tablet={3} mobile={3}>\n            Price\n          </Grid.Column>\n          <Grid.Column computer={4} tablet={4} mobile={6}>\n            Time\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} mobile={3}>\n            {currencies[0]}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} mobile={4}>\n            {currencies[1]}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} only={'computer tablet'}>\n            Participants\n          </Grid.Column>\n        </Grid>\n        <AutoSizer style={{outline: 'none'}}>\n          {({ height, width }) => (\n            <List\n              width={width}\n              height={height - 50}\n              rowHeight={50}\n              rowCount={orders.length}\n              rowRenderer={(props) => this.rowRenderer(props)}\n              className=\"MarketHistory-infinite-list\"\n            >\n            </List>\n          )}\n        </AutoSizer>\n      </div>\n    );\n  }\n}\n\nexport default MarketHistory","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\nimport { Grid } from 'semantic-ui-react'\nimport { AutoSizer, List } from 'react-virtualized'\n\nimport HumanName from '../../utils/humanname/humanname'\n\nimport './leaderboard.css'\n\nclass Leaderboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      data: [],\n      direction: 'ascending',\n      column: 'profit'\n    }\n  }\n\n  componentDidMount() {\n    var new_data = this.eventsToData(this.props.orders)\n    var max_profit = 1\n    if(new_data.length > 0) {\n      max_profit = Math.max(Math.abs(new_data[0]['profit']), Math.abs(new_data[new_data.length-1]['profit']))\n    }\n    this.setState({ max_profit, data: new_data })\n  }\n\n  componentWillMount() {\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.props.orders.length !== nextProps.orders.length || this.state.data !== nextState.data || this.state.direction !== nextState.direction || this.state.column !== nextState.column) {\n      if(this.props.orders.length !== nextProps.orders.length) {\n        var new_data = this.eventsToData(nextProps.orders)\n        var max_profit = 1\n        if(new_data.length > 0) {\n          max_profit = new_data[0]['profit']\n        }\n        this.setState({ max_profit, data: new_data})\n      }\n      return true\n    } else {\n      return false\n    }\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    pay_amt = ethers.utils.bigNumberify(pay_amt)\n    buy_amt = ethers.utils.bigNumberify(buy_amt)\n\n    if(pay_amt.lte(ethers.utils.bigNumberify(\"1000\")) || buy_amt.lte(ethers.utils.bigNumberify(\"1000\"))) {\n      return false\n    }\n\n    var one = ethers.utils.bigNumberify(ethers.utils.parseUnits(\"1\", \"ether\"))\n\n    var price = 0\n    if(type === \"BUY\") {\n      price = ethers.utils.formatUnits(one.mul(pay_amt).div(buy_amt).toString(), 'ether')\n      // buy_amt = web3.utils.fromWei(buy_amt.toString(), 'ether')\n      // pay_amt = web3.utils.fromWei(pay_amt.toString(), 'ether')\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = ethers.utils.formatUnits(one.mul(buy_amt).div(pay_amt).toString(), 'ether')\n      // buy_amt = web3.utils.fromWei(buy_amt.toString(), 'ether')\n      // pay_amt = web3.utils.fromWei(pay_amt.toString(), 'ether')\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  newUserProfile(address) {\n    return {\n          \"address\": address,\n          \"amount_0_given\": ethers.utils.bigNumberify(\"0\"), // Amount weth sold\n          \"amount_1_received\": ethers.utils.bigNumberify(\"0\"), // Amount dai received for sells\n          \"amount_1_given\": ethers.utils.bigNumberify(\"0\"), // Amount dai given for buys\n          \"amount_0_received\": ethers.utils.bigNumberify(\"0\"), // Amount weth bought\n        }\n  }\n\n  getProfit(avg_buy_order, avg_sell_order) {\n    if(!avg_buy_order || !avg_sell_order) {\n      return 0\n    } else {\n      var amount_sell = avg_sell_order[1]\n      var amount_buy = avg_buy_order[1]\n      var sell_price = avg_sell_order[0]\n      var buy_price = avg_buy_order[0]\n      var min_amount = amount_buy.lt(amount_sell) ? ethers.utils.formatUnits(amount_buy.toString(), 'ether') : ethers.utils.formatUnits(amount_sell.toString(), 'ether')\n      var profit = Math.round(min_amount * (sell_price - buy_price) * 100) / 100\n      return profit\n    }\n  }\n\n  eventsToData(events) {\n    var profiles = {}\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i]\n\n      // Assemble all necessary vars\n      var maker = order[\"maker\"]\n      var taker = order[\"taker\"]\n      var buyer = null\n      var seller = null\n\n      // Add maker and taker into the dict if they are not present\n      if(!(maker in profiles)) {\n        profiles[maker] = this.newUserProfile(maker)\n      }\n      if(!(taker in profiles)) {\n        profiles[taker] = this.newUserProfile(taker)\n      }\n\n      // Set who the buyer and who the seller is\n      if(order[\"type\"] === \"BUY\") {\n        buyer = taker\n        seller = maker\n      } else {\n        buyer = maker\n        seller = taker\n      }\n\n      // Add to buyer and seller data dict\n      var profile_data = profiles[buyer]\n      profile_data[\"amount_1_given\"] = profile_data[\"amount_1_given\"].add(order[\"curr_1\"])\n      profile_data[\"amount_0_received\"] = profile_data[\"amount_0_received\"].add(order[\"curr_0\"])\n      profiles[buyer] = profile_data\n\n      profile_data = profiles[seller]\n      profile_data[\"amount_0_given\"] = profile_data[\"amount_0_given\"].add(order[\"curr_0\"])\n      profile_data[\"amount_1_received\"] = profile_data[\"amount_1_received\"].add(order[\"curr_1\"])\n      profiles[seller] = profile_data\n    }\n\n    var data = []\n    for (var key in profiles) {\n      let avg_buy_order = this.getPrice(profiles[key][\"amount_1_given\"], profiles[key][\"amount_0_received\"], \"BUY\")\n      let avg_buy_price = avg_buy_order ? Math.round(avg_buy_order[0].toString() * 10) / 10 : \"N/A\"\n      let avg_sell_order = this.getPrice(profiles[key][\"amount_0_given\"], profiles[key][\"amount_1_received\"], \"SELL\")\n      let avg_sell_price = avg_sell_order ? Math.round(avg_sell_order[0].toString() * 10) / 10 : \"N/A\"\n      let profit = this.getProfit(avg_buy_order, avg_sell_order)\n      var data_point = {\n        \"user\": key,\n        \"amount_0_bought\": Math.round(ethers.utils.formatUnits(profiles[key][\"amount_0_received\"].toString(), 'ether') * 10) / 10,\n        \"avg_buy_price\": avg_buy_price,\n        \"amount_0_sold\": Math.round(ethers.utils.formatUnits(profiles[key][\"amount_0_given\"].toString(), 'ether') * 10) / 10,\n        \"avg_sell_price\": avg_sell_price,\n        \"profit\": profit\n      }\n      data.push(data_point)\n    }\n\n    data.sort(function(first, second) {\n      return second.profit - first.profit\n    })\n\n    return data\n  }\n\n  handleSort(clicked_column) {\n    const { column, data, direction } = this.state\n\n    if(column !== clicked_column) {\n      var new_data = data.concat().sort(function(first, second) {\n                      if(first[clicked_column] === \"N/A\") {\n                        return 1\n                      } else if(second[clicked_column] === \"N/A\") {\n                        return -1\n                      } else {\n                        return second[clicked_column] - first[clicked_column]\n                      }\n                    })\n      this.setState({\n        column: clicked_column,\n        data: new_data,\n        direction: 'ascending'\n      })\n    } else {\n      this.setState({ \n        data: data.reverse(),\n        direction: direction === 'ascending' ? 'descending' : 'ascending'\n      })\n    }\n  }\n\n  rowRenderer({index, key, style}) {\n    var { max_profit } = this.state\n    var { currencies, account } = this.props\n    var item = this.state.data[index]\n\n    var ratio = Math.abs(item[\"profit\"])/max_profit * 100\n    var direction = \"right\"\n    var color_0 = \"rgba(255, 0, 0, 0.2)\"\n    var color_1 = \"rgba(0,0,0,0)\"\n    if(item[\"profit\"] > 0) {\n      color_0 = \"rgba(0, 255, 0, 0.1)\"\n      color_1 = \"rgba(0, 0, 0, 0)\"\n    }\n\n    var color = index % 2 === 0 ? `#182026` : `#1c262c`\n\n    if(account === item[\"user\"]) {\n      color =  `#3f4a50`\n    }\n\n    var custom_style = { \n      backgroundColor: color,\n      backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n      backgroundSize: `calc(${ratio}%) 100%`,\n      backgroundRepeat: `no-repeat`\n    }\n    style = Object.assign(custom_style, style)\n\n    var profit_color = 'grey'\n    if(item[\"profit\"] > 0) {\n      profit_color = 'green'\n    } else if(item[\"profit\"] < 0) {\n      profit_color = 'red'\n    }\n\n    return (\n      <div className=\"Leaderboard-table-entry\" key={key} style={style}>\n        <Grid padded={true}>\n          <Grid.Column computer={4} tablet={6} mobile={10}>\n            <HumanName address={item[\"user\"]} />\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={2} only={'computer tablet'}>\n            <span>{item[\"amount_0_bought\"] + \" \"}<span className=\"Leaderboard-subtext\">{currencies[0]}</span></span>\n          </Grid.Column>\n          <Grid.Column computer={2} tablet={2} only={'computer tablet'}>\n            {item[\"avg_buy_price\"]}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={2} only={'computer tablet'}>\n            <span>{item[\"amount_0_sold\"] + \" \"}<span className=\"Leaderboard-subtext\">{currencies[0]}</span></span>\n          </Grid.Column>\n          <Grid.Column computer={2} tablet={2} only={'computer tablet'}>\n            {item[\"avg_sell_price\"]}\n          </Grid.Column>\n          <Grid.Column computer={2} tablet={2} mobile={6}>\n            <span className={profit_color}>{item[\"profit\"] + \" \"}<span className=\"Leaderboard-subtext\">{currencies[1]}</span></span>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n\n  render() {\n    var { loading, data, column, direction } = this.state\n\n    var background_item = null\n\n    if(loading) {\n      background_item = (<div id=\"Leaderboard-empty\">Loading...</div>)\n    } else if(data.length === 0) {\n      background_item = (<div id=\"Leaderboard-empty\">NO DATA</div>)\n    }\n\n    var symbol = \"▲\"\n    if(direction === 'descending') {\n      symbol = \"▼\"\n    }\n\n    var headers = {\n      \"name\": \"Name\",\n      \"amount_0_bought\": \"# Bought\",\n      \"avg_buy_price\": \"Avg. Buy\",\n      \"amount_0_sold\": \"# Sold\",\n      \"avg_sell_price\": \"Avg. Sell\",\n      \"profit\": \"Profit\"\n    }\n\n    headers[column] = headers[column] + symbol\n\n    return (\n      <div className=\"Leaderboard\">\n        <Grid id=\"Leaderboard-table-header\">\n          <Grid.Column computer={4} tablet={6} mobile={10}>\n            {headers[\"name\"]}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={2} onClick={() => this.handleSort('amount_0_bought')} only={'computer tablet'}>\n            {headers[\"amount_0_bought\"]}\n          </Grid.Column>\n          <Grid.Column computer={2} tablet={2} onClick={() => this.handleSort('avg_buy_price')} only={'computer tablet'}>\n            {headers[\"avg_buy_price\"]}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={2} onClick={() => this.handleSort('amount_0_sold')} only={'computer tablet'}>\n            {headers[\"amount_0_sold\"]}\n          </Grid.Column>\n          <Grid.Column computer={2} tablet={2} onClick={() => this.handleSort('avg_sell_price')} only={'computer tablet'}>\n            {headers[\"avg_sell_price\"]}\n          </Grid.Column>\n          <Grid.Column computer={2} tablet={2} mobile={6} onClick={() => this.handleSort('profit')}>\n            {headers[\"profit\"]}\n          </Grid.Column>\n        </Grid>\n        <AutoSizer style={{outline: 'none'}}>\n          {({ height, width }) => (\n            <List\n              width={width}\n              height={height - 50}\n              rowHeight={50}\n              rowCount={data.length}\n              rowRenderer={(props) => this.rowRenderer(props)}\n              className=\"Leaderboard-infinite-list\"\n            >\n            </List>\n          )}\n        </AutoSizer>\n        {background_item}\n      </div>\n    );\n  }\n}\n\nexport default Leaderboard","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\nimport { Grid } from 'semantic-ui-react'\nimport { AutoSizer, List } from 'react-virtualized'\n\nimport HumanName from '../../utils/humanname/humanname'\n\nimport './myhistory.css'\n\nclass MyHistory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true\n    }\n\n    this.my_orders = []\n    this.max_order = 1\n  }\n\n  componentDidMount() {\n    if(this.props.orders.length > 0) {\n      this.setState({ loading: false })\n    }\n  }\n\n  getMax() {\n    return Math.max.apply(Math, this.my_orders.map(function(o) { return o.curr_1 }))\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.state.loading && !nextState.loading) {\n      return true\n    } else if(this.props.orders.length !== nextProps.orders.length) {\n      this.setState({ loading: false })\n      return true\n    } else {\n      return false\n    }\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getMyOrders() {\n    var { orders, account } = this.props\n    var myOrders = []\n\n    for(var i = 0; i < orders.length; i++) {\n      let order = orders[i]\n      if(order[\"maker\"] === account) {\n        let new_order = Object.assign({}, order)\n        new_order[\"participant\"] = new_order[\"taker\"]\n        new_order[\"type\"] = new_order[\"type\"] === \"BUY\" ? \"SELL\" : \"BUY\"\n        myOrders.push(new_order)\n      } else if(order[\"taker\"] === account) {\n        let new_order = Object.assign({}, order)\n        new_order[\"participant\"] = new_order[\"maker\"]\n        myOrders.push(new_order)\n      }\n    }\n    return myOrders\n  }\n\n  rowRenderer({index, key, style}) {\n    var item = this.my_orders[index]\n    \n    var type = item[\"type\"]\n    var ratio = item[\"curr_1\"]/this.max_order * 100\n    var direction = \"right\"\n    var color_0 = \"rgba(255, 0, 0, 0.2)\"\n    var color_1 = \"rgba(0,0,0,0)\"\n    if(type === \"BUY\") {\n      color_0 = \"rgba(0, 255, 0, 0.1)\"\n      color_1 = \"rgba(0, 0, 0, 0)\"\n    }\n\n    var color = index % 2 === 0 ? `#182026` : `#1c262c`\n\n    var custom_style = { \n      backgroundColor: color,\n      backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n      backgroundSize: `calc(${ratio}%) 100%`,\n      backgroundRepeat: `no-repeat`\n    }\n    style = Object.assign(custom_style, style)\n\n    var price = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">{this.numberWithCommas(Math.round(item[\"price\"] * 100)/100)}</span>) : (<span className=\"red MarketHistory-type\">{this.numberWithCommas(Math.round(item[\"price\"] * 100)/100)}</span>)\n    return (\n      <div className=\"MarketHistory-table-entry\" key={key} style={style}>\n        <Grid padded={true}>\n          <Grid.Column computer={3} tablet={3} mobile={3}>\n            {price}\n          </Grid.Column>\n          <Grid.Column computer={4} tablet={4} mobile={6}>\n            {item[\"timestamp\"]}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} mobile={3}>\n            {this.numberWithCommas(Math.round(ethers.utils.formatUnits(item[\"curr_0\"], 'ether') * 100) / 100 )}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} mobile={4}>\n            {this.numberWithCommas(Math.round(ethers.utils.formatUnits(item[\"curr_1\"], 'ether') * 100) / 100 )}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} only={'computer tablet'} textAlign='center'>\n            <HumanName address={item[\"participant\"]} icon_only />\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n\n  render() {\n    var { loading } = this.state\n    var { currencies } = this.props\n\n    var background_item = null\n    this.my_orders = this.getMyOrders()\n\n    if(loading) {\n      background_item = (<div id=\"MarketHistory-empty\">Loading...</div>)\n    } else if(this.my_orders.length === 0) {\n      background_item = (<div id=\"MarketHistory-empty\">NO ORDERS</div>)\n    } else {\n      this.max_order = this.getMax()\n    }\n\n    return (\n      <div className=\"MarketHistory\">\n        <Grid id=\"MarketHistory-table-header\">\n          <Grid.Column computer={3} tablet={3} mobile={3}>\n            Price\n          </Grid.Column>\n          <Grid.Column computer={4} tablet={4} mobile={6}>\n            Time\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} mobile={3}>\n            {currencies[0]}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} mobile={4}>\n            {currencies[1]}\n          </Grid.Column>\n          <Grid.Column computer={3} tablet={3} only={'computer tablet'}>\n            Participants\n          </Grid.Column>\n        </Grid>\n        <AutoSizer style={{outline: 'none'}}>\n          {({ height, width }) => (\n            <List\n              width={width}\n              height={height - 50}\n              rowHeight={50}\n              rowCount={this.my_orders.length}\n              rowRenderer={(props) => this.rowRenderer(props)}\n              className=\"MarketHistory-infinite-list\"\n            >\n            </List>\n          )}\n        </AutoSizer>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MyHistory\n\n//   render() {\n//     var { loading } = this.state\n//     var { currencies } = this.props\n\n//     var offers_table = null\n//     var background_item = null\n//     this.my_orders = this.getMyOrders()\n\n//     if(loading) {\n//       background_item = (<div id=\"MarketHistory-empty\">Loading...</div>)\n//     } else if(orders.length === 0) {\n//       background_item = (<div id=\"MarketHistory-empty\">NO ORDERS</div>)\n//     } else {\n//       this.max_order = this.getMax()\n//       offers_table = (<Table.Body id=\"MarketHistory-tableBody\">\n//             {orders.map((item, index) => {\n//               var ratio = item[\"curr_1\"]/max_order * 100\n//               var direction = \"right\"\n//               var color_0 = \"rgba(255, 0, 0, 0.2)\"\n//               var color_1 = \"rgba(0,0,0,0)\"\n//               if(item[\"type\"] === \"BUY\") {\n//                 color_0 = \"rgba(0, 255, 0, 0.1)\"\n//                 color_1 = \"rgba(0, 0, 0, 0)\"\n//               }\n//               var style = { backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n//                 backgroundSize: `calc(${ratio}%) 100%`,\n//                 backgroundRepeat: `no-repeat`\n//               }\n//               var price = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">{this.numberWithCommas(Math.round(item[\"price\"] * 100)/100)}</span>) : (<span className=\"red MarketHistory-type\">{this.numberWithCommas(Math.round(item[\"price\"] * 100)/100)}</span>)\n//               return (\n//                 <Table.Row key={index} style={style}>\n//                   <Table.Cell>\n//                     <div className='MarketHistory-table-entry'>{price}</div>\n//                   </Table.Cell>\n\n//                   <Table.Cell>\n//                     <div className='MarketHistory-table-entry'>{item[\"timestamp\"]}</div>\n//                   </Table.Cell>\n\n//                   <Table.Cell>\n//                     <div className='MarketHistory-table-entry'>{this.numberWithCommas(Math.round(ethers.utils.formatUnits(item[\"curr_0\"], 'ether') * 100) / 100 )}</div>\n//                   </Table.Cell>\n\n//                   <Table.Cell  textAlign='left'>\n//                     <div className='MarketHistory-table-entry'>{this.numberWithCommas(Math.round(ethers.utils.formatUnits(item[\"curr_1\"], 'ether') * 100) / 100 )}</div>\n//                   </Table.Cell>\n                \n//                   <Table.Cell width={1}>\n//                     <div className='MarketHistory-table-entry'><HumanName address={item[\"participant\"]} icon_only /></div>\n//                   </Table.Cell>\n//                 </Table.Row>\n//               )\n//             })}\n//           </Table.Body>)\n//     }\n\n//     return (\n//       <div className=\"MarketHistory\">\n//         <Table striped basic celled unstackable id=\"MarketHistory-table\">\n//           <Table.Header>\n//             <Table.Row>\n//               <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Price</Table.HeaderCell>\n//               <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Time</Table.HeaderCell>\n//               <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n//               <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n//               <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Participant</Table.HeaderCell>\n//             </Table.Row>\n//           </Table.Header>\n//           { offers_table }\n//         </Table>\n//         { background_item }\n//       </div>\n//     );\n//   }\n// }","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\nimport { Sidebar, Segment, Icon, Input, Form, Button, Loader } from 'semantic-ui-react'\n\nimport HumanName from '../../utils/humanname/humanname'\n\nimport './sidebar.css'\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      visible: false,\n      amount: '0',\n      ui_amount: '',\n      currency_0_balance: \"0\",\n      currency_1_balance: \"0\",\n      id: null,\n      info: null,\n      owner: null,\n      bignumbers: {},\n      button_loading: false,\n      button_success: false,\n      button_error: false\n    }\n\n    this.updateInfo = this.updateInfo.bind(this)\n    this.stopLoading = this.stopLoading.bind(this)\n    this.flashError = this.flashError.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n  }\n\n  // Get the balances for each of the currencies since we will need that throughout the component\n  componentDidMount() {\n    this.generateBigNumbers()\n    this.updateInfo()\n  }\n\n  async updateInfo() {\n    var { account, currencies, options } = this.props\n    if(this.state.visible && this.state.id) {\n      const currency_0_balance = await options.contracts[currencies[0]].balanceOf(account)\n      const currency_1_balance = await options.contracts[currencies[1]].balanceOf(account)\n      const info = await options.contracts.Market.getOffer(this.state.id)\n      const owner = await options.contracts.Market.getOwner(this.state.id)\n      this.setState({ currency_0_balance, currency_1_balance, info, owner })\n    }\n    setTimeout(this.updateInfo, 1000)\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = ethers.utils.bigNumberify(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  stopLoading() {\n    this.setState({ loading: false })\n  }\n\n  // Need to update visible and the side_bar info key if a new order is passed in\n  async componentWillReceiveProps(nextProps) {\n    if(nextProps.visible !== this.props.visible) {\n      this.setState({ visible: nextProps.visible })\n      if(nextProps.visible === false) {\n        this.setState({ info: null, owner: null, amount: '0', ui_amount: '', button_success: false, button_error: false, button_loading: false })\n      }\n    }\n    if(nextProps.sidebar_info !== this.props.sidebar_info) {\n      this.setState({ loading: true })\n      const info = await this.props.options.contracts.Market.getOffer(nextProps.sidebar_info[\"id\"])\n      const owner = await this.props.options.contracts.Market.getOwner(nextProps.sidebar_info[\"id\"])\n      this.setState({ id: nextProps.sidebar_info[\"id\"], info, owner, amount: '0', ui_amount: '' })\n      setTimeout(this.stopLoading, 50)\n    }\n  }\n\n  flashSuccess() {\n    var { toggleSidebar } = this.props\n    this.setState({ button_success : true, button_loading: false })\n    setTimeout(toggleSidebar, 1500)\n  }\n\n  flashError() {\n    this.setState({ button_error: true, button_loading: false })\n    setTimeout(() => this.setState({ button_error: false }), 1500)\n  }\n\n  // Most important function in the entire file since it actually interfaces\n  // and edits the blockchain.\n  executeTrade = async (will_receive) => {\n    var { sidebar_info } = this.props\n\n    var id = sidebar_info[\"id\"]\n\n    // Log the inputs for the transaction so that you can always be 100% positive what is being sent\n    var inputs = {\n      \"id\": id,\n      \"will_receive\": will_receive.toString(),\n      \"will_receive_wholenums\": ethers.utils.formatUnits(will_receive.toString(), 'ether')\n    }\n    console.log(inputs)\n\n    try {\n      var tx = await this.props.options.contracts.Market.buy(id, will_receive.toString())\n      this.setState({ button_loading: true })\n      await tx.wait()\n      this.flashSuccess()\n    } catch(error) {\n      this.flashError()\n    }\n  }\n\n  numberWithCommas(x) {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n  }\n\n  handleUserChange(value) {\n    var internal_value = 0\n    try{\n      if(/\\S/.test(value)) {\n        internal_value = ethers.utils.parseUnits(value.toString(), 'ether').toString()\n      }\n    } catch (err) {\n      console.log(err)\n      return\n    }\n    this.setState({ ui_amount: value, amount: internal_value })\n  }\n\n  handleAmountPercentageChange(value) {\n    var ui_value = ethers.utils.formatUnits(value.toString(), 'ether')\n    this.setState({ amount: value.toString(), ui_amount: ui_value })\n  }\n\n  // So we were passed in the most up to date info the older component had.\n  // However this can and will change if it was stale or other people are taking the order.\n  // This keeps the info up to date and fallsback onto the old data if an error happens.\n  getUpdatedInfo() {\n    var { info } = this.state\n    var { sidebar_info } = this.props\n\n    var info_obj = {}\n    if(!info) {\n      return null\n    }\n\n    var buy_amt = info[0]\n    var pay_amt = info[2]\n    if(sidebar_info[\"type\"] === \"BUY\") {\n      info_obj = {\n        \"price\": sidebar_info[\"price\"],\n        \"curr_0_amt\": pay_amt.toString(),\n        \"curr_1_amt\": buy_amt.toString()\n      }\n    } else {\n      info_obj = {\n        \"price\": sidebar_info[\"price\"],\n        \"curr_0_amt\": buy_amt.toString(),\n        \"curr_1_amt\": pay_amt.toString()\n      }\n    }\n\n    return info_obj\n  }\n\n  calcWillReceive() {\n    var { amount } = this.state\n\n    // Don't forget that these are flipped from the actual smart contract docs since\n    // WE are the counterparties so buy_amt/pay_amt is flipped from expected\n    var buy_amt = ethers.utils.bigNumberify(this.state.info[0])\n    var pay_amt = ethers.utils.bigNumberify(this.state.info[2])\n\n    let amount_bn = ethers.utils.bigNumberify(amount)\n    try {\n      let will_receive = amount_bn.mul(buy_amt).div(pay_amt)\n      return will_receive\n    } catch(err) {\n      return ethers.utils.bigNumberify(\"0\")\n    }\n  }\n\n  getMaxTake() {\n    var { sidebar_info } = this.props\n    var { info, currency_0_balance, currency_1_balance } = this.state\n\n    var pay_amt = ethers.utils.bigNumberify(info[2])\n    var balance = sidebar_info[\"type\"] === \"BUY\" ? ethers.utils.bigNumberify(currency_0_balance) : ethers.utils.bigNumberify(currency_1_balance)\n    if(balance.lt(pay_amt)) {\n      return balance\n    } else {\n      return pay_amt\n    }\n  }\n\n  render() {\n    var { visible, amount, ui_amount, currency_0_balance, currency_1_balance, bignumbers, loading, button_loading, button_error, button_success, owner } = this.state\n    var { currencies, toggleSidebar, sidebar_info } = this.props\n\n    // Invert the type since the action do as a taker is the inverse of the action of the maker\n    var action = sidebar_info[\"type\"] === \"BUY\" ? \"SELL\" : \"BUY\"\n    var subtitle = action === \"BUY\" ? (<span className=\"green\">{action}</span>) : (<span className=\"red\">SELL</span>)\n\n    // So we were passed in the most up to date info the older component had.\n    // However this can and will change if it was stale or other people are taking the order.\n    // This keeps the info up to date and fallsback onto the old data if an error happens.\n    var updated_info = this.getUpdatedInfo()\n    if(!updated_info || loading) {\n      return (\n        <div className=\"Side_bar\">\n          <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Side_bar\">\n            <div id=\"Side_bar-x-container\">\n              <Icon name=\"close\" onClick={toggleSidebar} id=\"Side_bar-x\" size=\"large\" />\n            </div>\n            <div id=\"Side_bar-title\">Take Order</div>\n            <Loader active>Loading</Loader>\n          </Sidebar>\n        </div>\n      )\n    }\n\n    // Build object that swaps values for buys and sells so that rendering is simple\n    var giving = {\n      \"currency\": null,\n      \"receive_currency\": null,\n      \"balance\": 0,\n      \"offered\": 0,\n      \"max_take\": this.getMaxTake(),\n      \"will_receive\": this.calcWillReceive(),\n      \"maker\": owner ? <HumanName address={owner} /> : \"Loading...\",\n    }\n    giving[\"ui_will_receive\"] = Math.round(ethers.utils.formatUnits(giving[\"will_receive\"].toString(), 'ether') * 1000) / 1000\n\n    if(action === \"BUY\") {\n      giving[\"currency\"] = currencies[1]\n      giving[\"receive_currency\"] = currencies[0]\n      giving[\"balance\"] = ethers.utils.bigNumberify(currency_1_balance)\n      giving[\"ui_balance\"] = Math.round(ethers.utils.formatUnits(currency_1_balance.toString(), 'ether') * 1000) / 1000\n      giving[\"offered\"] = ethers.utils.bigNumberify(updated_info[\"curr_1_amt\"])\n      giving[\"ui_offered\"] = Math.round(ethers.utils.formatUnits(updated_info[\"curr_1_amt\"], 'ether') * 1000) / 1000\n    } else {\n      giving[\"currency\"] = currencies[0]\n      giving[\"receive_currency\"] = currencies[1]\n      giving[\"balance\"] = ethers.utils.bigNumberify(currency_0_balance)\n      giving[\"ui_balance\"] = Math.round(ethers.utils.formatUnits(currency_0_balance.toString(), 'ether') * 1000) / 1000\n      giving[\"offered\"] = ethers.utils.bigNumberify(updated_info[\"curr_0_amt\"])\n      giving[\"ui_offered\"] = Math.round(ethers.utils.formatUnits(updated_info[\"curr_0_amt\"], 'ether') * 1000) / 1000\n    }\n\n    // Adjust the text on the button if an action or error just occurred\n    var button_text = action + \" \" + currencies[0]\n    button_text = button_success ? \"SUCCESS\" : button_text\n    button_text = button_error ? \"FAILED\" : button_text\n\n    return (\n      <div className=\"Side_bar\">\n        <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Side_bar\">\n          <div id=\"Side_bar-x-container\">\n            <Icon name=\"close\" onClick={toggleSidebar} id=\"Side_bar-x\" size=\"large\" />\n          </div>\n          <div id=\"Side_bar-title\">Take Order</div>\n          <div id=\"Side_bar-subtitle\">How much would you like to {subtitle}?</div>\n          \n          <div id=\"Side_bar-info\">\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Maker:</div>\n              <div className=\"Side_bar-info-content\">{giving[\"maker\"]}</div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Price:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(updated_info[\"price\"])} <span id=\"Side_bar-exchange\">{currencies[1]} / {currencies[0]}</span></div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Balance {giving[\"currency\"]}:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(giving[\"ui_balance\"])} <span id=\"Side_bar-exchange\">{giving[\"currency\"]}</span></div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Offered {giving[\"currency\"]}:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(giving[\"ui_offered\"])} <span id=\"Side_bar-exchange\">{giving[\"currency\"]}</span></div>\n            </div>\n          </div>\n\n          <Form size='tiny' id=\"Side_bar-form\">\n            <Form.Field>\n              <div>\n                <div className=\"Side_bar-info-title\">Spend {giving[\"currency\"]}:</div>\n                <Input\n                  label={{ basic: true, content: giving[\"currency\"] }}\n                  labelPosition='right'\n                  placeholder='Enter Amount...'\n                  value={ui_amount}\n                  onChange={(e) => { this.handleUserChange(e.target.value) }}\n                />\n              </div>\n            </Form.Field>\n            <Button.Group id=\"Side_bar-mini-buttons\" size='mini' basic>\n              <Button onClick={ () => this.handleUserChange(\"\") } >0%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].div(bignumbers[4])) } >25%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].div(bignumbers[2])) } >50%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"]) } >100%</Button>\n            </Button.Group>\n          </Form>\n          <div className=\"Side_bar-info-item\">\n            <div className=\"Side_bar-info-title\">Will Receive</div>\n            <div className=\"Side_bar-info-content\">{giving[\"ui_will_receive\"].toString() + \" \" + giving[\"receive_currency\"]}</div>\n          </div>\n\n          <Button className=\"BuySell-button\" loading={button_loading} color={action === \"BUY\" ? \"green\" : \"red\"} disabled={button_text !== action + \" \" + currencies[0] || giving[\"will_receive\"].lte(ethers.utils.bigNumberify(\"1000\")) || ethers.utils.bigNumberify(amount).gt(giving[\"max_take\"])} onClick={() => this.executeTrade(giving[\"will_receive\"]) }>{button_text}</Button>\n\n        </Sidebar>\n      </div>\n    );\n  }\n}\n\nexport default SideBar\n","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\nimport { Grid, Tab, Responsive } from 'semantic-ui-react'\n\n// import Chart from './chart/chart'\nimport OrderListV2 from './orderlistV2/orderlistV2'\nimport LimitOrder from './limitorder/limitorder'\nimport MarketOrder from './marketorder/marketorder'\nimport MyOrders from './myorders/myorders'\nimport Stats from './stats/stats'\nimport MarketHistory from './markethistory/markethistory'\nimport Leaderboard from './leaderboard/leaderboard'\nimport MyHistory from './myhistory/myhistory'\nimport SideBar from './sidebar/sidebar'\n\nimport './market.css'\n\nclass Market extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: false,\n      account: \"\",\n      sidebar_info: {\n        \"price\": 0,\n        \"curr_0_amt\": 0,\n        \"curr_1_amt\": 0,\n        \"id\": \"\",\n        \"type\": \"\"\n      },\n      past_orders: [],\n      open_buy_orders: [],\n      open_sell_orders: [],\n      num_buys: null,\n      num_sells: null,\n      balances: ['0', '0'],\n      timers: [null, null]\n    }\n\n    this.updateBalances = this.updateBalances.bind(this)\n    this.updateOpenOrders = this.updateOpenOrders.bind(this)\n  }\n\n  componentWillMount() {\n  }\n\n  async componentDidMount() {\n    let account = await this.props.options.signer.getAddress()\n    this.updateOpenOrders()\n    this.updateBalances()\n    this.setState({ account })\n    let past_orders = await this.getPastOrders()\n    this.setState({ past_orders })\n    this.subscribeToEvents()\n  }\n\n  componentWillUnmount() {\n    for(var i = 0; i < this.state.timers.length; i++) {\n      if(this.state.timers[i] !== null) {\n        clearTimeout(this.state.timers[i])\n      }\n    }\n\n    var { options, currencies } = this.props\n    var { Market } = options.contracts\n    \n    var curr_1_addr = options.contracts[currencies[0]].address\n    var curr_2_addr = options.contracts[currencies[1]].address\n    \n    const hashKey1 = ethers.utils.solidityKeccak256(['bytes', 'bytes'], [curr_1_addr, curr_2_addr])\n    const hashKey2 = ethers.utils.solidityKeccak256(['bytes', 'bytes'], [curr_2_addr, curr_1_addr])\n    \n    var filter1 = Market.filters.LogTake(null, hashKey1, null, null, null, null)\n    var filter2 = Market.filters.LogTake(null, hashKey2, null, null, null, null)\n    Market.removeAllListeners(filter1).removeAllListeners(filter2)\n  }\n\n  async updateBalances() {\n    var { options, currencies } = this.props\n    var { account } = this.state\n\n    if(account !== \"\") {\n      const currency_0_balance = await options.contracts[currencies[0]].balanceOf(account)\n      const currency_1_balance = await options.contracts[currencies[1]].balanceOf(account)\n      const balances = [currency_0_balance, currency_1_balance]\n      this.setState({ balances })\n    }\n    var timer = setTimeout(this.updateBalances, 3000)\n    var timers = this.state.timers\n    timers[0] = timer\n    this.setState({ timers })\n  }\n\n  async subscribeToEvents() {\n    var { currencies, options } = this.props\n    var { Market } = options.contracts\n    \n    // var latestBlock = await options.provider.getBlockNumber()\n    \n    var curr_1_addr = options.contracts[currencies[0]].address\n    var curr_2_addr = options.contracts[currencies[1]].address\n    \n    const hashKey1 = ethers.utils.solidityKeccak256(['bytes', 'bytes'], [curr_1_addr, curr_2_addr])\n    const hashKey2 = ethers.utils.solidityKeccak256(['bytes', 'bytes'], [curr_2_addr, curr_1_addr])\n    \n    var filter1 = Market.filters.LogTake(null, hashKey1, null, null, null, null)\n    var filter2 = Market.filters.LogTake(null, hashKey2, null, null, null, null)\n    Market.on(filter1, (id, pair, maker, pay_gem, buy_gem, taker, take_amt, give_amt, timestamp, event) => {\n      var order = {\n        \"id\": id,\n        \"pair\": pair,\n        \"maker\": maker,\n        \"pay_gem\": pay_gem,\n        \"buy_gem\": buy_gem,\n        \"taker\": taker,\n        \"take_amt\": take_amt,\n        \"give_amt\": give_amt,\n        \"timestamp\": timestamp\n      }\n      var orders = this.eventsToOrders([order])\n      this.setState({ past_orders: orders.concat(this.state.past_orders) })\n    })\n\n    Market.on(filter2, (id, pair, maker, pay_gem, buy_gem, taker, take_amt, give_amt, timestamp, event) => {\n      var order = {\n        \"id\": id,\n        \"pair\": pair,\n        \"maker\": maker,\n        \"pay_gem\": pay_gem,\n        \"buy_gem\": buy_gem,\n        \"taker\": taker,\n        \"take_amt\": take_amt,\n        \"give_amt\": give_amt,\n        \"timestamp\": timestamp\n      }\n      var orders = this.eventsToOrders([order])\n      this.setState({ past_orders: orders.concat(this.state.past_orders) })\n    })\n  }\n\n  getType(order) {\n    var { currencies, options } = this.props\n\n    var curr_1_addr = options.contracts[currencies[0]].address\n    var curr_2_addr = options.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"].toUpperCase()\n    var pay_addr = order[\"pay_gem\"].toUpperCase()\n\n    if(buy_addr === curr_1_addr.toUpperCase() && pay_addr === curr_2_addr.toUpperCase()) {\n      return \"SELL\"\n    } else if(buy_addr === curr_2_addr.toUpperCase() && pay_addr === curr_1_addr.toUpperCase()) {\n      return \"BUY\"\n    } else {\n      return null\n    }\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    pay_amt = ethers.utils.bigNumberify(pay_amt)\n    buy_amt = ethers.utils.bigNumberify(buy_amt)\n\n    if(pay_amt.lte(ethers.utils.bigNumberify(\"1000\")) || buy_amt.lte(ethers.utils.bigNumberify(\"1000\"))) {\n      return false\n    }\n\n    var one = ethers.utils.bigNumberify(ethers.utils.parseUnits(\"1\", \"ether\"))\n\n    var price = 0\n    if(type === \"BUY\") {\n      price = parseFloat(ethers.utils.formatUnits(one.mul(pay_amt).div(buy_amt).toString(), 'ether'))\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = parseFloat(ethers.utils.formatUnits(one.mul(buy_amt).div(pay_amt).toString(), 'ether'))\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  // Past Event Orders\n\n  eventsToOrders(events) {\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i]\n      var type = this.getType(order)\n      var pay_amt = order[\"give_amt\"].toString()\n      var buy_amt = order[\"take_amt\"].toString()\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      if(offer) {\n        var timestamp = new Date(order[\"timestamp\"] * 1000)\n        timestamp = timestamp.toLocaleTimeString(undefined, {hour: 'numeric', minute: '2-digit'}) + \" \" + timestamp.toLocaleDateString(undefined, {day: 'numeric', month: 'numeric', year: '2-digit'})\n        // timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n        order = {\n          \"raw_timestamp\": order[\"timestamp\"] * 1000,\n          \"timestamp\": timestamp,\n          \"type\": type,\n          \"price\": offer[0],\n          \"curr_0\": offer[1],\n          \"curr_1\": offer[2],\n          \"taker\": order[\"taker\"],\n          \"maker\": order[\"maker\"]\n        }\n        orders.push(order)\n      }\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, options } = this.props\n    var { Market } = options.contracts\n    var latestBlock = await options.provider.getBlockNumber()\n    var fromBlock = latestBlock - (5760*5)\n\n    var curr_1_addr = options.contracts[currencies[0]].address\n    var curr_2_addr = options.contracts[currencies[1]].address\n    const hashKey1 = ethers.utils.solidityKeccak256(['bytes', 'bytes'], [curr_1_addr, curr_2_addr])\n    const hashKey2 = ethers.utils.solidityKeccak256(['bytes', 'bytes'], [curr_2_addr, curr_1_addr])\n\n    var filter1 = Market.filters.LogTake(null, hashKey1, null, null, null, null)\n    var filter2 = Market.filters.LogTake(null, hashKey2, null, null, null, null)\n    filter1.fromBlock = fromBlock\n    filter2.fromBlock = fromBlock\n\n    var [events1, events2] = await Promise.all([options.provider.getLogs(filter1), options.provider.getLogs(filter2)])\n\n    events1 = events1.map((item) => {\n      var parsed = Market.interface.events.LogTake.decode(item.data, item.topics)\n      return parsed\n    })\n    events2 = events2.map((item) => {\n      var parsed = Market.interface.events.LogTake.decode(item.data, item.topics)\n      return parsed\n    })\n    var events = events1.concat(events2)\n\n    events.sort(function(first, second) {\n      return parseInt(first.timestamp.toString()) - parseInt(second.timestamp.toString())\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  // Open Orders\n\n  async updateOpenOrders() {\n    var [open_buy_orders, open_sell_orders] = await Promise.all([this.getOpenOrders(\"BUY\"), this.getOpenOrders(\"SELL\")])\n    // orders.sort(function(a, b) { return parseInt(a[3]) > parseInt(b[3]) ? 1 : -1 })\n    var timer = setTimeout(this.updateOpenOrders, 5000)\n    var timers =  this.state.timers\n    timers[1] = timer\n    this.setState({ timers, open_buy_orders, open_sell_orders })\n  }\n\n  async getOpenOrders(type) {\n    var { options, currencies } = this.props\n    var { Market } = options.contracts\n\n    if(currencies.length === 2) {\n      var token_addr_0 = options.contracts[currencies[0]].address\n      var token_addr_1 = options.contracts[currencies[1]].address\n\n      var pay_token = null\n      var buy_token = null\n\n      if(type === \"BUY\") {\n        pay_token = token_addr_1\n        buy_token = token_addr_0\n      } else {\n        pay_token = token_addr_0\n        buy_token = token_addr_1\n      }\n\n      const rawOrders = await options.contracts.SupportMethods.getOffers(Market.address, pay_token, buy_token)\n      var orders = []\n      if(rawOrders) {\n        orders = this.processOpenOrders(rawOrders, type)\n      }\n      return orders\n    }\n  }\n\n  processOpenOrders(rawOrders, type) {\n    var n = rawOrders[\"ids\"].length\n    var orders = []\n    for(var i = 0; i < n; i++) {\n      if(rawOrders[\"ids\"][i].toString() !== \"0\") { // && rawOrders[\"owners\"][i] === account\n        var id = rawOrders[\"ids\"][i].toString()\n        var maker = rawOrders[\"owners\"][i]\n        var pay_amount = ethers.utils.formatUnits(rawOrders[\"payAmts\"][i].toString(), 'ether')\n        var buy_amount = ethers.utils.formatUnits(rawOrders[\"buyAmts\"][i].toString(), 'ether') \n        var price = 0\n        var order = {}\n        if(type === \"BUY\") {\n          price = Math.round(pay_amount / buy_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": buy_amount,\n            \"curr_1_amt\": pay_amount,\n            \"id\": id,\n            \"type\": type,\n            \"maker\": maker\n          }\n        } else {\n          price = Math.round(buy_amount / pay_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": pay_amount,\n            \"curr_1_amt\": buy_amount,\n            \"id\": id,\n            \"type\": type,\n            \"maker\": maker\n          }\n        }\n        orders.push(order)\n      }\n    }\n\n    return orders\n  }\n\n  setSidebar = (info) => {\n    this.setState({ sidebar_info: info, visible: true })\n  }\n\n  toggleSidebar = () => {\n    this.setState({ visible: !this.state.visible })\n  }\n\n  render() {\n    var { visible, sidebar_info, account, past_orders, balances, open_buy_orders, open_sell_orders } = this.state\n    var { currencies, options } = this.props\n\n    var title = \"Market: \"\n    if(currencies.length === 2) {\n      title = title + currencies[0] + \"/\" + currencies[1]\n    }\n\n    const all_open_orders = open_buy_orders.concat(open_sell_orders)\n    all_open_orders.sort(function(a, b) { return parseInt(a[3]) > parseInt(b[3]) ? 1 : -1 })\n\n    const activity_panes = [\n      { menuItem: 'Open Orders', render: () => <Tab.Pane className=\"Market-tab-pane\"><MyOrders currencies={currencies} options={options} orders={all_open_orders} account={account} /></Tab.Pane> },\n      { menuItem: 'My History', render: () => <Tab.Pane className=\"Market-tab-pane\"><MyHistory currencies={currencies} options={options} orders={past_orders} account={account} /></Tab.Pane> },\n      { menuItem: 'Market History', render: () => <Tab.Pane className=\"Market-tab-pane\"><MarketHistory currencies={currencies} options={options} orders={past_orders} /></Tab.Pane> },\n      { menuItem: '5-D Leaderboard', render: () => <Tab.Pane className=\"Market-tab-pane\"><Leaderboard currencies={currencies} account={account} options={options} orders={past_orders} /></Tab.Pane> },\n    ]\n\n    const last_order = past_orders.length > 0 ? past_orders[0] : \"\"\n\n    const buy_panes = [\n      { menuItem: 'Limit Order', render: () => <Tab.Pane className=\"Market-tab-pane\"><LimitOrder currencies={currencies} options={options} last_price={last_order[\"price\"]} balances={balances} /></Tab.Pane> },\n      { menuItem: 'Market Order', render: () => <Tab.Pane className=\"Market-tab-pane\"><MarketOrder currencies={currencies} options={options} balances={balances} /></Tab.Pane> }\n    ]\n\n    return (\n      <div className=\"Market\">\n        <SideBar currencies={currencies} toggleSidebar={this.toggleSidebar} sidebar_info={sidebar_info} visible={visible} account={account} options={options} />\n        <div id=\"Market-title\"><span className=\"Market-h1\">{title}</span></div>\n        <div className=\"Market-headers\">5-Day Market Stats</div>\n        <div id=\"Market-stats\"><Stats currencies={currencies} options={options} orders={past_orders} /></div>\n\n        <Grid divided id=\"Market-orderlists\">\n          <Grid.Column className=\"Market-orderlist\" computer={8} tablet={8} mobile={16}>\n            <div className=\"Market-headers\">Order Center</div>\n            <div id=\"Market-buysell\">\n              <Tab menu={{ fluid: true, tabular: true, attached: 'top' }} panes={buy_panes} />\n            </div>\n          </Grid.Column>\n          <Grid.Column className=\"Market-orderlist\" computer={8} tablet={8} mobile={16}>\n            <div className=\"Market-headers\">Order Book</div>\n            <OrderListV2 currencies={currencies} account={account} options={options} last_order={last_order} buy_orders={open_buy_orders} sell_orders={open_sell_orders} setSidebar={this.setSidebar} />\n          </Grid.Column>\n        </Grid>\n\n        <div className=\"Market-headers\">Activity Center</div>\n        <div id=\"Market-activity-pane\">\n          <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n            <Tab menu={{ fluid: true, tabular: true, attached: 'top' }} panes={activity_panes} />\n          </Responsive>\n          <Responsive maxWidth={Responsive.onlyTablet.minWidth}>\n            <Tab menu={{ fluid: true, tabular: true, attached: 'top' }} panes={activity_panes.slice(0,3)} />\n          </Responsive>\n        </div>\n\n        <Responsive maxWidth={Responsive.onlyTablet.minWidth}>\n          <div id=\"Market-leaderboard-pane\">\n            <div className=\"Market-headers\">Leaderboard</div>\n            <Leaderboard currencies={currencies} account={account} options={options} orders={past_orders} />\n          </div>\n        </Responsive>\n      </div>\n    );\n  }\n}\n\nexport default Market","import React, { Component } from 'react'\nimport { Transition } from 'semantic-ui-react'\nimport './home.css'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate() {\n  }\n\n  render() {\n    return (\n      <div id=\"Home\">\n        <Transition transitionOnMount={true} animation='fade up' duration={1500}>\n          <div id=\"Home-title\">\n            OasisX\n          </div>\n        </Transition>\n        <Transition transitionOnMount={true} animation='fade up' duration={3500}>\n          <div id=\"Home-subtitle\">\n            The fastest UI for Oasis.\n          </div>\n        </Transition>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\nimport { Input, Form, Button } from 'semantic-ui-react'\n\nimport './wrapstation.css'\n\nclass WrapStation extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      amount_wrap: '0',\n      ui_amount_wrap: '',\n      amount_unwrap: '0',\n      ui_amount_unwrap: '',\n      bignumbers: {},\n      loading: [false, false],\n      error: [false, false],\n      success: [false, false]\n    }\n\n    this.flashSuccess = this.flashSuccess.bind(this)\n    this.flashError = this.flashError.bind(this)\n  }\n\n  componentDidMount() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = ethers.utils.bigNumberify(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  handlePercentUpdate(name, value) {\n    var ui_value = ethers.utils.formatUnits(value.toString(), 'ether')\n    if(name === \"amount_wrap\") {\n      this.setState({ amount_wrap: value, ui_amount_wrap: ui_value })\n    } else if(name === \"amount_unwrap\") {\n      this.setState({ amount_unwrap: value, ui_amount_unwrap: ui_value })\n    } else {\n      return\n    }\n  }\n\n  handleUserUpdate(name, value) {\n    var internal_value = 0\n    try{\n      if(/\\S/.test(value)) {\n        internal_value = ethers.utils.parseUnits(value.toString(), 'ether')\n      }\n    } catch (err) {\n      console.log(err)\n      return\n    }\n\n    if(name === \"ui_amount_wrap\") {\n      this.setState({ ui_amount_wrap: value, amount_wrap: internal_value })\n    } else if(name === \"ui_amount_unwrap\") {\n      this.setState({ ui_amount_unwrap: value, amount_unwrap: internal_value })\n    } else {\n      return\n    }\n  }\n\n\n  flashSuccess(index) {\n    var { loading, success, error } = this.state\n    loading[index] = false\n    success[index] = true\n    error[index] = false\n    this.setState({ loading, success, error })\n    setTimeout(() => this.reset(index), 1500)\n  }\n\n  flashError(index) {\n    var { loading, success, error } = this.state\n    loading[index] = false\n    success[index] = false\n    error[index] = true\n    this.setState({ loading, success, error })\n    setTimeout(() => {\n      var { loading, success, error } = this.state\n      loading[index] = false\n      success[index] = false\n      error[index] = false\n      this.setState({ error })\n    }, 1500)\n  }\n\n  reset(index) {\n    var { loading, success, error, amount_wrap, amount_unwrap, ui_amount_wrap, ui_amount_unwrap } = this.state\n    loading[index] = false\n    success[index] = false\n    error[index] = false\n    if(index === 0) {\n      amount_wrap = '0'\n      ui_amount_wrap = ''\n    }\n    if(index === 1) {\n      amount_unwrap = '0'\n      ui_amount_unwrap = ''\n    }\n    this.setState({ loading, success, error, amount_wrap, amount_unwrap, ui_amount_wrap, ui_amount_unwrap })\n  }\n\n  onWrap = async () => {\n    // Grab the wrap function from the contract instance and the account and amount we want to execute it with\n    const deposit = this.props.options.contracts.WETH.deposit\n    var amount = this.state.amount_wrap\n\n    // Need to check if the amount value is an empty string/undefined/null and that it's greater than 0\n    if(amount && amount > 0) {\n      var { loading } = this.state\n      loading[0] = true\n      this.setState({ loading })\n      console.log(\"SENDING \" + amount + \" TO WRAPPER...\")\n      try {\n        var tx = await deposit({value: amount})\n        await tx.wait()\n        this.flashSuccess(0)\n      } catch (error) {\n        this.flashError(0)\n      }\n    } else {\n      console.log(\"Error: No amount chosen\")\n    }\n  }\n\n  onUnwrap = async () => {\n    const withdraw = this.props.options.contracts.WETH.withdraw\n    var amount = this.state.amount_unwrap\n\n    if(amount && amount > 0) {\n      var { loading } = this.state\n      loading[1] = true\n      this.setState({ loading })\n      console.log(\"SENDING \" + amount + \" TO UNWRAPPER...\")\n      try {\n        var tx = await withdraw(amount.toString())\n        await tx.wait()\n        this.flashSuccess(1)\n      } catch (error) {\n        this.flashError(1)\n      }\n    } else {\n      console.log(\"Error: No amount chosen\")\n    }\n  }\n\n  render() {\n    var { weth_balance, eth_balance } = this.props\n    var { ui_amount_wrap, ui_amount_unwrap, bignumbers, loading, success, error } = this.state\n\n    // Convert to BigNumbers since they will have potential math done on them (risk of overflow/underflow)\n    eth_balance = ethers.utils.bigNumberify(eth_balance)\n    weth_balance = ethers.utils.bigNumberify(weth_balance)\n\n    var button_text = [\"WRAP\", \"UNWRAP\"]\n    for(var i = 0; i < button_text.length; i++) {\n      if(success[i]) {\n        button_text[i] = \"SUCCESS\"\n      }\n      if(error[i]) {\n        button_text[i] = \"FAILED\"\n      }\n    }\n\n    return (\n      <div className=\"WrapStation\">\n        <div id=\"WrapStation-title\">Wrap / Unwrap</div>\n        <Form onSubmit={this.handleSubmit} size='tiny' id=\"WrapStation-form\">\n          <div className=\"WrapStation-headers\">Wrap <span id=\"WrapStation-warning\"><span className=\"red\">WARNING:</span> DO NOT WRAP ALL YOUR ETHER</span></div>\n          <Form.Group unstackable className=\"WrapStation-formgroup\">\n            <Form.Field width={11}>\n              <Input\n                label={{ basic: true, content: \"ETH\" }}\n                labelPosition='right'\n                placeholder='Enter Amount ETH...'\n                value={ui_amount_wrap}\n                disabled={ loading[0] || error[0] || success[0] }\n                onChange={(e) => { this.handleUserUpdate('ui_amount_wrap', e.target.value) }}\n              />\n            </Form.Field>\n            <Form.Button disabled={ loading[0] || error[0] || success[0] || ui_amount_wrap === \"\" } loading={loading[0]} width={4} className=\"WrapStation-button\" color={error[0] ? 'red' : 'green'} size='small' onClick={ () => this.onWrap() } >{button_text[0]}</Form.Button>\n          </Form.Group>\n          <Button.Group className=\"WrapStation-mini-buttons\" size='mini' basic inverted>\n            <Button disabled={ loading[0] || error[0] || success[0] } onClick={ () => this.handleUserUpdate(\"ui_amount_wrap\", \"\") } >0%</Button>\n            <Button disabled={ loading[0] || error[0] || success[0] } onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.div(bignumbers[4])) } >25%</Button>\n            <Button disabled={ loading[0] || error[0] || success[0] } onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.div(bignumbers[2])) } >50%</Button>\n            <Button disabled={ loading[0] || error[0] || success[0] } onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n            <Button disabled={ loading[0] || error[0] || success[0] } onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.mul(bignumbers[9]).div(bignumbers[10])) } >90%</Button>\n          </Button.Group>\n          <div className=\"WrapStation-headers\">Unwrap</div>\n          <Form.Group unstackable className=\"WrapStation-formgroup\">\n            <Form.Field width={10}>\n              <Input\n                label={{ basic: true, content: \"WETH\" }}\n                labelPosition='right'\n                placeholder='Enter Amount WETH...'\n                value={ui_amount_unwrap}\n                disabled={ loading[1] || error[1] || success[1] }\n                onChange={(e) => { this.handleUserUpdate('ui_amount_unwrap', e.target.value) }}\n              />\n            </Form.Field>\n            <Form.Button disabled={ loading[1] || error[1] || success[1] || ui_amount_unwrap === \"\" } loading={loading[1]} width={4} className=\"WrapStation-button\" color={error[1] ? 'red' : 'green'} size='small' onClick={ () => this.onUnwrap() } >{button_text[1]}</Form.Button>\n          </Form.Group>\n          <Button.Group className=\"WrapStation-mini-buttons\" size='mini' basic inverted>\n            <Button disabled={ loading[1] || error[1] || success[1] } onClick={ () => this.handleUserUpdate(\"ui_amount_unwrap\", \"\") } >0%</Button>\n            <Button disabled={ loading[1] || error[1] || success[1] } onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.div(bignumbers[4])) } >25%</Button>\n            <Button disabled={ loading[1] || error[1] || success[1] } onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.div(bignumbers[2])) } >50%</Button>\n            <Button disabled={ loading[1] || error[1] || success[1] } onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n            <Button disabled={ loading[1] || error[1] || success[1] } onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance) } >100%</Button>\n          </Button.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default WrapStation\n","import React, { Component } from 'react'\nimport { ethers } from 'ethers';\nimport { Header, Table, Checkbox, Icon } from 'semantic-ui-react'\nimport './infobar.css'\n\nimport WrapStation from './wrapstation/wrapstation'\nimport HumanName from '../utils/humanname/humanname'\n\nclass Infobar extends Component {\n  constructor(props, context) {\n    super(props)\n    this.state = {\n      currencies: {\n        \"WETH\": {\n          balance: 0,\n          approved: 0\n        },\n        \"DAI\": {\n          balance: 0,\n          approved: 0\n        },\n        \"MKR\": {\n          balance: 0,\n          approved: 0\n        },\n        \"ETH\": {\n          balance: 0,\n          approved: 0\n        }\n      },\n      account: \"\"\n    }\n\n    this.updateInfo = this.updateInfo.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateInfo()\n  }\n\n  async updateInfo() {\n    const { options } = this.props\n    let account = await options.signer.getAddress()\n    let market_address = options.contracts.Market.address\n\n    const weth_balance = await options.contracts.WETH.balanceOf(account)\n    const dai_balance = await options.contracts.DAI.balanceOf(account)\n    const mkr_balance = await options.contracts.MKR.balanceOf(account)\n    \n    const weth_approval = await options.contracts.WETH.allowance(account, market_address)\n    const dai_approval = await options.contracts.DAI.allowance(account, market_address)\n    const mkr_approval = await options.contracts.MKR.allowance(account, market_address)\n    \n    var eth_balance = await options.provider.getBalance(account)\n\n    var currencies = {\n      \"WETH\": {\n        balance: weth_balance.toString(),\n        approved: weth_approval.toString()\n      },\n      \"DAI\": {\n        balance: dai_balance.toString(),\n        approved: dai_approval.toString()\n      },\n      \"MKR\": {\n        balance: mkr_balance.toString(),\n        approved: mkr_approval.toString()\n      },\n      \"ETH\": {\n        balance: eth_balance.toString(),\n        approved: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n      }\n    }\n\n    this.setState({ currencies, account })\n\n    setTimeout(this.updateInfo, 3000)\n  }\n\n  async approveCurrencyForAmount(currency, amount) {\n    var { options } = this.props\n    \n    let market_address = options.contracts.Market.address\n\n    if(currency in options.contracts) {\n      var contract = options.contracts[currency]\n      await contract.approve(market_address, amount)\n    }\n  }\n\n  approveCurrency(currency) {\n    this.approveCurrencyForAmount(currency, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\")\n  }\n\n  unapproveCurrency(currency) {\n    this.approveCurrencyForAmount(currency, \"0\")\n  }\n\n  toggleApproval(currency, current_approval) {\n    let new_approval = !current_approval\n    if(new_approval) {\n      this.approveCurrency(currency)\n    } else {\n      this.unapproveCurrency(currency)\n    }\n  }\n\n  getUIBalance(raw_balance) {\n    let UI_balance = raw_balance\n    if(raw_balance != null) {\n      UI_balance = Math.round(ethers.utils.formatUnits(raw_balance.toString(), 'ether') * 1000) / 1000\n    } else {\n      UI_balance = \"Error...\"\n    }\n    return UI_balance    \n  }\n\n  getUIAllowance(raw_balance, raw_allowance) {\n    let UI_allowance = false\n    raw_allowance = ethers.utils.bigNumberify(raw_allowance)\n    let balance = ethers.utils.bigNumberify(raw_balance)\n    if(raw_allowance.gt(balance)) {\n      UI_allowance = true\n    } else {\n      UI_allowance = false\n    }\n    return UI_allowance\n  }\n\n  render() {\n    const { currencies, account } = this.state\n    const { padded, closeSidebar, options } = this.props\n\n    const vals = Object.keys(currencies).map((key) => {\n      var obj = {}\n      obj[\"name\"] = key\n      obj[\"balance\"] = \"0\"\n      obj[\"approved\"] = false\n      var raw_balance = currencies[key][\"balance\"]\n      var raw_allowance = currencies[key][\"approved\"]\n      if(raw_balance && raw_allowance) {\n        obj[\"balance\"] = this.getUIBalance(raw_balance)\n        obj[\"approved\"] = this.getUIAllowance(raw_balance, raw_allowance)      \n      }\n      return obj\n    })\n\n    var x_icon = <Icon name=\"close\" id=\"Infobar-x\" size=\"large\" onClick={closeSidebar} />\n    if(padded) {\n      x_icon = null\n    }\n\n    return (\n      <div id='Infobar'>\n        <div className='Infobar-header'><HumanName address={account} />{x_icon}</div>\n        <Table basic='very' padded={\"very\"} striped unstackable id=\"Infobar-table\">\n          <Table.Header id=\"Infobar-table-header\">\n            <Table.Row>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Token</Table.HeaderCell>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Balance</Table.HeaderCell>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Approved</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {vals.map((item, index) => {\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell>\n                    <Header className='Infobar-table-entry' textAlign='left'>{item.name}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <Header className='Infobar-table-entry' textAlign='left'>{item.balance}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <Checkbox toggle disabled={item.name === \"ETH\"} checked={item.approved} onClick={ () => this.toggleApproval(item.name, item.approved) } />\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>\n        </Table>\n\n        <WrapStation options={options} weth_balance={currencies[\"WETH\"][\"balance\"]} eth_balance={currencies[\"ETH\"][\"balance\"]} />\n      </div>\n    )\n  }\n}\n\nexport default Infobar;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Responsive, Icon, Dropdown, Sidebar, Segment } from 'semantic-ui-react'\nimport './navbar.css'\nimport logo from '../../images/x.svg'\nimport Infobar from '../infobar/infobar'\n\nclass Navbar extends Component {\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeItem: '',\n      visible: false\n    }\n  }\n\n  componentDidUpdate() {\n  }\n\n  toggleVisible = () => {\n    this.setState({ visible: !this.state.visible })\n  }\n\n  render() {\n    const { children, options } = this.props\n    const { activeItem, visible } = this.state\n\n    // var title = \"OasisX\"\n    var other_buttons = []\n    other_buttons.push(\n      {\n        name: 'WETH/DAI',\n        href: '/WETH_DAI' \n      },\n      {\n        name: 'MKR/WETH',\n        href: '/MKR_WETH'\n      },\n      {\n        name: 'MKR/DAI',\n        href: '/MKR_DAI'\n      }\n    )\n\n\n    return (\n      <div>\n        <Responsive {...Responsive.onlyMobile}>\n          <Menu \n            borderless\n            fixed='top'\n            id='Navbar-mobile'\n          >\n            <Menu.Item\n              name='Home'\n              active={activeItem === 'Home'}\n              href='/'\n              className='Navbar-item'\n            >\n              <div className='Navbar-button-mobile' id='Navbar-logo-container'><img src={logo} alt='logo' id='Navbar-logo-mobile' /></div>\n            </Menu.Item>\n            <Dropdown item text='Markets' className='Navbar-dropdown'>\n              <Dropdown.Menu>\n                {\n                  other_buttons.map((button, idx) => {\n                    return (\n                        <Dropdown.Item\n                          name={button.name}\n                          active={activeItem === button.name}\n                          className='Navbar-item'\n                          as={Link}\n                          to={button.href}\n                          key={idx}\n                        >\n                        {button.name}\n                      </Dropdown.Item>\n                    )\n                  })\n                }\n              </Dropdown.Menu>\n            </Dropdown>\n            <Menu.Menu position='right'>\n              <Menu.Item>\n                <Icon name='sidebar' inverted onClick={ this.toggleVisible } />\n              </Menu.Item>                \n            </Menu.Menu>\n          </Menu>\n          <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Navbar-Side_info_bar\">\n            <Infobar options={options} padded={false} closeSidebar={this.toggleVisible} />\n          </Sidebar>\n          { children }\n        </Responsive>\n\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n          <Menu \n            secondary \n            vertical\n            size='mini'\n            id='Navbar'\n          >\n            <Menu.Item\n              name='Home'\n              className='Navbar-item'\n              as={Link}\n              to={'/'}\n            >\n              <div className='Navbar-button' id='Navbar-logo-container'><img src={logo} alt='logo' className='Navbar-icon' /></div>\n            </Menu.Item>\n            {\n              other_buttons.map((button, idx) => {\n                return (\n                    <Menu.Item\n                      name={button.name}\n                      active={activeItem === button.name}\n                      className='Navbar-item'\n                      onClick={this.handleToggle}\n                      as={Link}\n                      to={button.href}\n                      key={idx}\n                    >\n                    <div className='Navbar-button'>{button.name}</div>\n                  </Menu.Item>\n                )\n              })\n            }\n          </Menu>\n          { children }\n        </Responsive>\n      </div>\n    )\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { Responsive } from 'semantic-ui-react'\n\nimport './App.css'\n\nimport Market from '../market/market'\nimport Home from '../home/home'\nimport Navbar from '../navbar/navbar'\nimport Infobar from '../infobar/infobar'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    var { options } = this.props\n\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <div>\n            <Navbar options={options} />\n            <div id=\"App_market_container\">\n                <Switch>\n                  <Route exact path='/' render={() => <Home />} />\n                  <Route exact path='/WETH_DAI' render={() => <Market key={'WETH_DAI'} options={options} currencies={['WETH', 'DAI']} />} />\n                  <Route exact path='/MKR_WETH' render={() => <Market key={'MKR_WETH'} options={options} currencies={['MKR', 'WETH']} />} />\n                  <Route exact path='/MKR_DAI' render={() => <Market  key={'MKR_DAI'} options={options} currencies={['MKR', 'DAI']} />} />\n                </Switch>\n            </div>\n          </div>\n        </HashRouter>\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n          <Infobar padded={true} options={options} />\n        </Responsive>\n      </div>\n    );\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-virtualized/styles.css'\n\nimport './index.css';\nimport App from './containers/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { ethers } from 'ethers';\n\n// let provider = new ethers.getDefaultProvider()\nvar ethereum = null\nif(window.web3) {\n\tethereum = window.ethereum ? window.ethereum : window.web3.currentProvider\n}\nvar provider = null\nvar signer = null\nvar readOnly = true\n\nvar contract_initializer = null\nif(ethereum) {\n\tprovider = new ethers.providers.Web3Provider(ethereum)\n\tsigner = provider.getSigner()\n\tcontract_initializer = signer\n\treadOnly = false\n} else {\n\tprovider = new ethers.getDefaultProvider()\n\tsigner = new ethers.Wallet.createRandom()\n\tcontract_initializer = provider\n}\n\nconst config = require(\"./config\")\nconst erc20Abi = require(\"./abi/standard-token/erc20\")\nconst WEthAbi = require(\"./abi/standard-token/ds-eth-token\")\nconst MatchingMarketAbi = require(\"./abi/maker-otc/matching-market\");\nconst SupportMethodsAbi = require(\"./abi/otc-support-methods/otc-support-methods\")\n\n// const WETH = new web3.eth.Contract(WEthAbi.interface, config[\"tokens\"][\"main\"][\"W-ETH\"])\n// const DAI = new web3.eth.Contract(erc20Abi.interface, config[\"tokens\"][\"main\"][\"DAI\"])\n// const MKR = new web3.eth.Contract(erc20Abi.interface, config[\"tokens\"][\"main\"][\"MKR\"])\n// const market = new web3.eth.Contract(MatchingMarketAbi.interface, config[\"market\"][\"main\"][\"address\"])\n// const supportMethods = new web3.eth.Contract(SupportMethodsAbi.interface, config[\"otcSupportMethods\"][\"main\"][\"address\"])\n\nconst contracts = {\n\tWETH: new ethers.Contract(config[\"tokens\"][\"main\"][\"W-ETH\"], WEthAbi.interface, contract_initializer),\n\tDAI: new ethers.Contract(config[\"tokens\"][\"main\"][\"DAI\"], erc20Abi.interface, contract_initializer),\n\tMKR: new ethers.Contract(config[\"tokens\"][\"main\"][\"MKR\"], erc20Abi.interface, contract_initializer),\n\tMarket: new ethers.Contract(config[\"market\"][\"main\"][\"address\"], MatchingMarketAbi.interface, contract_initializer),\n\tSupportMethods: new ethers.Contract(config[\"otcSupportMethods\"][\"main\"][\"address\"], SupportMethodsAbi.interface, contract_initializer)\n}\n\nconst options = {\n\tprovider: provider,\n\tsigner: signer,\n\tcontracts: contracts,\n\treadOnly: readOnly\n}\n\nReactDOM.render(<App options={options} />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}