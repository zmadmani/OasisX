{"version":3,"sources":["images/x.svg","containers/utils/humanname/humanname.js","containers/market/orderlist/orderlist.js","containers/market/limitorder/limitorder.js","containers/market/marketorder/marketorder.js","containers/market/myorders/myorders.js","containers/market/stats/chart/chart.js","containers/market/stats/stats.js","containers/market/markethistory/markethistory.js","containers/market/myhistory/myhistory.js","containers/market/sidebar/sidebar.js","containers/market/market.js","containers/home/home.js","containers/infobar/wrapstation/wrapstation.js","containers/infobar/infobar.js","containers/navbar/navbar.js","containers/App/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","first_names","last_names","colors","fontColors","HumanName","nextProps","nextState","this","props","address","web3","drizzle","two_hundred","utils","toBN","substr","portion_1","hexToNumberString","portion_2","mod","toString","initials","num_colors","long_num","color_idx","_this$props","icon_only","inactive_link","_this$getName","getName","_this$getName2","Object","slicedToArray","name","_this$getColor","getColor","_this$getColor2","backgroundColor","fontColor","react_default","a","createElement","className","color","onClick","window","open","icon","style","final","title","Component","OrderList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","orders","timeout","max_order","buildRow","bind","assertThisInitialized","updateOrders","clearTimeout","getOrders","Math","max","apply","map","o","curr_1_amt","setTimeout","setState","currencies","type","market","contracts","Market","length","token_addr_0","token_addr_1","pay_token","buy_token","SupportMethods","methods","getOffers","rawOrders","processOrders","n","i","id","maker","pay_amount","fromWei","buy_amount","price","order","round","curr_0_amt","push","x","parts","split","replace","join","item","index","_this2","_this$props2","drizzleState","account","accounts","ratio","color_0","color_1","backgroundImage","concat","backgroundSize","backgroundRepeat","class_names","Table","Row","key","setSidebar","Cell","textAlign","width","humanname_humanname","numberWithCommas","striped","basic","celled","unstackable","Header","HeaderCell","Icon","size","Body","LimitOrder","loading","init","error","success","amount_0","ui_amount_0","amount_1","ui_amount_1","currency_0_balance","currency_1_balance","bignumbers","timer","last_price","subscription","handleSubmit","updateBalances","flashSuccess","flashError","generateBigNumbers","getPastOrders","subscribeToEvents","then","unsubscribe","pay_amt","buy_amt","lte","one","toWei","parseFloat","mul","div","curr_1_addr","curr_2_addr","buy_addr","pay_addr","eth","getBlockNumber","latestBlock","hashKey1","soliditySha3","hashKey2","Contract","abi","events","LogTake","filter","pair","fromBlock","on","event","returnValues","getType","offer","getPrice","getPastEvents","toBlock","last_event","balanceOf","_this$props5","curr_gem_0","curr_gem_1","data","pay_gem","buy_gem","console","log","send","from","gasPrice","_this3","_this4","value","test","amount_1_bn","amount_0_bn","price_bn","one_bn","err","_this5","_this$state2","can_buy","can_sell","curr_0_balance","curr_1_balance","gte","gt","side_text","Loader","active","inline","Form","Field","Input","label","content","labelPosition","placeholder","onChange","e","handlePriceChange","target","Group","widths","disabled","handleAmountChange","Button","inverted","handleAmountPercentageChange","MarketOrder","amounts","ui_amounts","expected_price","expected_amount","handleMarketBuy","handleMarketSell","_this$state","min_expected_amount","min_fill_amount","sellAllAmount","_this$state3","_this$state4","_this$props3","_this$state5","reset","_this$state6","_this5$state","_this$state7","will_receive","giving","getBuyAmount","_this6","_this$state9","new_amounts","slice","new_ui_amounts","ui_amount","amount_bn","setExpectedAmount","_this7","_this$state10","_this8","_this$state11","side_texts","Grid","divided","columns","relaxed","stackable","Column","verticalAlign","MyOrders","buy_orders","sell_orders","sort","b","parseInt","cancel","cacheSend","orders_table","background_item","cancelOrder","selectable","styler","CrossHairs","y","pointerEvents","stroke","x1","y1","x2","y2","height","React","Chart","handleTrackerChange","tracker","handleTimeRangeChange","timerange","handleMouseMove","chart_data","volume_data","selection","points","buildChartPoints","TimeSeries","volume_points","last_item","Index","getIndexString","Date","reverse","chart","start_time","range","begin","end_time","end","setHours","getHours","min_val","crop","min","max_val","padding","max_volume","entry","timeRange","minTime","maxTime","timeAxisAngledLabels","timeAxisHeight","paddingLeft","paddingRight","enablePanZoom","minDuration","onTrackerChanged","onBackgroundClick","onTimeRangeChanged","onMouseMove","showGrid","background","borderStyle","borderWidth","borderColor","paddingTop","timeAxisStyle","ticks","opacity","stroke-dasharray","values","fill","font-size","hideAxisLine","format","axis","series","interpolation","onSelectionChange","chart_CrossHairs","Stats","stats","num_users","num_buys","num_sells","buy_volume","sell_volume","last_type","subsciption","buildStat","updateStats","are_stats_updated","old_stats","new_stats","users","symbol","document","eventsToOrders","timestamp","toLocaleTimeString","toLocaleDateString","raw_timestamp","curr_1","curr_2","taker","first","second","keys","statistics","stats_chart_chart","mobile","tablet","computer","List","Item","Content","Description","MarketHistory","_this$props4","offers_table","participants","MyHistory","subscriptions","taker_subscription","maker_subscription","true_type","taker_events","maker_events","SideBar","executeTrade","sidebar_info","inputs","will_receive_wholenums","buy","button_loading","visible","amount","info","owner","button_success","button_error","updateInfo","stopLoading","getOffer","getOwner","toggleSidebar","internal_value","ui_value","balance","lt","action","subtitle","updated_info","getUpdatedInfo","Sidebar","as","Segment","animation","direction","currency","receive_currency","offered","max_take","getMaxTake","calcWillReceive","button_text","handleUserChange","numBuys","numSells","buy_token_addr","sell_token_addr","numBuysKey","getOfferCount","cacheCall","numSellsKey","assign","activity_panes","menuItem","render","Tab","Pane","myorders_myorders","myhistory_myhistory","markethistory_markethistory","buy_panes","limitorder_limitorder","marketorder_marketorder","sidebar_sidebar","stats_stats","menu","fluid","tabular","attached","panes","orderlist_orderlist","Home","Transition","transitionOnMount","duration","WrapStation","onWrap","deposit","WETH","amount_wrap","onUnwrap","withdraw","amount_unwrap","ui_amount_wrap","ui_amount_unwrap","_this3$state","weth_balance","eth_balance","onSubmit","handleUserUpdate","handlePercentUpdate","Infobar","context","approved","DAI","MKR","ETH","market_address","dai_balance","mkr_balance","allowance","weth_approval","dai_approval","mkr_approval","accountBalances","approve","approveCurrencyForAmount","current_approval","approveCurrency","unapproveCurrency","raw_balance","raw_allowance","padded","closeSidebar","vals","obj","getUIBalance","getUIAllowance","ui_account","x_icon","Checkbox","toggle","checked","toggleApproval","wrapstation_wrapstation","Navbar","handleItemClick","_ref","activeItem","toggleVisible","children","other_buttons","href","Responsive","onlyMobile","Menu","borderless","fixed","src","logo","alt","Dropdown","text","button","idx","Link","to","position","infobar_infobar","minWidth","onlyTablet","secondary","vertical","handleToggle","App","store","subscribe","getState","drizzleStatus","initialized","HashRouter","navbar_navbar","Switch","Route","exact","path","home_home","containers_market_market","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","Web3","givenProvider","config","require","erc20Abi","WEthAbi","MatchingMarketAbi","SupportMethodsAbi","options","contractName","web3Contract","interface","polls","blocks","syncAlways","drizzleStore","generateStore","Drizzle","ReactDOM","containers_App_App","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.07ac3aee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/x.23ec4264.svg\";","import React, { Component } from 'react'\n\nimport './humanname.css'\n\nvar first_names = [\"JAMES\", \"JOHN\", \"ROBERT\", \"MICHAEL\", \"WILLIAM\", \"DAVID\", \"RICHARD\", \"CHARLES\", \"JOSEPH\", \"THOMAS\", \"CHRISTOPHER\", \"DANIEL\", \"PAUL\", \"MARK\", \"DONALD\", \"GEORGE\", \"KENNETH\", \"STEVEN\", \"EDWARD\", \"BRIAN\", \"RONALD\", \"ANTHONY\", \"KEVIN\", \"JASON\", \"MATTHEW\", \"GARY\", \"TIMOTHY\", \"JOSE\", \"LARRY\", \"JEFFREY\", \"FRANK\", \"SCOTT\", \"ERIC\", \"STEPHEN\", \"ANDREW\", \"RAYMOND\", \"GREGORY\", \"JOSHUA\", \"JERRY\", \"DENNIS\", \"WALTER\", \"PATRICK\", \"PETER\", \"HAROLD\", \"DOUGLAS\", \"HENRY\", \"CARL\", \"ARTHUR\", \"RYAN\", \"ROGER\", \"JOE\", \"JUAN\", \"JACK\", \"ALBERT\", \"JONATHAN\", \"JUSTIN\", \"TERRY\", \"GERALD\", \"KEITH\", \"SAMUEL\", \"WILLIE\", \"RALPH\", \"LAWRENCE\", \"NICHOLAS\", \"ROY\", \"BENJAMIN\", \"BRUCE\", \"BRANDON\", \"ADAM\", \"HARRY\", \"FRED\", \"WAYNE\", \"BILLY\", \"STEVE\", \"LOUIS\", \"JEREMY\", \"AARON\", \"RANDY\", \"HOWARD\", \"EUGENE\", \"CARLOS\", \"RUSSELL\", \"BOBBY\", \"VICTOR\", \"MARTIN\", \"ERNEST\", \"PHILLIP\", \"TODD\", \"JESSE\", \"CRAIG\", \"ALAN\", \"SHAWN\", \"CLARENCE\", \"SEAN\", \"PHILIP\", \"CHRIS\", \"JOHNNY\", \"EARL\", \"JIMMY\", \"ANTONIO\", \"DANNY\", \"BRYAN\", \"TONY\", \"LUIS\", \"MIKE\", \"STANLEY\", \"LEONARD\", \"NATHAN\", \"DALE\", \"MANUEL\", \"RODNEY\", \"CURTIS\", \"NORMAN\", \"ALLEN\", \"MARVIN\", \"VINCENT\", \"GLENN\", \"JEFFERY\", \"TRAVIS\", \"JEFF\", \"CHAD\", \"JACOB\", \"LEE\", \"MELVIN\", \"ALFRED\", \"KYLE\", \"FRANCIS\", \"BRADLEY\", \"JESUS\", \"HERBERT\", \"FREDERICK\", \"RAY\", \"JOEL\", \"EDWIN\", \"DON\", \"EDDIE\", \"RICKY\", \"TROY\", \"RANDALL\", \"BARRY\", \"ALEXANDER\", \"BERNARD\", \"MARIO\", \"LEROY\", \"FRANCISCO\", \"MARCUS\", \"MICHEAL\", \"THEODORE\", \"CLIFFORD\", \"MIGUEL\", \"OSCAR\", \"JAY\", \"JIM\", \"TOM\", \"CALVIN\", \"ALEX\", \"JON\", \"RONNIE\", \"BILL\", \"LLOYD\", \"TOMMY\", \"LEON\", \"DEREK\", \"WARREN\", \"DARRELL\", \"JEROME\", \"FLOYD\", \"LEO\", \"ALVIN\", \"TIM\", \"WESLEY\", \"GORDON\", \"DEAN\", \"GREG\", \"JORGE\", \"DUSTIN\", \"PEDRO\", \"DERRICK\", \"DAN\", \"LEWIS\", \"ZACHARY\", \"COREY\", \"HERMAN\", \"MAURICE\", \"VERNON\", \"ROBERTO\", \"CLYDE\", \"GLEN\", \"HECTOR\", \"SHANE\", \"RICARDO\", \"SAM\", \"RICK\", \"LESTER\", \"BRENT\", \"RAMON\", \"CHARLIE\", \"TYLER\", \"GILBERT\", \"GENE\"]\nvar last_names = [\"SMITH\", \"JOHNSON\", \"WILLIAMS\", \"JONES\", \"BROWN\", \"DAVIS\", \"MILLER\", \"WILSON\", \"MOORE\", \"TAYLOR\", \"ANDERSON\", \"THOMAS\", \"JACKSON\", \"WHITE\", \"HARRIS\", \"MARTIN\", \"THOMPSON\", \"GARCIA\", \"MARTINEZ\", \"ROBINSON\", \"CLARK\", \"RODRIGUEZ\", \"LEWIS\", \"LEE\", \"WALKER\", \"HALL\", \"ALLEN\", \"YOUNG\", \"HERNANDEZ\", \"KING\", \"WRIGHT\", \"LOPEZ\", \"HILL\", \"SCOTT\", \"GREEN\", \"ADAMS\", \"BAKER\", \"GONZALEZ\", \"NELSON\", \"CARTER\", \"MITCHELL\", \"PEREZ\", \"ROBERTS\", \"TURNER\", \"PHILLIPS\", \"CAMPBELL\", \"PARKER\", \"EVANS\", \"EDWARDS\", \"COLLINS\", \"STEWART\", \"SANCHEZ\", \"MORRIS\", \"ROGERS\", \"REED\", \"COOK\", \"MORGAN\", \"BELL\", \"MURPHY\", \"BAILEY\", \"RIVERA\", \"COOPER\", \"RICHARDSON\", \"COX\", \"HOWARD\", \"WARD\", \"TORRES\", \"PETERSON\", \"GRAY\", \"RAMIREZ\", \"JAMES\", \"WATSON\", \"BROOKS\", \"KELLY\", \"SANDERS\", \"PRICE\", \"BENNETT\", \"WOOD\", \"BARNES\", \"ROSS\", \"HENDERSON\", \"COLEMAN\", \"JENKINS\", \"PERRY\", \"POWELL\", \"LONG\", \"PATTERSON\", \"HUGHES\", \"FLORES\", \"WASHINGTON\", \"BUTLER\", \"SIMMONS\", \"FOSTER\", \"GONZALES\", \"BRYANT\", \"ALEXANDER\", \"RUSSELL\", \"GRIFFIN\", \"DIAZ\", \"HAYES\", \"MYERS\", \"FORD\", \"HAMILTON\", \"GRAHAM\", \"SULLIVAN\", \"WALLACE\", \"WOODS\", \"COLE\", \"WEST\", \"JORDAN\", \"OWENS\", \"REYNOLDS\", \"FISHER\", \"ELLIS\", \"HARRISON\", \"GIBSON\", \"MCDONALD\", \"CRUZ\", \"MARSHALL\", \"ORTIZ\", \"GOMEZ\", \"MURRAY\", \"FREEMAN\", \"WELLS\", \"WEBB\", \"SIMPSON\", \"STEVENS\", \"TUCKER\", \"PORTER\", \"HUNTER\", \"HICKS\", \"CRAWFORD\", \"HENRY\", \"BOYD\", \"MASON\", \"MORALES\", \"KENNEDY\", \"WARREN\", \"DIXON\", \"RAMOS\", \"REYES\", \"BURNS\", \"GORDON\", \"SHAW\", \"HOLMES\", \"RICE\", \"ROBERTSON\", \"HUNT\", \"BLACK\", \"DANIELS\", \"PALMER\", \"MILLS\", \"NICHOLS\", \"GRANT\", \"KNIGHT\", \"FERGUSON\", \"ROSE\", \"STONE\", \"HAWKINS\", \"DUNN\", \"PERKINS\", \"HUDSON\", \"SPENCER\", \"GARDNER\", \"STEPHENS\", \"PAYNE\", \"PIERCE\", \"BERRY\", \"MATTHEWS\", \"ARNOLD\", \"WAGNER\", \"WILLIS\", \"RAY\", \"WATKINS\", \"OLSON\", \"CARROLL\", \"DUNCAN\", \"SNYDER\", \"HART\", \"CUNNINGHAM\", \"BRADLEY\", \"LANE\", \"ANDREWS\", \"RUIZ\", \"HARPER\", \"FOX\", \"RILEY\", \"ARMSTRONG\", \"CARPENTER\", \"WEAVER\", \"GREENE\", \"LAWRENCE\", \"ELLIOTT\", \"CHAVEZ\", \"SIMS\", \"AUSTIN\", \"PETERS\", \"KELLEY\", \"FRANKLIN\", \"LAWSON\"]\nvar colors = [\"#001f3f\", \"#0074D9\", \"#7FDBFF\", \"#39CCCC\", \"#2ECC40\", \"#01FF70\", \"#FFDC00\", \"#FF851B\", \"#3D9970\", \"#F15152\", \"#111111\", \"#AAAAAA\", \"#DDDDDD\"]\nvar fontColors = [\"#FFFFFF\", \"#FFFFFF\", \"#111111\", \"#111111\", \"#111111\", \"#111111\", \"#111111\", \"#111111\", \"#111111\", \"#111111\", \"#FFFFFF\", \"#111111\", \"#111111\"]\nclass HumanName extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.props.address !== nextProps.address) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  getName(address) {\n    var web3 = this.props.drizzle.web3\n    var two_hundred = web3.utils.toBN(\"200\")\n\n    address = address.substr(2)\n    var portion_1 = web3.utils.hexToNumberString(address.substr(0, 20))\n    var portion_2 = web3.utils.hexToNumberString(address.substr(20, 40))\n    \n    portion_1 = web3.utils.toBN(portion_1).mod(two_hundred).toString()\n    portion_2 = web3.utils.toBN(portion_2).mod(two_hundred).toString()\n\n    if(portion_1 !== 0 && portion_2 !== 0) {\n      var initials = first_names[portion_1][0] + last_names[portion_2][0]\n      return [first_names[portion_1] + \" \" + last_names[portion_2], initials]\n    } else {\n      return [address, \"0x\"]\n    }\n  }\n\n  getColor(address) {\n    var web3 = this.props.drizzle.web3\n    var num_colors = web3.utils.toBN(\"13\")\n\n    address = address.substr(2)\n    var long_num = web3.utils.hexToNumberString(address)\n\n    var color_idx = web3.utils.toBN(long_num).mod(num_colors).toString()\n    return [colors[color_idx], fontColors[color_idx]]\n  }\n\n  render() {\n    var { address, icon_only, inactive_link } = this.props\n\n    var [ name, initials ] = this.getName(address)\n    var [ backgroundColor, fontColor ] = this.getColor(address)\n    name = (<div className=\"HumanName-name\">{name}</div>)\n    var color = {\n      \"backgroundColor\": backgroundColor,\n      \"color\": fontColor\n    }\n    var onClick = () => window.open('https://etherscan.io/address/' + address, '_blank')\n    if(inactive_link) {\n      onClick = null\n    }\n\n    var icon = (<div className=\"HumanName-circle\" style={color}><span className=\"HumanName-initials\">{initials}</span></div>)\n    var final = (<span className=\"HumanName\" title={address} onClick={onClick}>{icon}{name}</span>)\n    if( icon_only ) {\n      final = (<span className=\"HumanName\" title={address} onClick={onClick}>{icon}</span>)\n    }\n    return final\n\n  }\n}\n\nexport default HumanName\n","import React, { Component } from 'react'\nimport { Table, Icon } from 'semantic-ui-react'\n\nimport HumanName from '../../utils/humanname/humanname'\n\nimport './orderlist.css'\n\nclass OrderList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      orders: null,\n      timeout: null,\n      max_order: null\n    }\n\n    this.buildRow = this.buildRow.bind(this)\n    this.updateOrders = this.updateOrders.bind(this)\n  }\n\n  async componentDidMount() {\n    this.updateOrders()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextState.orders !== this.state.orders) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  componentWillUnmount() {\n    if(this.state.timeout !== null) {\n      clearTimeout(this.state.timeout)\n    }\n  }\n\n  async updateOrders() {\n    var orders = await this.getOrders()\n    var max_order = Math.max.apply(Math, orders.map(function(o) { return o.curr_1_amt; }))\n    var timeout = setTimeout(this.updateOrders, 5000)\n    this.setState({ orders, timeout, max_order })\n  }\n\n  async getOrders() {\n    var { drizzle, currencies, type } = this.props\n    var market = drizzle.contracts.Market\n\n    if(currencies.length === 2) {\n      var token_addr_0 = drizzle.contracts[currencies[0]].address\n      var token_addr_1 = drizzle.contracts[currencies[1]].address\n\n      var pay_token = null\n      var buy_token = null\n\n      if(type === \"BUY\") {\n        pay_token = token_addr_1\n        buy_token = token_addr_0\n      } else {\n        pay_token = token_addr_0\n        buy_token = token_addr_1\n      }\n\n      const rawOrders = await drizzle.contracts.SupportMethods.methods.getOffers(market.address, pay_token, buy_token).call()\n      var orders = []\n      if(rawOrders) {\n        orders = this.processOrders(rawOrders)\n      }\n      return orders\n    }\n  }\n\n  processOrders(rawOrders) {\n    var { type } = this.props\n\n    var n = rawOrders[\"ids\"].length\n    var orders = []\n    for(var i = 0; i < n; i++) {\n      if(rawOrders[\"ids\"][i] !== \"0\") {\n        var id = rawOrders[\"ids\"][i]\n        var maker = rawOrders[\"owners\"][i]\n        var pay_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"payAmts\"][i].toString(), 'ether')\n        var buy_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"buyAmts\"][i].toString(), 'ether') \n        var price = 0\n        var order = {}\n        if(type === \"BUY\") {\n          price = Math.round(pay_amount / buy_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": buy_amount,\n            \"curr_1_amt\": pay_amount,\n            \"id\": id,\n            \"type\": type,\n            \"maker\": maker\n          }\n        } else {\n          price = Math.round(buy_amount / pay_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": pay_amount,\n            \"curr_1_amt\": buy_amount,\n            \"id\": id,\n            \"type\": type,\n            \"maker\": maker\n          }\n        }\n        orders.push(order)\n      }\n    }\n\n    return orders\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  buildRow(item, index) {\n    var { max_order } = this.state\n    var { type, drizzleState, drizzle } = this.props\n    var account = drizzleState.accounts[0]\n\n    var ratio = item[\"curr_1_amt\"]/max_order * 100\n    var direction = \"right\"\n    var color_0 = \"rgba(255, 0, 0, 0.2)\"\n    var color_1 = \"rgba(0,0,0,0)\"\n    if(type === \"BUY\") {\n      color_0 = \"rgba(0, 255, 0, 0.1)\"\n      color_1 = \"rgba(0, 0, 0, 0)\"\n    }\n    var style = { backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n      backgroundSize: `calc(${ratio}%) 100%`,\n      backgroundRepeat: `no-repeat`\n    }\n\n    var class_names = \"OrderList-table-row \"\n    if(account === item[\"maker\"]) {\n      class_names += \"OrderList-my-order\"\n    }\n\n    return (\n      <Table.Row className={class_names} key={item[\"id\"]} onClick={() => this.props.setSidebar(item) } style={style}>\n        <Table.Cell textAlign='left' width={1}>\n          <div className='OrderList-table-entry OrderList-icon'><HumanName inactive_link icon_only drizzleState={drizzleState} drizzle={drizzle} address={item[\"maker\"]} /></div>\n        </Table.Cell>\n        <Table.Cell>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n        </Table.Cell>\n\n        <Table.Cell>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"curr_0_amt\"])}</div>\n        </Table.Cell>\n\n        <Table.Cell  textAlign='left'>\n          <div className='OrderList-table-entry'>{this.numberWithCommas(item[\"curr_1_amt\"])}</div>\n        </Table.Cell>\n\n      </Table.Row>\n    )\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    if(!orders) {\n      return (\n        <div className=\"OrderList\">\n          <div className=\"OrderList-loading\">Error...</div>\n        </div>\n      )\n    }\n\n    if(orders.length === 0) {\n      return (\n        <div className=\"OrderList\">\n          <div className=\"OrderList-loading\">Loading...</div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"OrderList\">\n        <Table striped basic celled unstackable id=\"OrderList-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='OrderList-table-header'><Icon name=\"user circle\" size=\"large\" /></Table.HeaderCell>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='OrderList-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body id=\"OrderList-tableBody\">\n            {orders.map(this.buildRow)}\n          </Table.Body>\n        </Table>\n\n      </div>\n    );\n  }\n}\n\nexport default OrderList\n","import React, { Component } from 'react'\nimport { Input, Form, Button, Loader } from 'semantic-ui-react'\n\nimport './limitorder.css'\n\nclass LimitOrder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      init: false,\n      error: false,\n      success: false,\n      price: '',\n      amount_0: '',\n      ui_amount_0: '',\n      amount_1: '',\n      ui_amount_1: '',\n      currency_0_balance: \"0\",\n      currency_1_balance: \"0\",\n      bignumbers: [],\n      timer: null,\n      last_price: '',\n      subscription: null\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.updateBalances = this.updateBalances.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n    this.flashError = this.flashError.bind(this)\n  }\n\n  componentDidMount() {\n    this.generateBigNumbers()\n    this.updateBalances()\n    this.getPastOrders()\n    this.subscribeToEvents().then((subscription) => {\n      this.setState({ subscription })\n    })\n  }\n\n  componentWillUnmount() {\n    if(this.state.timer) {\n      clearTimeout(this.state.timer)\n    }\n\n    if(this.state.subscription) {\n      this.state.subscription.unsubscribe()\n    }\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var web3 = this.props.drizzle.web3\n    pay_amt = web3.utils.toBN(pay_amt)\n    buy_amt = web3.utils.toBN(buy_amt)\n\n    if(pay_amt.lte(web3.utils.toBN(\"1000\")) || buy_amt.lte(web3.utils.toBN(\"1000\"))) {\n      return false\n    }\n\n    var one = web3.utils.toBN(web3.utils.toWei(\"1\", \"ether\"))\n\n    var price = 0\n    if(type === \"BUY\") {\n      price = parseFloat(web3.utils.fromWei(one.mul(pay_amt).div(buy_amt).toString(), 'ether'))\n      // price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = parseFloat(web3.utils.fromWei(buy_amt.toString(), 'ether'))\n      pay_amt = parseFloat(web3.utils.fromWei(pay_amt.toString(), 'ether'))\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = parseFloat(web3.utils.fromWei(one.mul(buy_amt).div(pay_amt).toString(), 'ether'))\n      // price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = parseFloat(web3.utils.fromWei(buy_amt.toString(), 'ether'))\n      pay_amt = parseFloat(web3.utils.fromWei(pay_amt.toString(), 'ether'))\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      return \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      return \"BUY\"\n    } else {\n      return null\n    }\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    \n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      event = event.returnValues\n      var type = this.getType(event)\n      var pay_amt = event[\"give_amt\"].toString()\n      var buy_amt = event[\"take_amt\"].toString()\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      var last_price = Math.round(offer[0] * 1000) / 1000\n      this.setState({ last_price })\n    }.bind(this))\n\n    return subscription\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock - 250,\n      toBlock: 'latest'\n    })\n    if(events.length > 0) {\n      var last_event = events[events.length-1].returnValues\n      var type = this.getType(last_event)\n      var pay_amt = last_event[\"give_amt\"].toString()\n      var buy_amt = last_event[\"take_amt\"].toString()\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      var last_price = Math.round(offer[0] * 1000) / 1000\n      this.setState({ last_price })\n    }\n  }\n\n  async updateBalances() {\n    var { drizzle, drizzleState, currencies } = this.props\n    var { price, init } = this.state\n\n    if(!init || price !== '') {\n      const account = drizzleState.accounts[0]\n      const currency_0_balance = await drizzle.contracts[currencies[0]].methods.balanceOf(account).call()\n      const currency_1_balance = await drizzle.contracts[currencies[1]].methods.balanceOf(account).call()\n      this.setState({ currency_0_balance, currency_1_balance, init: true })  \n    }\n    var timer = setTimeout(this.updateBalances, 2500)\n    this.setState({ timer })\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  // Main function that interfaces and writes to the blockchain.\n  // This is the most important function here.\n  handleSubmit(type) {\n    // Set loading to true to update UI\n    this.setState({loading: true, error: false, success: false})\n\n    var { currencies, drizzle, drizzleState } = this.props\n    const web3 = drizzle.web3\n\n    // Get the important info for the transaction\n    const account = drizzleState.accounts[0]\n    var amount_0 = this.state.amount_0\n    var amount_1 = this.state.amount_1\n    var curr_gem_0 = drizzle.contracts[currencies[0]].address\n    var curr_gem_1 = drizzle.contracts[currencies[1]].address\n    var data = {}\n\n    // Set data to the correct value depending on if the order is a BUY or SELL\n    // Basically you just flip the currency 0 and currency 1\n    if(type === \"BUY\") {\n      data = {\n        pay_amt: amount_1,\n        pay_gem: curr_gem_1,\n        buy_amt: amount_0,\n        buy_gem: curr_gem_0\n      }\n    } else if(type === \"SELL\") {\n      data = {\n        pay_amt: amount_0,\n        pay_gem: curr_gem_0,\n        buy_amt: amount_1,\n        buy_gem: curr_gem_1\n      }\n    } else {\n      return\n    }\n\n    console.log(data)\n\n    this.props.drizzle.contracts.Market.methods.offer(data.pay_amt, data.pay_gem, data.buy_amt, data.buy_gem, 1).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', this.flashSuccess)\n      .on('error', this.flashError)\n\n    this.setState({ loading: true })\n  }\n\n  flashSuccess() {\n    this.setState({ success : true, loading: false })\n    setTimeout(() => this.setState({ success: false, price: '', amount_0: '0', ui_amount_0: '', amount_1: '0', ui_amount_1: '' }), 1500)\n  }\n\n  flashError() {\n    this.setState({ error: true, loading: false })\n    setTimeout(() => this.setState({ error: false }), 1500)\n  }\n\n  handlePriceChange(value) {\n    const web3 = this.props.drizzle.web3\n    if(/\\S/.test(value) && this.state.ui_amount_0 !== \"\") {\n      var price = value\n      var ui_amount_1 = this.state.ui_amount_0 * price\n      var amount_1_bn = web3.utils.toWei(ui_amount_1.toString(), 'ether')\n      this.setState({ price: price, amount_1: amount_1_bn.toString(), ui_amount_1: ui_amount_1.toString() })\n    } else {\n      this.setState({ price: value, amount_1: '0', ui_amount_1: '' })    \n    }\n  }\n\n  handleAmountChange(index, value) {\n    const web3 = this.props.drizzle.web3\n\n    if(/\\S/.test(value) && this.state.price !== \"\") {\n      var price = this.state.price\n      var ui_amount_0 = null\n      var ui_amount_1 = null\n      var amount_0_bn = null\n      var amount_1_bn = null\n\n      if(index === 0) {\n        ui_amount_0 = value\n        amount_0_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_0.toString(), 'ether'))\n        ui_amount_1 = ui_amount_0 * price\n        amount_1_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_1.toString(), 'ether'))\n      } else if(index === 1) {\n        ui_amount_1 = value\n        amount_1_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_1.toString(), 'ether'))\n        ui_amount_0 = ui_amount_1 / price\n        amount_0_bn = web3.utils.toBN(web3.utils.toWei(ui_amount_0.toString(), 'ether'))\n      } else {\n        return\n      }\n\n      this.setState({ \n        amount_0: amount_0_bn.toString(), \n        ui_amount_0: ui_amount_0, \n        amount_1: amount_1_bn.toString(),\n        ui_amount_1: ui_amount_1,\n      })\n    } else {\n      this.setState({\n        amount_0: '0',\n        ui_amount_0: '',\n        amount_1: '0',\n        ui_amount_1: ''\n      })\n    }\n  }\n\n  handleAmountPercentageChange(index, value) {\n    const web3 = this.props.drizzle.web3\n    var price = this.state.price\n\n    var ui_amount_0 = null\n    var ui_amount_1 = null\n    var amount_0_bn = null\n    var amount_1_bn = null\n    var price_bn = web3.utils.toBN(web3.utils.toWei(price.toString(), 'ether'))\n    var one_bn = web3.utils.toBN(web3.utils.toWei('1'), 'ether')\n\n    if(index === 0) {\n      amount_0_bn = value\n      amount_1_bn = amount_0_bn.mul(price_bn).div(one_bn)\n    } else if(index === 1) {\n      amount_1_bn = value\n      amount_0_bn = amount_1_bn.mul(one_bn).div(price_bn)\n    } else {\n      return\n    }\n\n    try {\n      ui_amount_0 = web3.utils.fromWei(amount_0_bn.toString(), 'ether')\n    } catch(err) {\n      console.log(err)\n      ui_amount_0 = web3.utils.fromWei(\"0\", 'ether')\n    }\n\n    try {\n      ui_amount_1 = web3.utils.fromWei(amount_1_bn.toString(), 'ether')\n    } catch(err) {\n      console.log(err)\n      ui_amount_1 = web3.utils.fromWei(\"0\", 'ether')\n    }\n\n    this.setState({\n      amount_0: amount_0_bn.toString(),\n      ui_amount_0: ui_amount_0,\n      amount_1: amount_1_bn.toString(),\n      ui_amount_1: ui_amount_1\n    })\n  }\n\n  render() {\n    var { price, last_price, amount_0, amount_1, ui_amount_0, ui_amount_1, currency_0_balance, currency_1_balance, bignumbers, loading, success, error } = this.state\n    var { currencies } = this.props\n    const web3 = this.props.drizzle.web3\n    \n    var can_buy = false\n    var can_sell = false\n    \n    var curr_0_balance = web3.utils.toBN(currency_0_balance)\n    var curr_1_balance = web3.utils.toBN(currency_1_balance)\n    \n    var amount_0_bn = web3.utils.toBN(amount_0)\n    var amount_1_bn = web3.utils.toBN(amount_1)\n\n    if(price !== \"\" && curr_0_balance.gte(amount_0_bn) && amount_0_bn.gt(web3.utils.toBN(\"1000\"))) {\n      can_sell = true\n    }\n    \n    if(price !== \"\" && curr_1_balance.gte(amount_1_bn) && amount_1_bn.gt(web3.utils.toBN(\"1000\"))) {\n      can_buy = true\n    }\n\n    var side_text = \"\"\n    if(loading) {\n      side_text = (<span className=\"LimitOrder-color\"><Loader active inline size=\"small\"/> LOADING...</span>)\n    }\n    if(error) {\n      side_text = (<span className=\"red LimitOrder-color\">FAILED</span>)\n    }\n    if(success) {\n      side_text = (<span className=\"green LimitOrder-color\">SUCCESS</span>)\n    }\n\n    return (\n      <div className=\"LimitOrder\">\n        <Form size='tiny'>\n          <div className=\"LimitOrder-headers\">Price</div>\n          <Form.Field>\n            <Input\n              label={{ basic: true, content: currencies[1] + \" / \" + currencies[0]  }}\n              labelPosition='right'\n              placeholder='Enter Price...'\n              value={price}\n              onChange={(e) => { this.handlePriceChange(e.target.value) }}\n            />\n            <span className=\"LimitOrder-currentPrice\" onClick={() => this.handlePriceChange(last_price) } >Current Market Price</span>\n          </Form.Field>\n          <div className=\"LimitOrder-headers\">Amounts</div>\n          <Form.Group widths='equal'>\n            <Form.Field>\n              <Input\n                label={{ basic: true, content: currencies[0] }}\n                labelPosition='right'\n                placeholder='Enter Amount...'\n                disabled={price === ''}\n                value={ui_amount_0}\n                onChange={(e) => { this.handleAmountChange(0, e.target.value) }}\n                className=\"LimitOrder-amount-input\"\n              />\n              <Button.Group className=\"LimitOrder-mini-buttons\" size='mini' basic inverted>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[4]))} >25%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[2]))} >50%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(0, curr_0_balance) } >100%</Button>\n              </Button.Group>\n            </Form.Field>\n            <Form.Field>\n              <Input\n                label={{ basic: true, content: currencies[1] }}\n                labelPosition='right'\n                placeholder='Enter Amount...'\n                disabled={price === ''}\n                value={ui_amount_1}\n                onChange={(e) => { this.handleAmountChange(1, e.target.value) }}\n                className=\"LimitOrder-amount-input\"\n              />\n              <Button.Group className=\"LimitOrder-mini-buttons\" size='mini' basic inverted>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[4]))} >25%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[2]))} >50%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                <Button disabled={price === \"\"} onClick={() => this.handleAmountPercentageChange(1, curr_1_balance) } >100%</Button>\n              </Button.Group>\n            </Form.Field>\n          </Form.Group>\n          <Button className=\"LimitOrder-button\" color='green' disabled={!can_buy || loading} onClick={() => this.handleSubmit(\"BUY\")} >BUY {currencies[0]}</Button>\n          <Button className=\"LimitOrder-button\" color='red' disabled={!can_sell || loading} onClick={() => this.handleSubmit(\"SELL\")} >SELL {currencies[0]}</Button>\n          {side_text}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default LimitOrder\n","import React, { Component } from 'react'\nimport { Input, Form, Button, Loader, Grid } from 'semantic-ui-react'\n\nimport './marketorder.css'\n\nclass MarketOrder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: [false, false],\n      error: [false, false],\n      success: [false, false],\n      amounts: ['0', '0'],\n      ui_amounts: ['', ''],\n      expected_price: ['', ''],\n      expected_amount: ['0', '0'],\n      currency_0_balance: \"0\",\n      currency_1_balance: \"0\",\n      bignumbers: [],\n      timer: null\n    }\n\n    this.handleMarketBuy = this.handleMarketBuy.bind(this)\n    this.handleMarketSell = this.handleMarketSell.bind(this)\n    this.updateBalances = this.updateBalances.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n    this.flashError = this.flashError.bind(this)\n  }\n\n  componentDidMount() {\n    this.generateBigNumbers()\n    this.updateBalances()\n  }\n\n  componentWillUnmount() {\n    if(this.state.timer) {\n      clearTimeout(this.state.timer)\n    }\n  }\n\n  async updateBalances() {\n    var { drizzle, drizzleState, currencies } = this.props\n\n    const account = drizzleState.accounts[0]\n    const currency_0_balance = await drizzle.contracts[currencies[0]].methods.balanceOf(account).call()\n    const currency_1_balance = await drizzle.contracts[currencies[1]].methods.balanceOf(account).call()\n    var timer = setTimeout(this.updateBalances, 2500)\n    this.setState({ timer, currency_0_balance, currency_1_balance })  \n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  handleMarketBuy() {\n    // Set loading to true to update UI\n    var { loading, error, success } = this.state\n    loading[1] = true\n    error[1] = false\n    success[1] = false\n    this.setState({ loading , error, success })\n    \n    var { amounts, expected_amount } = this.state\n    var { currencies, drizzle, drizzleState } = this.props\n    const web3 = drizzle.web3\n    const account = drizzleState.accounts[0]\n    \n    var curr_gem_0 = drizzle.contracts[currencies[0]].address\n    var curr_gem_1 = drizzle.contracts[currencies[1]].address\n\n    var min_expected_amount = web3.utils.toBN(\"98\").mul(expected_amount[1]).div(web3.utils.toBN(\"100\"))\n\n    var data = {\n      pay_gem: curr_gem_1,\n      pay_amt: amounts[1],\n      buy_gem: curr_gem_0,\n      min_fill_amount: min_expected_amount.toString()\n    }\n\n    console.log(data)\n\n    drizzle.contracts.Market.methods.sellAllAmount(data[\"pay_gem\"], data[\"pay_amt\"], data[\"buy_gem\"], data[\"min_fill_amount\"]).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', () => this.flashSuccess(1))\n      .on('error', () => this.flashError(1))\n  }\n\n  handleMarketSell() {\n    // Set loading to true to update UI\n    var { loading, error, success } = this.state\n    loading[0] = true\n    error[0] = false\n    success[0] = false\n    this.setState({ loading , error, success })\n\n    var { amounts, expected_amount } = this.state\n    var { currencies, drizzle, drizzleState } = this.props\n    const web3 = drizzle.web3\n    const account = drizzleState.accounts[0]\n\n    var curr_gem_0 = drizzle.contracts[currencies[0]].address\n    var curr_gem_1 = drizzle.contracts[currencies[1]].address\n\n    var min_expected_amount = web3.utils.toBN(\"98\").mul(expected_amount[0]).div(web3.utils.toBN(\"100\"))\n\n    var data = {\n      pay_gem: curr_gem_0,\n      pay_amt: amounts[0],\n      buy_gem: curr_gem_1,\n      min_fill_amount: min_expected_amount.toString()\n    }\n\n    console.log(data)\n\n    this.props.drizzle.contracts.Market.methods.sellAllAmount(data[\"pay_gem\"], data[\"pay_amt\"], data[\"buy_gem\"], data[\"min_fill_amount\"]).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', () => this.flashSuccess(0))\n      .on('error', () => this.flashError(0))\n  }\n\n  flashSuccess(index) {\n    var { loading, success, error } = this.state\n    loading[index] = false\n    success[index] = true\n    error[index] = false\n    this.setState({ loading, success, error })\n    setTimeout(() => this.reset(index), 1500)\n  }\n\n  flashError(index) {\n    var { loading, success, error } = this.state\n    loading[index] = false\n    success[index] = false\n    error[index] = true\n    this.setState({ loading, success, error })\n    setTimeout(() => {\n      var { loading, success, error } = this.state\n      loading[index] = false\n      success[index] = false\n      error[index] = false\n      this.setState({ error })\n    }, 1500)\n  }\n\n  reset(index) {\n    var { loading, success, error, amounts, ui_amounts } = this.state\n    loading[index] = false\n    success[index] = false\n    error[index] = false\n    amounts[index] = \"0\"\n    ui_amounts[index] = \"\"\n    this.setState({ loading, success, error, amounts, ui_amounts })\n  }\n\n  async setExpectedAmount(index) {\n    var { amounts, expected_amount, expected_price } = this.state\n    var { currencies, drizzle } = this.props\n    const web3 = drizzle.web3\n\n    var curr_gem_0 = drizzle.contracts[currencies[0]].address\n    var curr_gem_1 = drizzle.contracts[currencies[1]].address\n\n    var will_receive = \"0\"\n    var giving = amounts[index]\n\n    if(index === 0) {\n      will_receive = await drizzle.contracts.Market.methods.getBuyAmount(curr_gem_1, curr_gem_0, giving).call()\n    } else if(index === 1) {\n      will_receive = await drizzle.contracts.Market.methods.getBuyAmount(curr_gem_0, curr_gem_1, giving).call()\n    }\n\n    if(will_receive !== \"0\" || giving !== \"0\") {\n      will_receive = web3.utils.toBN(will_receive)\n      giving = web3.utils.toBN(giving)\n      var one = web3.utils.toBN(web3.utils.toWei('1', 'ether'))\n\n      var price = one.mul(will_receive).div(giving)\n      if(index === 1) {\n        price = one.mul(giving).div(will_receive)\n      }\n      price = Math.round(web3.utils.fromWei(price.toString(), 'ether') * 1000) / 1000\n      console.log(price)\n\n      expected_amount[index] = will_receive\n      expected_price[index] = price\n    } else {\n      expected_amount[index] = \"0\"\n      expected_price[index] = \"\"\n    }\n    this.setState({ expected_amount, expected_price })\n\n  }\n\n  handleAmountChange(index, value) {\n    const web3 = this.props.drizzle.web3\n    var { amounts, ui_amounts } = this.state\n\n    var new_amounts = amounts.slice(0)\n    var new_ui_amounts = ui_amounts.slice(0)\n\n    try {\n      if(/\\S/.test(value)) {\n        var ui_amount = value\n        var amount_bn = web3.utils.toBN(web3.utils.toWei(ui_amount.toString(), 'ether'))\n\n        new_amounts[index] = amount_bn.toString()\n        new_ui_amounts[index] = ui_amount.toString()\n\n        this.setState({ \n          amounts: new_amounts,\n          ui_amounts: new_ui_amounts\n        })\n      } else {\n        new_amounts[index] = '0'\n        new_ui_amounts[index] = ''\n      }\n    } catch(err) {\n      console.log(err)\n      new_amounts[index] = '0'\n      new_ui_amounts[index] = ''\n    }\n\n    this.setState({\n      amounts: new_amounts,\n      ui_amounts: new_ui_amounts\n    }, () => {\n      this.setExpectedAmount(index)\n    })\n  }\n\n  handleAmountPercentageChange(index, value) {\n    const web3 = this.props.drizzle.web3\n    var { amounts, ui_amounts } = this.state\n\n    var amount_bn = value\n    var ui_amount = web3.utils.fromWei(\"0\", 'ether')\n    try {\n      ui_amount = web3.utils.fromWei(amount_bn.toString(), 'ether')\n    } catch(err) {\n      console.log(err)\n    }\n\n    var new_amounts = amounts.slice(0)\n    var new_ui_amounts = ui_amounts.slice(0)\n\n    new_amounts[index] = amount_bn.toString()\n    new_ui_amounts[index] = ui_amount.toString()\n\n    this.setState({ \n      amounts: new_amounts,\n      ui_amounts: new_ui_amounts\n    }, () => {\n      this.setExpectedAmount(index)\n    })\n  }\n\n  render() {\n    var { amounts, ui_amounts, expected_price, currency_0_balance, currency_1_balance, bignumbers, loading, success, error } = this.state\n    var { currencies } = this.props\n    const web3 = this.props.drizzle.web3\n    \n    var can_buy = false\n    var can_sell = false\n    \n    var curr_0_balance = web3.utils.toBN(currency_0_balance)\n    var curr_1_balance = web3.utils.toBN(currency_1_balance)\n    \n    var amount_0_bn = web3.utils.toBN(amounts[0])\n    var amount_1_bn = web3.utils.toBN(amounts[1])\n\n    if(curr_0_balance.gte(amount_0_bn) && amount_0_bn.gt(web3.utils.toBN(\"1000\"))) {\n      can_sell = true\n    }\n    \n    if(curr_1_balance.gte(amount_1_bn) && amount_1_bn.gt(web3.utils.toBN(\"1000\"))) {\n      can_buy = true\n    }\n\n    var side_texts = [\"\", \"\"]\n    for(var i = 0; i < 2; i++) {\n      if(loading[i]) {\n        side_texts[i] = (<span className=\"MarketOrder-color\"><Loader active inline size=\"small\"/> LOADING...</span>)\n      }\n      if(error[i]) {\n        side_texts[i] = (<span className=\"red MarketOrder-color\">FAILED</span>)\n      }\n      if(success[i]) {\n        side_texts[i] = (<span className=\"green MarketOrder-color\">SUCCESS</span>)\n      }\n    }\n\n    return (\n      <div className=\"MarketOrder\">\n        <Grid inverted divided columns={2} relaxed='very' stackable>\n          <Grid.Column verticalAlign='middle'>\n            <div className=\"MarketOrder-main-header\">Market <span className=\"green\">BUY</span></div>\n            <div className=\"MarketOrder-small-note\">Note: Orders will cancel if slippage >2%</div>\n            <div className=\"MarketOrder-sub-header\">Est. Price: {expected_price[1]} <span className=\"MarketOrder-tiny-note\">{currencies[1]}/{currencies[0]}</span></div>\n            <Form size='tiny'>\n              <div className=\"MarketOrder-headers\"><span className=\"green\">Buy</span> Allowance</div>\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <Input\n                    label={{ basic: true, content: currencies[1] }}\n                    labelPosition='right'\n                    placeholder='Enter Amount...'\n                    value={ui_amounts[1]}\n                    onChange={(e) => { this.handleAmountChange(1, e.target.value) }}\n                    className=\"MarketOrder-amount-input\"\n                  />\n                  <Button.Group className=\"MarketOrder-mini-buttons\" size='mini' basic inverted>\n                    <Button onClick={() => this.handleAmountChange(1, '') } >0%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[4]))} >25%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.div(bignumbers[2]))} >50%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(1, curr_1_balance) } >100%</Button>\n                  </Button.Group>\n                </Form.Field>\n              </Form.Group>\n              <Button className=\"MarketOrder-button\" color='green' disabled={!can_buy || loading[1] || error[1]} onClick={this.handleMarketBuy} >BUY {currencies[0]}</Button>\n              {side_texts[1]}\n            </Form>\n          </Grid.Column>\n\n          <Grid.Column verticalAlign='middle'>\n            <div className=\"MarketOrder-main-header\">Market <span className=\"red\">SELL</span></div>\n            <div className=\"MarketOrder-small-note\">Note: Orders will cancel if slippage >2%</div>\n            <div className=\"MarketOrder-sub-header\">Est. Price: {expected_price[0]} <span className=\"MarketOrder-tiny-note\">{currencies[1]}/{currencies[0]}</span></div>\n            <Form size='tiny'>\n              <div className=\"MarketOrder-headers\"><span className=\"red\">Sell</span> Allowance</div>\n              <Form.Group widths='equal'>\n                <Form.Field>\n                  <Input\n                    label={{ basic: true, content: currencies[0] }}\n                    labelPosition='right'\n                    placeholder='Enter Amount...'\n                    value={ui_amounts[0]}\n                    onChange={(e) => { this.handleAmountChange(0, e.target.value) }}\n                    className=\"MarketOrder-amount-input\"\n                  />\n                  <Button.Group className=\"MarketOrder-mini-buttons\" size='mini' basic inverted>\n                    <Button onClick={() => this.handleAmountChange(0, '') } >0%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[4]))} >25%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.div(bignumbers[2]))} >50%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance.mul(bignumbers[3]).div(bignumbers[4]))} >75%</Button>\n                    <Button onClick={() => this.handleAmountPercentageChange(0, curr_0_balance) } >100%</Button>\n                  </Button.Group>\n                </Form.Field>\n              </Form.Group>\n              <Button className=\"MarketOrder-button\" color='red' disabled={!can_sell || loading[0] || error[0]} onClick={this.handleMarketSell} >SELL {currencies[0]}</Button>\n              {side_texts[0]}\n            </Form>\n          </Grid.Column>\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\nexport default MarketOrder\n","import React, { Component } from 'react'\nimport { Table, Button } from 'semantic-ui-react'\n\nimport './myorders.css'\n\nclass MyOrders extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      orders: [],\n      timer: null\n    }\n\n    this.updateOrders = this.updateOrders.bind(this)\n  }\n\n  async componentDidMount() {\n    this.updateOrders()\n  }\n\n  componentWillUnmount() {\n    if(this.state.timer) {\n      clearTimeout(this.state.timer)\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextState.orders !== this.state.orders) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  async updateOrders() {\n    var buy_orders = await this.getOrders(\"BUY\")\n    var sell_orders = await this.getOrders(\"SELL\")\n    var orders = buy_orders.concat(sell_orders)\n    orders.sort(function(a, b) {\n      return parseInt(a[3]) > parseInt(b[3]) ? 1 : -1\n    })\n    var timer = setTimeout(this.updateOrders, 5000)\n    this.setState({ timer, orders })\n  }\n\n  async getOrders(type) {\n    var { drizzle, currencies } = this.props\n    var market = drizzle.contracts.Market\n\n    if(currencies.length === 2) {\n      var token_addr_0 = drizzle.contracts[currencies[0]].address\n      var token_addr_1 = drizzle.contracts[currencies[1]].address\n\n      var pay_token = null\n      var buy_token = null\n\n      if(type === \"BUY\") {\n        pay_token = token_addr_1\n        buy_token = token_addr_0\n      } else {\n        pay_token = token_addr_0\n        buy_token = token_addr_1\n      }\n\n      const rawOrders = await drizzle.contracts.SupportMethods.methods.getOffers(market.address, pay_token, buy_token).call()\n      var orders = []\n      if(rawOrders) {\n        orders = this.processOrders(rawOrders, type)\n      }\n      return orders\n    }\n  }\n\n  processOrders(rawOrders, type) {\n    var { drizzleState } = this.props\n\n    let account = drizzleState.accounts[0]\n    var n = rawOrders[\"ids\"].length\n    var orders = []\n    for(var i = 0; i < n; i++) {\n      if(rawOrders[\"ids\"][i] !== \"0\" && rawOrders[\"owners\"][i] === account) {\n        var id = rawOrders[\"ids\"][i]\n        var pay_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"payAmts\"][i].toString(), 'ether')\n        var buy_amount = this.props.drizzle.web3.utils.fromWei(rawOrders[\"buyAmts\"][i].toString(), 'ether') \n        var price = 0\n        var order = {}\n        if(type === \"BUY\") {\n          price = Math.round(pay_amount / buy_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": buy_amount,\n            \"curr_1_amt\": pay_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        } else {\n          price = Math.round(buy_amount / pay_amount * 1000) / 1000\n          buy_amount = Math.round(buy_amount * 1000) / 1000\n          pay_amount = Math.round(pay_amount * 1000) / 1000\n          order = {\n            \"price\": price,\n            \"curr_0_amt\": pay_amount,\n            \"curr_1_amt\": buy_amount,\n            \"id\": id,\n            \"type\": type\n          }\n        }\n        orders.push(order)\n      }\n    }\n\n    return orders\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  cancelOrder(id) {\n    var { Market } = this.props.drizzle.contracts\n    let account = this.props.drizzleState.accounts[0]\n\n    console.log(\"CANCEL ORDER \" + id)\n    const cancel = Market.methods.cancel\n    cancel.cacheSend(id, {from: account, gasPrice: this.props.drizzle.web3.utils.toWei('5', 'gwei') })\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    var orders_table = null\n    var background_item = null\n\n    if(orders.length === 0) {\n      background_item = (<div id=\"MyOrders-empty\">NO ORDERS</div>)\n    } else {\n      orders_table = (<Table.Body id=\"MyOrders-tableBody\">\n            {orders.map((item, index) => {\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MyOrders-color\">{item[\"type\"]}</span>) : (<span className=\"red\">{item[\"type\"]}</span>)\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell  textAlign='left'>\n                    <div className='MyOrders-table-entry'><Button className=\"MyOrders-button\" color='red' size='mini' inverted onClick={() => {this.cancelOrder(item[\"id\"])}}>CANCEL</Button></div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"curr_0_amt\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MyOrders-table-entry'>{this.numberWithCommas(item[\"curr_1_amt\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MyOrders\">\n        <Table selectable striped basic celled unstackable columns={5} textAlign='left' id=\"MyOrders-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Action</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MyOrders-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { orders_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MyOrders\n","import React, { Component } from 'react'\nimport { Charts, ChartContainer, ChartRow, YAxis, LineChart, BarChart, styler, Resizable } from \"react-timeseries-charts\";\nimport { TimeSeries, Index } from \"pondjs\";\n\nimport './chart.css'\n\nconst style = styler([\n    { key: \"price\", color: \"white\", width: 1 },\n    { key: \"volume\", color: \"white\" }\n]);\n\nclass CrossHairs extends React.Component {\n    render() {\n        const { x, y } = this.props;\n        const style = { pointerEvents: \"none\", stroke: \"#ccc\" };\n        if (!(x === null) && !(y === null)) {\n            return (\n                <g>\n                    <line style={style} x1={0} y1={y} x2={this.props.width} y2={y} />\n                    <line style={style} x1={x} y1={0} x2={x} y2={this.props.height} />\n                </g>\n            );\n        } else {\n            return <g />;\n        }\n    }\n}\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      tracker: null,\n      chart_data: null,\n      volume_data: null,\n      timerange: null,\n      x: null,\n      y: null,\n      selection: null\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.orders.length > 0) {\n      var points = this.buildChartPoints(nextProps.orders)\n      var chart_data = new TimeSeries({\n        name: \"Chart\",\n        columns: [\"time\", \"price\"],\n        points: points\n      })\n      var timerange = chart_data.timerange()\n\n      var volume_points = []\n      for(var i = 0; i < nextProps.orders.length; i++) {\n        var item = nextProps.orders[i]\n        if(i > 0) {\n          var last_item = nextProps.orders[i-1]\n          if(item[\"raw_timestamp\"] === last_item[\"raw_timestamp\"]) {\n            volume_points[volume_points.length-1][1] += item[\"curr_2\"]\n          } else {\n            volume_points.push([Index.getIndexString(\"1s\", new Date(item[\"raw_timestamp\"])), item[\"curr_2\"]])\n          }\n        } else {\n          volume_points.push([Index.getIndexString(\"1s\", new Date(item[\"raw_timestamp\"])), item[\"curr_2\"]])\n        }\n      }\n\n      volume_points.reverse()\n      var volume_data = new TimeSeries({\n        name: \"Volume\",\n        columns: [\"index\", \"volume\"],\n        points: volume_points\n      })\n      this.setState({loading: false, chart_data, volume_data, timerange })\n    }\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  componentWillMount() {\n  }\n\n  handleTrackerChange = (tracker) => {\n    if(!tracker) {\n      this.setState({ tracker, x: null, y: null })\n    } else {\n      this.setState({ tracker })\n    }\n  }\n\n  handleTimeRangeChange = (timerange) => {\n    this.setState({ timerange })\n  }\n\n  handleMouseMove = (x, y) => {\n    this.setState({ x, y })\n  }\n\n  buildChartPoints(orders) {\n    var chart_data = orders.map(function(order) {\n      return [order[\"raw_timestamp\"], order[\"price\"], order[\"curr_2\"]]\n    })\n    chart_data.reverse()\n    return chart_data\n  }\n\n  render() {\n    var { loading, chart_data, volume_data, timerange } = this.state\n    var { currencies } = this.props\n\n    var chart = <div id=\"Chart-loading\">Loading...</div>\n    if(chart_data && !loading) {\n      var start_time = chart_data.range().begin()\n      var end_time = chart_data.range().end()\n      end_time.setHours(end_time.getHours() + 6)\n      var min_val = chart_data.crop(timerange).min(\"price\")\n      var max_val = chart_data.crop(timerange).max(\"price\")\n      var padding = (max_val - min_val)*0.1\n      var max_volume = volume_data.crop(timerange).max(\"volume\")\n      chart = (\n        <Resizable>\n          <ChartContainer \n            timeRange={timerange} \n            minTime={start_time} \n            maxTime={end_time} \n            timeAxisAngledLabels={true}\n            timeAxisHeight={80}\n            paddingLeft={20}\n            paddingRight={20}\n            enablePanZoom={true}\n            minDuration={1000 * 60 * 60}\n            onTrackerChanged={this.handleTrackerChange}\n            onBackgroundClick={() => this.setState({ selection: null })}\n            onTimeRangeChanged={this.handleTimeRangeChange}\n            onMouseMove={(x, y) => this.handleMouseMove(x, y) }\n            showGrid\n            style={{\n                background: \"#0b1215\",\n                borderStyle: \"solid\",\n                borderWidth: 1,\n                borderColor: \"#0b1215\",\n                paddingTop: \"1em\"\n            }}\n            timeAxisStyle={{\n                              ticks: {\n                                  stroke: \"#AAA\",\n                                  opacity: 0.25,\n                                  \"stroke-dasharray\": \"1,1\"\n                                  // Note: this isn't in camel case because this is\n                                  // passed into d3's style\n                              },\n                              values: {\n                                  fill: \"#AAA\",\n                                  \"font-size\": 12\n                              }\n                          }}\n          >\n            <ChartRow height=\"325\">\n              <YAxis \n                id=\"price\" \n                label={\"Price (\" + currencies[1] + \" / \" + currencies[0] + \")\"} \n                min={min_val - padding} \n                max={max_val + padding}\n                hideAxisLine \n                showGrid \n                width=\"50\" \n                type=\"linear\" \n                format=\",.2f\"\n                style={{\n                    ticks: {\n                        stroke: \"#AAA\",\n                        opacity: 0.25,\n                        \"stroke-dasharray\": \"1,1\"\n                        // Note: this isn't in camel case because this is\n                        // passed into d3's style\n                    }}}\n              />\n              <Charts>\n                <LineChart \n                  axis=\"price\"\n                  series={chart_data} \n                  columns={[\"price\"]} \n                  style={style}\n                  interpolation=\"curveStepAfter\"\n                  selection={this.state.selection}\n                  onSelectionChange={selection =>\n                                      this.setState({ selection })\n                                    }\n                />\n                <CrossHairs x={this.state.x} y={this.state.y} />\n              </Charts>\n            </ChartRow>\n            <ChartRow height=\"75\">\n              <YAxis \n                id=\"amount\" \n                label={\"Volume (\" + currencies[1] + \")\"} \n                min={0}\n                max={max_volume} \n                hideAxisLine\n                showGrid\n                width=\"50\" \n                type=\"linear\" \n                format=\",.2r\"\n                style={{\n                    ticks: {\n                        stroke: \"#AAA\",\n                        opacity: 0.25,\n                        \"stroke-dasharray\": \"1,1\"\n                        // Note: this isn't in camel case because this is\n                        // passed into d3's style\n                    }}}\n              />\n              <Charts>\n                <BarChart\n                    axis=\"amount\"\n                    style={style}\n                    columns={[\"volume\"]}\n                    series={volume_data}\n                />\n              </Charts>\n            </ChartRow>\n          </ChartContainer>\n        </Resizable>\n      )\n    }\n\n    return (\n      <div className=\"Chart\">\n        {chart}\n      </div>\n    );\n  }\n}\n\nexport default Chart\n\n                // <BandChart\n                //   axis=\"price\"\n                //   series={chart_data}\n                //   column=\"price\"\n                //   aggregation={ {\n                //       size: \"30m\",\n                //       reducers: {\n                //           outer: [percentile(5), percentile(95)],\n                //           inner: [percentile(25), percentile(75)]\n                //       }\n                //   } }\n                //   style={style}\n                //   interpolation=\"curveBasis\"\n                // />","import React, { Component } from 'react'\nimport { Grid, List } from 'semantic-ui-react'\nimport Chart from './chart/chart'\n\nimport './stats.css'\n\nclass Stats extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      orders: [],\n      stats: {\n        num_users: \"...\",\n        num_buys: \"...\",\n        num_sells: \"...\",\n        buy_volume: \"...\",\n        sell_volume: \"...\",\n        last_price: \"...\",\n        last_type: \"BUY\"\n      },\n      subsciption: null\n    }\n\n    this.buildStat = this.buildStat.bind(this)\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    this.setState({ orders }, this.updateStats)\n    var subscription = await this.subscribeToEvents()\n    this.setState({ subscription })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscription) {\n      this.state.subscription.unsubscribe()\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.are_stats_updated(this.state.stats, nextState.stats)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  are_stats_updated(old_stats, new_stats) {\n    if(old_stats[\"num_users\"] !== new_stats[\"num_users\"] ||\n      old_stats[\"num_buys\"] !== new_stats[\"num_buys\"] ||\n      old_stats[\"num_sells\"] !== new_stats[\"num_sells\"] ||\n      old_stats[\"buy_volume\"] !== new_stats[\"buy_volume\"] ||\n      old_stats[\"sell_volume\"] !== new_stats[\"sell_volume\"] ||\n      old_stats[\"last_price\"] !== new_stats[\"last_price\"] ||\n      old_stats[\"last_type\"] !== new_stats[\"last_type\"] ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  updateStats() {\n    var new_stats = {\n      num_users: 0,\n      num_buys: 0,\n      num_sells: 0,\n      buy_volume: 0,\n      sell_volume: 0,\n      last_price: 0,\n      last_type: \"BUY\"\n    }\n\n    var users = {}\n    var orders = this.state.orders\n    for(var i = 0; i < orders.length; i++) {\n      var order = orders[i]\n\n      // Check if maker is in user list\n      if(!(order[\"maker\"] in users)) {\n        users[order[\"maker\"]] = 1\n        new_stats[\"num_users\"] += 1\n      }\n\n      // Check if taker is in user list\n      if(!(order[\"taker\"] in users)) {\n        users[order[\"taker\"]] = 1\n        new_stats[\"num_users\"] += 1\n      }\n\n      // Check if order is buy or sell and add the necessary info\n      if(order[\"type\"] === \"BUY\") {\n        new_stats[\"num_buys\"] += 1\n        new_stats[\"buy_volume\"] += order[\"curr_2\"]\n      } else if(order[\"type\"] === \"SELL\") {\n        new_stats[\"num_sells\"] += 1\n        new_stats[\"sell_volume\"] += order[\"curr_2\"]\n      }\n    }\n\n    if(orders.length > 0) {\n      new_stats[\"last_price\"] = Math.round(orders[0][\"price\"] * 1000) / 1000\n      new_stats[\"last_type\"] = orders[0][\"type\"]\n      new_stats[\"buy_volume\"] = Math.round(new_stats[\"buy_volume\"] * 100) / 100\n      new_stats[\"sell_volume\"] = Math.round(new_stats[\"sell_volume\"] * 100) / 100\n    }\n\n    var symbol = \"▲\"\n    if(new_stats[\"last_type\"] === \"SELL\") {\n      symbol = \"▼\"\n    }\n\n    document.title = new_stats[\"last_price\"] + \" \" + symbol + \" \" + this.props.currencies[1] + \"/\" + this.props.currencies[0]\n    this.setState({ stats: new_stats, loading: false })\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    \n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) }, this.updateStats)\n    }.bind(this))\n\n    return subscription\n  }\n\n  componentWillMount() {\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      return \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      return \"BUY\"\n    } else {\n      return null\n    }\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var web3 = this.props.drizzle.web3\n    pay_amt = web3.utils.toBN(pay_amt)\n    buy_amt = web3.utils.toBN(buy_amt)\n\n    if(pay_amt.lte(web3.utils.toBN(\"1000\")) || buy_amt.lte(web3.utils.toBN(\"1000\"))) {\n      return false\n    }\n\n    var one = web3.utils.toBN(web3.utils.toWei(\"1\", \"ether\"))\n\n    var price = 0\n    if(type === \"BUY\") {\n      price = parseFloat(web3.utils.fromWei(one.mul(pay_amt).div(buy_amt).toString(), 'ether'))\n      // price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = parseFloat(web3.utils.fromWei(buy_amt.toString(), 'ether'))\n      pay_amt = parseFloat(web3.utils.fromWei(pay_amt.toString(), 'ether'))\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = parseFloat(web3.utils.fromWei(one.mul(buy_amt).div(pay_amt).toString(), 'ether'))\n      // price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = parseFloat(web3.utils.fromWei(buy_amt.toString(), 'ether'))\n      pay_amt = parseFloat(web3.utils.fromWei(pay_amt.toString(), 'ether'))\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = order[\"give_amt\"].toString()\n      var buy_amt = order[\"take_amt\"].toString()\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      if(offer) {\n        var timestamp = new Date(order[\"timestamp\"] * 1000)\n        timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n        order = {\n          \"raw_timestamp\": order[\"timestamp\"] * 1000,\n          \"timestamp\": timestamp,\n          \"type\": type,\n          \"price\": offer[0],\n          \"curr_1\": offer[1],\n          \"curr_2\": offer[2],\n          \"taker\": order[\"taker\"],\n          \"maker\": order[\"maker\"]\n        }\n        orders.push(order)\n      }\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock - 5760,\n      toBlock: 'latest'\n    })\n\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  buildStat(key) {\n    if(this.state.stats[key] === \"...\") {\n      return <span className=\"loading_value\">{this.state.stats[key]}</span>\n    }\n    var color = null\n    var value = this.numberWithCommas(this.state.stats[key])\n    if(key === \"buy_volume\" || key === \"sell_volume\") {\n      color = key === \"buy_volume\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()} <span className=\"sub_value\">{this.props.currencies[1]}</span></span>\n    }\n\n    if(key === \"num_buys\" || key === \"num_sells\") {\n      color = key === \"num_buys\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()}</span>\n    }\n\n    if(key === \"last_price\") {\n      color = this.state.stats[\"last_type\"] === \"BUY\" ? \"important-green\" : \"important-red\"\n      value = <span className={color + \" value\"}>{value.toString()} <span className=\"sub_value\">{this.props.currencies[1]} / {this.props.currencies[0]}</span></span>\n    }\n\n    return value\n  }\n\n  render() {\n    var { orders } = this.state\n    var { currencies } = this.props\n\n    var keys = [\"num_users\", \"num_buys\", \"num_sells\", \"buy_volume\", \"sell_volume\", \"last_price\"]\n    var statistics = {}\n    for(var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      statistics[key] = this.buildStat(key)\n    }\n\n    var chart = <div id=\"Stats-chart\"><Chart orders={orders} currencies={currencies} /></div>\n\n    return (\n      <div className=\"Stats\">\n        {chart}\n        <div id=\"Stats-statistics\">\n          <Grid id=\"Stats-grid\">\n            <Grid.Row>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Buys</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_buys\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Buy Vol.</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"buy_volume\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Sells</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_sells\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={4} computer={4} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Sell Vol.</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"sell_volume\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={8} computer={8} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\">Last Price</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"last_price\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n              <Grid.Column mobile={8} tablet={8} computer={8} textAlign=\"center\">\n                <List.Item className=\"Stats-statistic\">\n                  <List.Content>\n                    <List.Header className=\"Stats-header\"># Users</List.Header>\n                    <List.Description className=\"Stats-content\">{statistics[\"num_users\"]}</List.Description>\n                  </List.Content>\n                </List.Item>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stats","import React, { Component } from 'react'\nimport { Table, Icon } from 'semantic-ui-react'\n\nimport HumanName from '../../utils/humanname/humanname'\n\nimport './markethistory.css'\n\nclass MarketHistory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      orders: [],\n      max_order: null,\n      subsciption: null\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    var max_order = Math.max.apply(Math, orders.map(function(o) { return o.curr_2; }))\n    this.setState({ orders, max_order, loading: false })\n    var subscription = await this.subscribeToEvents()\n    this.setState({ subscription })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscription) {\n      this.state.subscription.unsubscribe()\n    }\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    \n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    return subscription\n  }\n\n  componentWillMount() {\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      return \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      return \"BUY\"\n    } else {\n      return null\n    }\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var price = 0\n    if(type === \"BUY\") {\n      price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = this.props.drizzle.web3.utils.fromWei(order[\"give_amt\"].toString(), 'ether')\n      var buy_amt = this.props.drizzle.web3.utils.fromWei(order[\"take_amt\"].toString(), 'ether')\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      var timestamp = new Date(order[\"timestamp\"] * 1000)\n      timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n      order = {\n        \"timestamp\": timestamp,\n        \"type\": type,\n        \"price\": offer[0],\n        \"curr_1\": offer[1],\n        \"curr_2\": offer[2],\n        \"taker\": order[\"taker\"],\n        \"maker\": order[\"maker\"]\n      }\n      orders.push(order)\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle } = this.props\n    var { Market } = drizzle.contracts\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2] },\n      fromBlock: latestBlock - 2000,\n      toBlock: 'latest'\n    })\n\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  render() {\n    var { loading, orders, max_order } = this.state\n    var { currencies, drizzle } = this.props\n\n    var offers_table = null\n    var background_item = null\n\n    if(loading) {\n      background_item = (<div id=\"MarketHistory-empty\">Loading...</div>)\n    } else if(orders.length === 0) {\n      background_item = (<div id=\"MarketHistory-empty\">NO ORDERS</div>)\n    } else {\n      offers_table = (<Table.Body id=\"MarketHistory-tableBody\">\n            {orders.map((item, index) => {\n              var ratio = item[\"curr_2\"]/max_order * 100\n              var direction = \"right\"\n              var color_0 = \"rgba(255, 0, 0, 0.2)\"\n              var color_1 = \"rgba(0,0,0,0)\"\n              if(item[\"type\"] === \"BUY\") {\n                color_0 = \"rgba(0, 255, 0, 0.1)\"\n                color_1 = \"rgba(0, 0, 0, 0)\"\n              }\n              var style = { backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n                backgroundSize: `calc(${ratio}%) 100%`,\n                backgroundRepeat: `no-repeat`\n              }\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">BUY</span>) : (<span className=\"red MarketHistory-type\">SELL</span>)\n              var participants = (<div className=\"MarketHistory-participants\">\n                                    <div className=\"MarketHistory-participant\"><HumanName drizzle={drizzle} icon_only address={item[\"taker\"]} /></div>\n                                    <div className=\"MarketHistory-arrow\"><Icon size=\"large\" name=\"long arrow alternate right\" /></div>\n                                    <div className=\"MarketHistory-participant\"><HumanName drizzle={drizzle} icon_only address={item[\"maker\"]} /></div>\n                                  </div>)\n              return (\n                <Table.Row key={index} style={style}>\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{item[\"timestamp\"]}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{participants}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_1\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_2\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MarketHistory\">\n        <Table striped basic celled unstackable id=\"MarketHistory-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Time</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='center'>Participants</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { offers_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MarketHistory\n","import React, { Component } from 'react'\nimport { Table } from 'semantic-ui-react'\n\nimport HumanName from '../../utils/humanname/humanname'\n\nimport './myhistory.css'\n\nclass MyHistory extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      orders: [],\n      max_order: null,\n      subscriptions: null\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({loading: true})\n    var orders = await this.getPastOrders()\n    var max_order = Math.max.apply(Math, orders.map(function(o) { return o.curr_2; }))\n    this.setState({ orders, max_order, loading: false })\n    var subscriptions = await this.subscribeToEvents()\n    this.setState({ subscriptions })\n  }\n\n  componentWillUnmount() {\n    if(this.state.subscriptions) {\n      this.state.subscriptions[0].unsubscribe()\n      this.state.subscriptions[1].unsubscribe()\n    }\n  }\n\n  async subscribeToEvents() {\n    var { currencies, drizzle, drizzleState } = this.props\n    var { Market } = drizzle.contracts\n    let account = drizzleState.accounts[0]\n\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n    \n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    \n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n    \n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var taker_subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2], taker: account },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    var maker_subscription = market.events.LogTake({\n      filter: { pair: [hashKey1, hashKey2], maker: account },\n      fromBlock: latestBlock\n    }).on('data', function(event) {\n      var orders = this.eventsToOrders([event])\n      this.setState({ orders: orders.concat(this.state.orders) })\n    }.bind(this))\n\n    return [taker_subscription, maker_subscription]\n  }\n\n  numberWithCommas(x) {\n      var parts = x.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      return parts.join(\".\");\n  }\n\n  getType(order) {\n    var { currencies, drizzle } = this.props\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n\n    var buy_addr = order[\"buy_gem\"]\n    var pay_addr = order[\"pay_gem\"]\n\n    var type = null\n\n    if(buy_addr === curr_1_addr && pay_addr === curr_2_addr) {\n      type = \"SELL\"\n    } else if(buy_addr === curr_2_addr && pay_addr === curr_1_addr) {\n      type = \"BUY\"\n    } else {\n      return null\n    }\n\n    return type\n  }\n\n  getPrice(pay_amt, buy_amt, type) {\n    var price = 0\n    if(type === \"BUY\") {\n      price = Math.round(pay_amt / buy_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, buy_amt, pay_amt]\n    } else {\n      price = Math.round(buy_amt / pay_amt * 1000) / 1000\n      buy_amt = Math.round(buy_amt * 1000) / 1000\n      pay_amt = Math.round(pay_amt * 1000) / 1000\n      return [price, pay_amt, buy_amt]\n    }\n  }\n\n  eventsToOrders(events) {\n    var orders = []\n    for(var i = 0; i < events.length; i++) {\n      var order = events[i].returnValues\n      var type = this.getType(order)\n      var pay_amt = this.props.drizzle.web3.utils.fromWei(order[\"give_amt\"].toString(), 'ether')\n      var buy_amt = this.props.drizzle.web3.utils.fromWei(order[\"take_amt\"].toString(), 'ether')\n      var offer = this.getPrice(pay_amt, buy_amt, type)\n      \n      var true_type = type\n      if(events[i][\"role\"] === \"maker\") {\n        if(true_type === \"BUY\") {\n          true_type = \"SELL\"\n        } else {\n          true_type = \"BUY\"\n        }\n      }\n\n      var timestamp = new Date(order[\"timestamp\"] * 1000)\n      timestamp = timestamp.toLocaleTimeString() + \" \" + timestamp.toLocaleDateString()\n      order = {\n        \"timestamp\": timestamp,\n        \"type\": true_type,\n        \"price\": offer[0],\n        \"curr_1\": offer[1],\n        \"curr_2\": offer[2],\n        \"taker\": order[\"taker\"],\n        \"maker\": order[\"maker\"]\n      }\n      orders.push(order)\n    }\n    orders.reverse()\n    return orders\n  }\n\n  async getPastOrders() {\n    var { currencies, drizzle, drizzleState } = this.props\n    var { Market } = drizzle.contracts\n    let account = drizzleState.accounts[0]\n    var web3 = drizzle.web3\n    var latestBlock = await web3.eth.getBlockNumber()\n\n    var curr_1_addr = drizzle.contracts[currencies[0]].address\n    var curr_2_addr = drizzle.contracts[currencies[1]].address\n    const hashKey1 = web3.utils.soliditySha3(curr_1_addr, curr_2_addr)\n    const hashKey2 = web3.utils.soliditySha3(curr_2_addr, curr_1_addr)\n\n    const market = new web3.eth.Contract(Market.abi, Market.address)\n    var taker_events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2], taker: account },\n      fromBlock: latestBlock - 25000,\n      toBlock: 'latest'\n    })\n    taker_events = taker_events.map((item) => {\n      item[\"role\"] = \"taker\"\n      return item\n    })\n\n    var maker_events = await market.getPastEvents(\"LogTake\", {\n      filter: { pair: [hashKey1, hashKey2], maker: account },\n      fromBlock: latestBlock - 25000,\n      toBlock: 'latest'\n    })\n    maker_events = maker_events.map((item) => {\n      item[\"role\"] = \"maker\"\n      return item\n    })\n\n    var events = maker_events.concat(taker_events)\n    events.sort(function(first, second) {\n      return first.returnValues.timestamp - second.returnValues.timestamp\n    })\n\n    var orders = this.eventsToOrders(events)\n    return orders\n  }\n\n  render() {\n    var { loading, orders, max_order } = this.state\n    var { currencies, drizzle } = this.props\n\n    var offers_table = null\n    var background_item = null\n\n    if(loading) {\n      background_item = (<div id=\"MarketHistory-empty\">Loading...</div>)\n    } else if(orders.length === 0) {\n      background_item = (<div id=\"MarketHistory-empty\">NO ORDERS</div>)\n    } else {\n      offers_table = (<Table.Body id=\"MarketHistory-tableBody\">\n            {orders.map((item, index) => {\n              var ratio = item[\"curr_2\"]/max_order * 100\n              var direction = \"right\"\n              var color_0 = \"rgba(255, 0, 0, 0.2)\"\n              var color_1 = \"rgba(0,0,0,0)\"\n              if(item[\"type\"] === \"BUY\") {\n                color_0 = \"rgba(0, 255, 0, 0.1)\"\n                color_1 = \"rgba(0, 0, 0, 0)\"\n              }\n              var style = { backgroundImage: `linear-gradient(to ${direction}, ${color_0} , ${color_0}), linear-gradient(to ${direction}, ${color_1}, ${color_1})` ,\n                backgroundSize: `calc(${ratio}%) 100%`,\n                backgroundRepeat: `no-repeat`\n              }\n              var type = item[\"type\"] === \"BUY\" ? (<span className=\"green MarketHistory-type\">BUY</span>) : (<span className=\"red MarketHistory-type\">SELL</span>)\n              return (\n                <Table.Row key={index} style={style}>\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{type}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{item[\"timestamp\"]}</div>\n                  </Table.Cell>\n\n                  <Table.Cell width={1}>\n                    <div className='MarketHistory-table-entry'><HumanName address={item[\"taker\"]} icon_only drizzle={drizzle} /></div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"price\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_1\"])}</div>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <div className='MarketHistory-table-entry'>{this.numberWithCommas(item[\"curr_2\"])}</div>\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>)\n    }\n\n    return (\n      <div className=\"MarketHistory\">\n        <Table striped basic celled unstackable id=\"MarketHistory-table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Type</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Time</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Taker</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>Price</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[0]}</Table.HeaderCell>\n              <Table.HeaderCell className='MarketHistory-table-header' textAlign='left'>{currencies[1]}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          { offers_table }\n        </Table>\n        { background_item }\n      </div>\n    );\n  }\n}\n\nexport default MyHistory\n","import React, { Component } from 'react'\nimport { Sidebar, Segment, Icon, Input, Form, Button, Loader } from 'semantic-ui-react'\n\nimport HumanName from '../../utils/humanname/humanname'\n\nimport './sidebar.css'\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      visible: false,\n      amount: '0',\n      ui_amount: '',\n      currency_0_balance: \"0\",\n      currency_1_balance: \"0\",\n      id: null,\n      info: null,\n      owner: null,\n      bignumbers: {},\n      button_loading: false,\n      button_success: false,\n      button_error: false\n    }\n\n    this.updateInfo = this.updateInfo.bind(this)\n    this.stopLoading = this.stopLoading.bind(this)\n    this.flashError = this.flashError.bind(this)\n    this.flashSuccess = this.flashSuccess.bind(this)\n  }\n\n  // Get the balances for each of the currencies since we will need that throughout the component\n  componentDidMount() {\n    this.generateBigNumbers()\n    this.updateInfo()\n  }\n\n  async updateInfo() {\n    var { drizzle, drizzleState, currencies } = this.props\n    if(this.state.visible && this.state.id) {\n      let account = drizzleState.accounts[0]\n\n      const currency_0_balance = await drizzle.contracts[currencies[0]].methods.balanceOf(account).call()\n      const currency_1_balance = await drizzle.contracts[currencies[1]].methods.balanceOf(account).call()\n      const info = await drizzle.contracts.Market.methods.getOffer(this.state.id).call()\n      const owner = await drizzle.contracts.Market.methods.getOwner(this.state.id).call()\n      this.setState({ currency_0_balance, currency_1_balance, info, owner })\n    }\n    setTimeout(this.updateInfo, 1000)\n  }\n\n  generateBigNumbers() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  stopLoading() {\n    this.setState({ loading: false })\n  }\n\n  // Need to update visible and the side_bar info key if a new order is passed in\n  async componentWillReceiveProps(nextProps) {\n    if(nextProps.visible !== this.props.visible) {\n      this.setState({ visible: nextProps.visible })\n      if(nextProps.visible === false) {\n        this.setState({ info: null, owner: null, amount: '0', ui_amount: '', button_success: false, button_error: false, button_loading: false })\n      }\n    }\n    if(nextProps.sidebar_info !== this.props.sidebar_info) {\n      this.setState({ loading: true })\n      const info = await this.props.drizzle.contracts.Market.methods.getOffer(nextProps.sidebar_info[\"id\"]).call()\n      const owner = await this.props.drizzle.contracts.Market.methods.getOwner(nextProps.sidebar_info[\"id\"]).call()\n      this.setState({ id: nextProps.sidebar_info[\"id\"], info, owner, amount: '0', ui_amount: '' })\n      setTimeout(this.stopLoading, 150)\n    }\n  }\n\n  flashSuccess() {\n    var { toggleSidebar } = this.props\n    this.setState({ button_success : true, button_loading: false })\n    setTimeout(toggleSidebar, 1500)\n  }\n\n  flashError() {\n    this.setState({ button_error: true, button_loading: false })\n    setTimeout(() => this.setState({ button_error: false }), 1500)\n  }\n\n  // Most important function in the entire file since it actually interfaces\n  // and edits the blockchain.\n  executeTrade = (will_receive) => {\n    var { drizzle, drizzleState, sidebar_info } = this.props\n    const account = drizzleState.accounts[0]\n    const web3 = drizzle.web3\n\n    var id = sidebar_info[\"id\"]\n\n    // Log the inputs for the transaction so that you can always be 100% positive what is being sent\n    var inputs = {\n      \"id\": id,\n      \"will_receive\": will_receive.toString(),\n      \"will_receive_wholenums\": web3.utils.fromWei(will_receive.toString(), 'ether')\n    }\n    console.log(inputs)\n\n    drizzle.contracts.Market.methods.buy(id, will_receive.toString()).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n      .on('receipt', this.flashSuccess)\n      .on('error', this.flashError)\n\n    this.setState({ button_loading: true })\n  }\n\n  numberWithCommas(x) {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n  }\n\n  handleUserChange(value) {\n    var internal_value = 0\n    try{\n      if(/\\S/.test(value)) {\n        internal_value = this.props.drizzle.web3.utils.toWei(value.toString(), 'ether').toString()\n      }\n    } catch (err) {\n      console.log(err)\n      return\n    }\n    this.setState({ ui_amount: value, amount: internal_value })\n  }\n\n  handleAmountPercentageChange(value) {\n    var ui_value = this.props.drizzle.web3.utils.fromWei(value.toString(), 'ether')\n    this.setState({ amount: value.toString(), ui_amount: ui_value })\n  }\n\n  // So we were passed in the most up to date info the older component had.\n  // However this can and will change if it was stale or other people are taking the order.\n  // This keeps the info up to date and fallsback onto the old data if an error happens.\n  getUpdatedInfo() {\n    var { info } = this.state\n    var { sidebar_info } = this.props\n\n    var info_obj = {}\n    if(!info) {\n      return null\n    }\n\n    var buy_amt = info[0]\n    var pay_amt = info[2]\n    if(sidebar_info[\"type\"] === \"BUY\") {\n      info_obj = {\n        \"price\": sidebar_info[\"price\"],\n        \"curr_0_amt\": pay_amt.toString(),\n        \"curr_1_amt\": buy_amt.toString()\n      }\n    } else {\n      info_obj = {\n        \"price\": sidebar_info[\"price\"],\n        \"curr_0_amt\": buy_amt.toString(),\n        \"curr_1_amt\": pay_amt.toString()\n      }\n    }\n\n    return info_obj\n  }\n\n  calcWillReceive() {\n    var { drizzle } = this.props\n    var { amount } = this.state\n    const web3 = drizzle.web3\n\n    // Don't forget that these are flipped from the actual smart contract docs since\n    // WE are the counterparties so buy_amt/pay_amt is flipped from expected\n    var buy_amt = web3.utils.toBN(this.state.info[0])\n    var pay_amt = web3.utils.toBN(this.state.info[2])\n\n    let amount_bn = web3.utils.toBN(amount)\n    try {\n      let will_receive = amount_bn.mul(buy_amt).div(pay_amt)\n      return will_receive\n    } catch(err) {\n      return web3.utils.toBN(\"0\")\n    }\n  }\n\n  getMaxTake() {\n    var { sidebar_info, drizzle } = this.props\n    var { info, currency_0_balance, currency_1_balance } = this.state\n    const web3 = drizzle.web3\n\n    var pay_amt = web3.utils.toBN(info[2])\n    var balance = sidebar_info[\"type\"] === \"BUY\" ? web3.utils.toBN(currency_0_balance) : web3.utils.toBN(currency_1_balance)\n    if(balance.lt(pay_amt)) {\n      return balance\n    } else {\n      return pay_amt\n    }\n  }\n\n  render() {\n    var { visible, amount, ui_amount, currency_0_balance, currency_1_balance, bignumbers, loading, button_loading, button_error, button_success, owner } = this.state\n    var { currencies, toggleSidebar, sidebar_info, drizzle, drizzleState } = this.props\n    const web3 = this.props.drizzle.web3\n\n    // Invert the type since the action do as a taker is the inverse of the action of the maker\n    var action = sidebar_info[\"type\"] === \"BUY\" ? \"SELL\" : \"BUY\"\n    var subtitle = action === \"BUY\" ? (<span className=\"green\">{action}</span>) : (<span className=\"red\">SELL</span>)\n\n    // So we were passed in the most up to date info the older component had.\n    // However this can and will change if it was stale or other people are taking the order.\n    // This keeps the info up to date and fallsback onto the old data if an error happens.\n    var updated_info = this.getUpdatedInfo()\n    if(!updated_info || loading) {\n      return (\n        <div className=\"Side_bar\">\n          <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Side_bar\">\n            <div id=\"Side_bar-x-container\">\n              <Icon name=\"close\" onClick={toggleSidebar} id=\"Side_bar-x\" size=\"large\" />\n            </div>\n            <div id=\"Side_bar-title\">Take Order</div>\n            <Loader active>Loading</Loader>\n          </Sidebar>\n        </div>\n      )\n    }\n\n    // Build object that swaps values for buys and sells so that rendering is simple\n    var giving = {\n      \"currency\": null,\n      \"receive_currency\": null,\n      \"balance\": 0,\n      \"offered\": 0,\n      \"max_take\": this.getMaxTake(),\n      \"will_receive\": this.calcWillReceive(),\n      \"maker\": owner ? <HumanName drizzle={drizzle} drizzleState={drizzleState} address={owner} /> : \"Loading...\",\n    }\n    giving[\"ui_will_receive\"] = Math.round(web3.utils.fromWei(giving[\"will_receive\"].toString()) * 1000) / 1000\n\n    if(action === \"BUY\") {\n      giving[\"currency\"] = currencies[1]\n      giving[\"receive_currency\"] = currencies[0]\n      giving[\"balance\"] = web3.utils.toBN(currency_1_balance)\n      giving[\"ui_balance\"] = Math.round(web3.utils.fromWei(currency_1_balance.toString(), 'ether') * 1000) / 1000\n      giving[\"offered\"] = web3.utils.toBN(updated_info[\"curr_1_amt\"])\n      giving[\"ui_offered\"] = Math.round(web3.utils.fromWei(updated_info[\"curr_1_amt\"], 'ether') * 1000) / 1000\n    } else {\n      giving[\"currency\"] = currencies[0]\n      giving[\"receive_currency\"] = currencies[1]\n      giving[\"balance\"] = web3.utils.toBN(currency_0_balance)\n      giving[\"ui_balance\"] = Math.round(web3.utils.fromWei(currency_0_balance.toString(), 'ether') * 1000) / 1000\n      giving[\"offered\"] = web3.utils.toBN(updated_info[\"curr_0_amt\"])\n      giving[\"ui_offered\"] = Math.round(web3.utils.fromWei(updated_info[\"curr_0_amt\"], 'ether') * 1000) / 1000\n    }\n\n    // Adjust the text on the button if an action or error just occurred\n    var button_text = action + \" \" + currencies[0]\n    button_text = button_success ? \"SUCCESS\" : button_text\n    button_text = button_error ? \"FAILED\" : button_text\n\n    return (\n      <div className=\"Side_bar\">\n        <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Side_bar\">\n          <div id=\"Side_bar-x-container\">\n            <Icon name=\"close\" onClick={toggleSidebar} id=\"Side_bar-x\" size=\"large\" />\n          </div>\n          <div id=\"Side_bar-title\">Take Order</div>\n          <div id=\"Side_bar-subtitle\">How much would you like to {subtitle}?</div>\n          \n          <div id=\"Side_bar-info\">\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Maker:</div>\n              <div className=\"Side_bar-info-content\">{giving[\"maker\"]}</div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Price:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(updated_info[\"price\"])} <span id=\"Side_bar-exchange\">{currencies[1]} / {currencies[0]}</span></div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Balance {giving[\"currency\"]}:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(giving[\"ui_balance\"])} <span id=\"Side_bar-exchange\">{giving[\"currency\"]}</span></div>\n            </div>\n\n            <div className=\"Side_bar-info-item\">\n              <div className=\"Side_bar-info-title\">Offered {giving[\"currency\"]}:</div>\n              <div className=\"Side_bar-info-content\">{this.numberWithCommas(giving[\"ui_offered\"])} <span id=\"Side_bar-exchange\">{giving[\"currency\"]}</span></div>\n            </div>\n          </div>\n\n          <Form size='tiny' id=\"Side_bar-form\">\n            <Form.Field>\n              <div>\n                <div className=\"Side_bar-info-title\">Spend {giving[\"currency\"]}:</div>\n                <Input\n                  label={{ basic: true, content: giving[\"currency\"] }}\n                  labelPosition='right'\n                  placeholder='Enter Amount...'\n                  value={ui_amount}\n                  onChange={(e) => { this.handleUserChange(e.target.value) }}\n                />\n              </div>\n            </Form.Field>\n            <Button.Group id=\"Side_bar-mini-buttons\" size='mini' basic>\n              <Button onClick={ () => this.handleUserChange(\"\") } >0%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].div(bignumbers[4])) } >25%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].div(bignumbers[2])) } >50%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"].mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n              <Button onClick={ () => this.handleAmountPercentageChange(giving[\"max_take\"]) } >100%</Button>\n            </Button.Group>\n          </Form>\n          <div className=\"Side_bar-info-item\">\n            <div className=\"Side_bar-info-title\">Will Receive</div>\n            <div className=\"Side_bar-info-content\">{giving[\"ui_will_receive\"].toString() + \" \" + giving[\"receive_currency\"]}</div>\n          </div>\n\n          <Button className=\"BuySell-button\" loading={button_loading} color={action === \"BUY\" ? \"green\" : \"red\"} disabled={button_text !== action + \" \" + currencies[0] || giving[\"will_receive\"].lte(web3.utils.toBN(\"1000\")) || web3.utils.toBN(amount).gt(giving[\"max_take\"])} onClick={() => this.executeTrade(giving[\"will_receive\"]) }>{button_text}</Button>\n\n        </Sidebar>\n      </div>\n    );\n  }\n}\n\nexport default SideBar\n","import React, { Component } from 'react'\nimport { Grid, Tab } from 'semantic-ui-react'\n\n// import Chart from './chart/chart'\nimport OrderList from './orderlist/orderlist'\nimport LimitOrder from './limitorder/limitorder'\nimport MarketOrder from './marketorder/marketorder'\nimport MyOrders from './myorders/myorders'\nimport Stats from './stats/stats'\nimport MarketHistory from './markethistory/markethistory'\nimport MyHistory from './myhistory/myhistory'\nimport SideBar from './sidebar/sidebar'\n\nimport './market.css'\n\nclass Market extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currencies: [],\n      visible: false,\n      sidebar_info: {\n        \"price\": 0,\n        \"curr_0_amt\": 0,\n        \"curr_1_amt\": 0,\n        \"id\": \"\",\n        \"type\": \"\"\n      },\n      keys: {\n        numBuys: null,\n        numSells: null\n      }\n    }\n  }\n\n  componentWillMount() {\n    var currencies = this.props.pair.split(\"_\")\n    this.setState({currencies})\n  }\n\n  componentDidMount() {\n    var { drizzle } = this.props\n    var { currencies } = this.state\n\n    var buy_token_addr = drizzle.contracts[currencies[0]].address\n    var sell_token_addr = drizzle.contracts[currencies[1]].address\n\n    const numBuysKey = drizzle.contracts.Market.methods.getOfferCount.cacheCall(sell_token_addr, buy_token_addr)\n    const numSellsKey = drizzle.contracts.Market.methods.getOfferCount.cacheCall(buy_token_addr, sell_token_addr)\n\n    let keys = Object.assign({}, this.state.keys)\n    keys[\"numBuys\"] = numBuysKey\n    keys[\"numSells\"] = numSellsKey\n\n    this.setState({currencies, keys})\n  }\n\n  setSidebar = (info) => {\n    this.setState({ sidebar_info: info, visible: true })\n  }\n\n  toggleSidebar = () => {\n    this.setState({ visible: !this.state.visible })\n  }\n\n  render() {\n    var { currencies, keys, visible, sidebar_info } = this.state\n    var { Market } = this.props.drizzleState.contracts\n    var { drizzle, drizzleState } = this.props\n\n    var title = \"Market: \"\n    if(currencies.length === 2) {\n      title = title + currencies[0] + \"/\" + currencies[1]\n    }\n\n    var numBuys = \"Loading...\"\n    var numSells = \"Loading...\"\n\n    if(keys[\"numBuys\"] in Market.getOfferCount) {\n      numBuys = Market.getOfferCount[keys[\"numBuys\"]].value\n    }\n    if(keys[\"numSells\"] in Market.getOfferCount) {\n      numSells = Market.getOfferCount[keys[\"numSells\"]].value\n    }\n\n    if(!numBuys) {\n      numBuys = \"Error...\"\n    }\n    if(!numSells) {\n      numSells = \"Error...\"\n    }\n\n    const activity_panes = [\n      { menuItem: 'Open Orders', render: () => <Tab.Pane className=\"Market-tab-pane\"><MyOrders currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n      { menuItem: 'My History', render: () => <Tab.Pane className=\"Market-tab-pane\"><MyHistory currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n      { menuItem: 'Market History', render: () => <Tab.Pane className=\"Market-tab-pane\"><MarketHistory currencies={currencies} drizzle={drizzle} drizzleState={drizzleState} /></Tab.Pane> },\n    ]\n\n    const buy_panes = [\n      { menuItem: 'Limit Order', render: () => <Tab.Pane className=\"Market-tab-pane\"><LimitOrder currencies={currencies} drizzle={drizzle} drizzleState={ drizzleState } /></Tab.Pane> },\n      { menuItem: 'Market Order', render: () => <Tab.Pane className=\"Market-tab-pane\"><MarketOrder currencies={currencies} drizzle={drizzle} drizzleState={ drizzleState } /></Tab.Pane> }\n    ]\n\n    return (\n      <div className=\"Market\">\n        <SideBar currencies={currencies} toggleSidebar={this.toggleSidebar} sidebar_info={sidebar_info} visible={visible} drizzle={drizzle} drizzleState={ drizzleState } />\n        <div id=\"Market-title\"><span className=\"Market-h1\">{title}</span></div>\n\n        <div className=\"Market-headers\">24-Hour Market Stats</div>\n        <div id=\"Market-stats\"><Stats currencies={currencies} drizzle={drizzle} drizzleState={ drizzleState } /></div>\n\n        <div className=\"Market-headers\">Order Center</div>\n        <div id=\"Market-buysell\">\n          <Tab menu={{ fluid: true, tabular: true, attached: 'top' }} panes={buy_panes} />\n        </div>\n \n        <div className=\"Market-headers\">Activity Center</div>\n        <div id=\"Market-activity-pane\">\n          <Tab menu={{ fluid: true, tabular: true, attached: 'top' }} panes={activity_panes} />\n        </div>\n        \n        <Grid divided id=\"Market-orderlists\">\n          <Grid.Row>\n            <Grid.Column className=\"Market-orderlist\" computer={8} tablet={8} mobile={16}>\n              <div className=\"Market-headers\">{currencies[0]} <span className=\"green\">Buy</span> Orders ({numBuys})</div>\n              <OrderList currencies={currencies} type={\"BUY\"} drizzle={drizzle} drizzleState={ drizzleState } setSidebar={this.setSidebar} />\n            </Grid.Column>\n            <Grid.Column className=\"Market-orderlist\" computer={8} tablet={8} mobile={16}>\n              <div className=\"Market-headers\">{currencies[0]} <span className=\"red\">Sell</span> Orders ({numSells})</div>\n              <OrderList currencies={currencies} type={\"SELL\"} drizzle={drizzle} drizzleState={ drizzleState } setSidebar={this.setSidebar} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      \n      </div>\n    );\n  }\n}\n\nexport default Market\n","import React, { Component } from 'react'\nimport { Transition } from 'semantic-ui-react'\nimport './home.css'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate() {\n  }\n\n  render() {\n    return (\n      <div id=\"Home\">\n        <Transition transitionOnMount={true} animation='fade up' duration={1500}>\n          <div id=\"Home-title\">\n            OasisX\n          </div>\n        </Transition>\n        <Transition transitionOnMount={true} animation='fade up' duration={3500}>\n          <div id=\"Home-subtitle\">\n            The fastest UI for Oasis.\n          </div>\n        </Transition>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport { Input, Form, Button } from 'semantic-ui-react'\n\nimport './wrapstation.css'\n\nclass WrapStation extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      amount_wrap: '0',\n      ui_amount_wrap: '',\n      amount_unwrap: '0',\n      ui_amount_unwrap: '',\n      bignumbers: {},\n      loading: [false, false],\n      error: [false, false],\n      success: [false, false]\n    }\n\n    this.flashSuccess = this.flashSuccess.bind(this)\n    this.flashError = this.flashError.bind(this)\n  }\n\n  componentDidMount() {\n    var bignumbers = {}\n    for(var i = 0; i <= 10; i++) {\n      var key = i\n      bignumbers[key] = this.props.drizzle.web3.utils.toBN(key)\n    }\n\n    this.setState({ bignumbers })\n  }\n\n  handlePercentUpdate(name, value) {\n    var ui_value = this.props.drizzle.web3.utils.fromWei(value.toString(), 'ether')\n    if(name === \"amount_wrap\") {\n      this.setState({ amount_wrap: value, ui_amount_wrap: ui_value })\n    } else if(name === \"amount_unwrap\") {\n      this.setState({ amount_unwrap: value, ui_amount_unwrap: ui_value })\n    } else {\n      return\n    }\n  }\n\n  handleUserUpdate(name, value) {\n    var internal_value = 0\n    try{\n      if(/\\S/.test(value)) {\n        internal_value = this.props.drizzle.web3.utils.toWei(value.toString(), 'ether')\n      }\n    } catch (err) {\n      console.log(err)\n      return\n    }\n\n    if(name === \"ui_amount_wrap\") {\n      this.setState({ ui_amount_wrap: value, amount_wrap: internal_value })\n    } else if(name === \"ui_amount_unwrap\") {\n      this.setState({ ui_amount_unwrap: value, amount_unwrap: internal_value })\n    } else {\n      return\n    }\n  }\n\n\n  flashSuccess(index) {\n    var { loading, success, error } = this.state\n    loading[index] = false\n    success[index] = true\n    error[index] = false\n    this.setState({ loading, success, error })\n    setTimeout(() => this.reset(index), 1500)\n  }\n\n  flashError(index) {\n    var { loading, success, error } = this.state\n    loading[index] = false\n    success[index] = false\n    error[index] = true\n    this.setState({ loading, success, error })\n    setTimeout(() => {\n      var { loading, success, error } = this.state\n      loading[index] = false\n      success[index] = false\n      error[index] = false\n      this.setState({ error })\n    }, 1500)\n  }\n\n  reset(index) {\n    var { loading, success, error, amount_wrap, amount_unwrap, ui_amount_wrap, ui_amount_unwrap } = this.state\n    loading[index] = false\n    success[index] = false\n    error[index] = false\n    if(index === 0) {\n      amount_wrap = '0'\n      ui_amount_wrap = ''\n    }\n    if(index === 1) {\n      amount_unwrap = '0'\n      ui_amount_unwrap = ''\n    }\n    this.setState({ loading, success, error, amount_wrap, amount_unwrap, ui_amount_wrap, ui_amount_unwrap })\n  }\n\n  onWrap = () => {\n    // Grab the wrap function from the contract instance and the account and amount we want to execute it with\n    const deposit = this.props.drizzle.contracts.WETH.methods.deposit\n    const account = this.props.drizzleState.accounts[0]\n    var amount = this.state.amount_wrap\n    var web3 = this.props.drizzle.web3\n\n    // Need to check if the amount value is an empty string/undefined/null and that it's greater than 0\n    if(amount && amount > 0) {\n      var { loading } = this.state\n      loading[0] = true\n      this.setState({ loading })\n      console.log(\"SENDING \" + amount + \" TO WRAPPER...\")\n      deposit().send({value: amount, from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n        .on('receipt', () => this.flashSuccess(0))\n        .on('error', () => this.flashError(0))\n    } else {\n      console.log(\"Error: No amount chosen\")\n    }\n  }\n\n  onUnwrap = () => {\n    const withdraw = this.props.drizzle.contracts.WETH.methods.withdraw\n    const account = this.props.drizzleState.accounts[0]\n    var amount = this.state.amount_unwrap\n    var web3 = this.props.drizzle.web3\n\n    if(amount && amount > 0) {\n      var { loading } = this.state\n      loading[1] = true\n      this.setState({ loading })\n      console.log(\"SENDING \" + amount + \" TO UNWRAPPER...\")\n      withdraw(amount.toString()).send({from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n        .on('receipt', () => this.flashSuccess(1))\n        .on('error', () => this.flashError(1))\n    } else {\n      console.log(\"Error: No amount chosen\")\n    }\n  }\n\n  render() {\n    var { weth_balance, eth_balance } = this.props\n    var { ui_amount_wrap, ui_amount_unwrap, bignumbers, loading, success, error } = this.state\n\n    // Convert to BigNumbers since they will have potential math done on them (risk of overflow/underflow)\n    eth_balance = this.props.drizzle.web3.utils.toBN(eth_balance)\n    weth_balance = this.props.drizzle.web3.utils.toBN(weth_balance)\n\n    var button_text = [\"WRAP\", \"UNWRAP\"]\n    for(var i = 0; i < button_text.length; i++) {\n      if(success[i]) {\n        button_text[i] = \"SUCCESS\"\n      }\n      if(error[i]) {\n        button_text[i] = \"FAILED\"\n      }\n    }\n\n    return (\n      <div className=\"WrapStation\">\n        <div id=\"WrapStation-title\">Wrap / Unwrap</div>\n        <Form onSubmit={this.handleSubmit} size='tiny' id=\"WrapStation-form\">\n          <div className=\"WrapStation-headers\">Wrap <span id=\"WrapStation-warning\"><span className=\"red\">WARNING:</span> DO NOT WRAP ALL YOUR ETHER</span></div>\n          <Form.Group unstackable className=\"WrapStation-formgroup\">\n            <Form.Field width={11}>\n              <Input\n                label={{ basic: true, content: \"ETH\" }}\n                labelPosition='right'\n                placeholder='Enter Amount ETH...'\n                value={ui_amount_wrap}\n                disabled={ loading[0] || error[0] || success[0] }\n                onChange={(e) => { this.handleUserUpdate('ui_amount_wrap', e.target.value) }}\n              />\n            </Form.Field>\n            <Form.Button disabled={ loading[0] || error[0] || success[0] || ui_amount_wrap === \"\" } loading={loading[0]} width={4} className=\"WrapStation-button\" color={error[0] ? 'red' : 'green'} size='small' onClick={ () => this.onWrap() } >{button_text[0]}</Form.Button>\n          </Form.Group>\n          <Button.Group className=\"WrapStation-mini-buttons\" size='mini' basic inverted>\n            <Button disabled={ loading[0] || error[0] || success[0] } onClick={ () => this.handleUserUpdate(\"ui_amount_wrap\", \"\") } >0%</Button>\n            <Button disabled={ loading[0] || error[0] || success[0] } onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.div(bignumbers[4])) } >25%</Button>\n            <Button disabled={ loading[0] || error[0] || success[0] } onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.div(bignumbers[2])) } >50%</Button>\n            <Button disabled={ loading[0] || error[0] || success[0] } onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n            <Button disabled={ loading[0] || error[0] || success[0] } onClick={ () => this.handlePercentUpdate(\"amount_wrap\", eth_balance.mul(bignumbers[9]).div(bignumbers[10])) } >90%</Button>\n          </Button.Group>\n          <div className=\"WrapStation-headers\">Unwrap</div>\n          <Form.Group unstackable className=\"WrapStation-formgroup\">\n            <Form.Field width={10}>\n              <Input\n                label={{ basic: true, content: \"WETH\" }}\n                labelPosition='right'\n                placeholder='Enter Amount WETH...'\n                value={ui_amount_unwrap}\n                disabled={ loading[1] || error[1] || success[1] }\n                onChange={(e) => { this.handleUserUpdate('ui_amount_unwrap', e.target.value) }}\n              />\n            </Form.Field>\n            <Form.Button disabled={ loading[1] || error[1] || success[1] || ui_amount_unwrap === \"\" } loading={loading[1]} width={4} className=\"WrapStation-button\" color={error[1] ? 'red' : 'green'} size='small' onClick={ () => this.onUnwrap() } >{button_text[1]}</Form.Button>\n          </Form.Group>\n          <Button.Group className=\"WrapStation-mini-buttons\" size='mini' basic inverted>\n            <Button disabled={ loading[1] || error[1] || success[1] } onClick={ () => this.handleUserUpdate(\"ui_amount_unwrap\", \"\") } >0%</Button>\n            <Button disabled={ loading[1] || error[1] || success[1] } onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.div(bignumbers[4])) } >25%</Button>\n            <Button disabled={ loading[1] || error[1] || success[1] } onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.div(bignumbers[2])) } >50%</Button>\n            <Button disabled={ loading[1] || error[1] || success[1] } onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance.mul(bignumbers[3]).div(bignumbers[4])) } >75%</Button>\n            <Button disabled={ loading[1] || error[1] || success[1] } onClick={ () => this.handlePercentUpdate(\"amount_unwrap\", weth_balance) } >100%</Button>\n          </Button.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default WrapStation\n","import React, { Component } from 'react'\nimport { Header, Table, Checkbox, Icon } from 'semantic-ui-react'\nimport './infobar.css'\n\nimport WrapStation from './wrapstation/wrapstation'\nimport HumanName from '../utils/humanname/humanname'\n\nclass Infobar extends Component {\n  constructor(props, context) {\n    super(props)\n    this.state = {\n      currencies: {\n        \"WETH\": {\n          balance: 0,\n          approved: 0\n        },\n        \"DAI\": {\n          balance: 0,\n          approved: 0\n        },\n        \"MKR\": {\n          balance: 0,\n          approved: 0\n        },\n        \"ETH\": {\n          balance: 0,\n          approved: 0\n        }\n      }\n    }\n\n    this.updateInfo = this.updateInfo.bind(this)\n  }\n\n  componentDidMount() {\n    this.updateInfo()\n  }\n\n  async updateInfo() {\n    const { drizzle, drizzleState } = this.props\n    let account = drizzleState.accounts[0]\n    let market_address = drizzle.contracts.Market.address\n    \n    const weth_balance = await drizzle.contracts.WETH.methods.balanceOf(account).call()\n    const dai_balance = await drizzle.contracts.DAI.methods.balanceOf(account).call()\n    const mkr_balance = await drizzle.contracts.MKR.methods.balanceOf(account).call()\n    \n    const weth_approval = await drizzle.contracts.WETH.methods.allowance(account, market_address).call()\n    const dai_approval = await drizzle.contracts.DAI.methods.allowance(account, market_address).call()\n    const mkr_approval = await drizzle.contracts.MKR.methods.allowance(account, market_address).call()\n    \n    var eth_balance = drizzleState.accountBalances[account]\n\n    var currencies = {\n      \"WETH\": {\n        balance: weth_balance,\n        approved: weth_approval\n      },\n      \"DAI\": {\n        balance: dai_balance,\n        approved: dai_approval\n      },\n      \"MKR\": {\n        balance: mkr_balance,\n        approved: mkr_approval\n      },\n      \"ETH\": {\n        balance: eth_balance,\n        approved: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n      }\n    }\n\n    this.setState({ currencies })\n\n    setTimeout(this.updateInfo, 5000)\n  }\n\n  approveCurrencyForAmount(currency, amount) {\n    var { drizzle, drizzleState } = this.props\n    var account = drizzleState.accounts[0]\n    let market_address = drizzle.contracts.Market.address\n    var web3 = drizzle.web3\n\n    if(currency in drizzle.contracts) {\n      var currency_contract = drizzle.contracts[currency]\n      \n      var approve = currency_contract.methods.approve\n      approve.cacheSend(market_address, amount, {from: account, gasPrice: web3.utils.toWei('5', 'gwei') })\n    }\n  }\n\n  approveCurrency(currency) {\n    this.approveCurrencyForAmount(currency, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\")\n  }\n\n  unapproveCurrency(currency) {\n    this.approveCurrencyForAmount(currency, \"0\")\n  }\n\n  toggleApproval(currency, current_approval) {\n    let new_approval = !current_approval\n    if(new_approval) {\n      this.approveCurrency(currency)\n    } else {\n      this.unapproveCurrency(currency)\n    }\n  }\n\n  getUIBalance(raw_balance) {\n    let UI_balance = raw_balance\n    if(raw_balance != null) {\n      UI_balance = Math.round(this.props.drizzle.web3.utils.fromWei(raw_balance.toString(), 'ether') * 1000) / 1000\n    } else {\n      UI_balance = \"Error...\"\n    }\n    return UI_balance    \n  }\n\n  getUIAllowance(raw_balance, raw_allowance) {\n    const web3 = this.props.drizzle.web3\n    let UI_allowance = false\n    raw_allowance = web3.utils.toBN(raw_allowance)\n    let balance = web3.utils.toBN(raw_balance)\n    if(raw_allowance.gte(balance)) {\n      UI_allowance = true\n    } else {\n      UI_allowance = false\n    }\n    return UI_allowance\n  }\n\n  render() {\n    const { currencies } = this.state\n    const { padded, closeSidebar, drizzle, drizzleState } = this.props\n    let account = drizzleState.accounts[0]\n\n    const vals = Object.keys(currencies).map((key) => {\n      var obj = {}\n      obj[\"name\"] = key\n      obj[\"balance\"] = \"0\"\n      obj[\"approved\"] = false\n      var raw_balance = currencies[key][\"balance\"]\n      var raw_allowance = currencies[key][\"approved\"]\n      if(raw_balance && raw_allowance) {\n        obj[\"balance\"] = this.getUIBalance(raw_balance)\n        obj[\"approved\"] = this.getUIAllowance(raw_balance, raw_allowance)      \n      }\n      return obj\n    })\n\n    var ui_account = account\n    var x_icon = <Icon name=\"close\" id=\"Infobar-x\" size=\"large\" onClick={closeSidebar} />\n    if(padded) {\n      x_icon = null\n    }\n\n    return (\n      <div id='Infobar'>\n        <div className='Infobar-header'><HumanName drizzle={drizzle} drizzleState={drizzleState} address={ui_account} />{x_icon}</div>\n        <Table basic='very' padded={\"very\"} striped unstackable id=\"Infobar-table\">\n          <Table.Header id=\"Infobar-table-header\">\n            <Table.Row>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Token</Table.HeaderCell>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Balance</Table.HeaderCell>\n              <Table.HeaderCell className='Infobar-table-entry' textAlign='left'>Approved</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {vals.map((item, index) => {\n              return (\n                <Table.Row key={index}>\n                  <Table.Cell>\n                    <Header className='Infobar-table-entry' textAlign='left'>{item.name}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell>\n                    <Header className='Infobar-table-entry' textAlign='left'>{item.balance}</Header>\n                  </Table.Cell>\n\n                  <Table.Cell  textAlign='left'>\n                    <Checkbox toggle disabled={item.name === \"ETH\"} checked={item.approved} onClick={ () => this.toggleApproval(item.name, item.approved) } />\n                  </Table.Cell>\n                </Table.Row>\n              )\n            })}\n          </Table.Body>\n        </Table>\n\n        <WrapStation drizzle={drizzle} drizzleState={drizzleState} weth_balance={currencies[\"WETH\"][\"balance\"]} eth_balance={currencies[\"ETH\"][\"balance\"]} />\n      </div>\n    )\n  }\n}\n\nexport default Infobar;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Responsive, Icon, Dropdown, Sidebar, Segment } from 'semantic-ui-react'\nimport './navbar.css'\nimport logo from '../../images/x.svg'\nimport Infobar from '../infobar/infobar'\n\nclass Navbar extends Component {\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeItem: '',\n      visible: false\n    }\n  }\n\n  componentDidUpdate() {\n  }\n\n  toggleVisible = () => {\n    this.setState({ visible: !this.state.visible })\n  }\n\n  render() {\n    const { children, drizzle, drizzleState } = this.props\n    const { activeItem, visible } = this.state\n\n    // var title = \"OasisX\"\n    var other_buttons = []\n    other_buttons.push(\n      {\n        name: 'WETH/DAI',\n        href: '/WETH_DAI' \n      },\n      {\n        name: 'MKR/WETH',\n        href: '/MKR_WETH'\n      },\n      {\n        name: 'MKR/DAI',\n        href: '/MKR_DAI'\n      }\n    )\n\n\n    return (\n      <div>\n        <Responsive {...Responsive.onlyMobile}>\n          <Menu \n            borderless\n            fixed='top'\n            id='Navbar-mobile'\n          >\n            <Menu.Item\n              name='Home'\n              active={activeItem === 'Home'}\n              href='/'\n              className='Navbar-item'\n            >\n              <div className='Navbar-button-mobile' id='Navbar-logo-container'><img src={logo} alt='logo' id='Navbar-logo-mobile' /></div>\n            </Menu.Item>\n            <Dropdown item text='Markets' className='Navbar-dropdown'>\n              <Dropdown.Menu>\n                {\n                  other_buttons.map((button, idx) => {\n                    return (\n                        <Dropdown.Item\n                          name={button.name}\n                          active={activeItem === button.name}\n                          className='Navbar-item'\n                          as={Link}\n                          to={button.href}\n                          key={idx}\n                        >\n                        {button.name}\n                      </Dropdown.Item>\n                    )\n                  })\n                }\n              </Dropdown.Menu>\n            </Dropdown>\n            <Menu.Menu position='right'>\n              <Menu.Item>\n                <Icon name='sidebar' inverted onClick={ this.toggleVisible } />\n              </Menu.Item>                \n            </Menu.Menu>\n          </Menu>\n          <Sidebar as={Segment} animation=\"overlay\" direction=\"right\" visible={visible} id=\"Navbar-Side_info_bar\">\n            <Infobar drizzle={drizzle} drizzleState={ drizzleState } padded={false} closeSidebar={this.toggleVisible} />\n          </Sidebar>\n          { children }\n        </Responsive>\n\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n          <Menu \n            secondary \n            vertical\n            size='mini'\n            id='Navbar'\n          >\n            <Menu.Item\n              name='Home'\n              className='Navbar-item'\n              as={Link}\n              to={'/'}\n            >\n              <div className='Navbar-button' id='Navbar-logo-container'><img src={logo} alt='logo' className='Navbar-icon' /></div>\n            </Menu.Item>\n            {\n              other_buttons.map((button, idx) => {\n                return (\n                    <Menu.Item\n                      name={button.name}\n                      active={activeItem === button.name}\n                      className='Navbar-item'\n                      onClick={this.handleToggle}\n                      as={Link}\n                      to={button.href}\n                      key={idx}\n                    >\n                    <div className='Navbar-button'>{button.name}</div>\n                  </Menu.Item>\n                )\n              })\n            }\n          </Menu>\n          { children }\n        </Responsive>\n      </div>\n    )\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { Responsive } from 'semantic-ui-react'\n\nimport './App.css'\n\nimport Market from '../market/market'\nimport Home from '../home/home'\nimport Navbar from '../navbar/navbar'\nimport Infobar from '../infobar/infobar'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      loading: true,\n      drizzleState: null\n    }\n  }\n\n  componentDidMount() {\n    const { drizzle } = this.props\n\n    // Subscribe to changes in the store and assign to unsubscribe for later release\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      // Every time the store updates we update the state and pass it to all the children\n      const drizzleState = drizzle.store.getState()\n\n      // If the entire setup is initialized then we update local component states\n      if(drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState })\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  render() {\n    var { loading, drizzleState } = this.state\n    var { drizzle } = this.props\n\n    if(loading) {\n      return <div id=\"App-loading-screen\">Connecting to Ethereum...</div>\n    }\n    else {\n      return (\n        <div className=\"App\">\n          <HashRouter>\n            <div>\n              <Navbar drizzle={drizzle} drizzleState={ drizzleState } />\n              <div id=\"App_market_container\">\n                  <Switch>\n                    <Route exact path='/' render={() => <Home drizzle={drizzle} drizzleState={ drizzleState } />} />\n                    <Route exact path='/WETH_DAI' render={() => <Market key={'WETH_DAI'} drizzle={drizzle} drizzleState={ drizzleState } pair={'WETH_DAI'} />} />\n                    <Route exact path='/MKR_WETH' render={() => <Market key={'MKR_WETH'} drizzle={drizzle} drizzleState={ drizzleState } pair={'MKR_WETH'} />} />\n                    <Route exact path='/MKR_DAI' render={() => <Market  key={'MKR_DAI'} drizzle={drizzle} drizzleState={ drizzleState } pair={'MKR_DAI'} />} />\n                  </Switch>\n              </div>\n            </div>\n          </HashRouter>\n          <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n            <Infobar drizzle={drizzle} drizzleState={ drizzleState } padded={true} />\n          </Responsive>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport './index.css';\nimport App from './containers/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { Drizzle, generateStore } from 'drizzle'\n\nimport Web3 from 'web3';\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:9545\")\n// web3.currentProvider.enable()\n\nconst config = require(\"./config\")\nconst erc20Abi = require(\"./abi/standard-token/erc20\")\nconst WEthAbi = require(\"./abi/standard-token/ds-eth-token\")\nconst MatchingMarketAbi = require(\"./abi/maker-otc/matching-market\");\nconst SupportMethodsAbi = require(\"./abi/otc-support-methods/otc-support-methods\")\n\nconst WETH = new web3.eth.Contract(WEthAbi.interface, config[\"tokens\"][\"main\"][\"W-ETH\"])\nconst DAI = new web3.eth.Contract(erc20Abi.interface, config[\"tokens\"][\"main\"][\"DAI\"])\nconst MKR = new web3.eth.Contract(erc20Abi.interface, config[\"tokens\"][\"main\"][\"MKR\"])\nconst market = new web3.eth.Contract(MatchingMarketAbi.interface, config[\"market\"][\"main\"][\"address\"])\nconst supportMethods = new web3.eth.Contract(SupportMethodsAbi.interface, config[\"otcSupportMethods\"][\"main\"][\"address\"])\n\nconst options = {\n\tcontracts: [\n\t\t{\n\t\t\tcontractName: 'WETH',\n\t\t\tweb3Contract: WETH\n\t\t},\n\t\t{\n\t\t\tcontractName: 'DAI',\n\t\t\tweb3Contract: DAI\n\t\t},\n\t\t{\n\t\t\tcontractName: 'MKR',\n\t\t\tweb3Contract: MKR\n\t\t},\n\t\t{\n\t\t\tcontractName: 'Market',\n\t\t\tweb3Contract: market\n\t\t},\n\t\t{\n\t\t\tcontractName: 'SupportMethods',\n\t\t\tweb3Contract: supportMethods\n\t\t}\n\t],\n\tevents: {\n\t\tMarket: ['LogTake']\n\t},\n\tpolls: {\n\t\taccounts: 3000,\n\t\tblocks: 3000\n\t},\n\tsyncAlways: false\n}\n\nconst drizzleStore = generateStore(options)\nconst drizzle = new Drizzle(options, drizzleStore)\n\nReactDOM.render(<App drizzle={drizzle} />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}